{"name":"rke","displayName":"Rancher Kubernetes Engine (RKE)","version":"3.4.0-alpha.1698214998+3ae31d80.dirty","description":"A Pulumi package for creating and managing rke cloud resources.","keywords":["pulumi","rke"],"homepage":"https://pulumi.io","license":"Apache-2.0","attribution":"This Pulumi package is based on the [`rke` Terraform Provider](https://github.com/rancher/terraform-provider-rke).","repository":"https://github.com/pulumi/pulumi-rke","meta":{"moduleFormat":"(.*)(?:/[^/]*)"},"language":{"csharp":{"packageReferences":{"Pulumi":"3.*"},"namespaces":{"index":"index","rke":"Rke"},"compatibility":"tfbridge20"},"go":{"importBasePath":"github.com/pulumi/pulumi-rke/sdk/v3/go/rke","generateResourceContainerTypes":true,"generateExtraInputTypes":true},"nodejs":{"packageDescription":"A Pulumi package for creating and managing rke cloud resources.","readme":"\u003e This provider is a derived work of the [Terraform Provider](https://github.com/rancher/terraform-provider-rke)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-rke` repo](https://github.com/pulumi/pulumi-rke/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-rke` repo](https://github.com/rancher/terraform-provider-rke/issues).","dependencies":{"@pulumi/pulumi":"^3.0.0"},"devDependencies":{"@types/mime":"^2.0.0","@types/node":"^10.0.0"},"compatibility":"tfbridge20","disableUnionOutputTypes":true},"python":{"requires":{"pulumi":"\u003e=3.0.0,\u003c4.0.0"},"readme":"\u003e This provider is a derived work of the [Terraform Provider](https://github.com/rancher/terraform-provider-rke)\n\u003e distributed under [MIT](https://mit-license.org/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-rke` repo](https://github.com/pulumi/pulumi-rke/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-rke` repo](https://github.com/rancher/terraform-provider-rke/issues).","compatibility":"tfbridge20","pyproject":{"enabled":true}}},"config":{"variables":{"debug":{"type":"boolean","default":false,"defaultInfo":{"environment":["RKE_DEBUG"]}},"logFile":{"type":"string","defaultInfo":{"environment":["RKE_LOG_FILE"]}}}},"types":{"rke:index/ClusterAuthentication:ClusterAuthentication":{"properties":{"sans":{"type":"array","items":{"type":"string"},"description":"List of additional hostnames and IPs to include in the api server PKI cert (list)\n"},"strategy":{"type":"string","description":"Authentication strategy that will be used in RKE k8s cluster. Default: `x509` (string)\n"},"webhook":{"$ref":"#/types/rke:index/ClusterAuthenticationWebhook:ClusterAuthenticationWebhook","description":"Webhook configuration options (list maxitem: 1)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["sans","webhook"]}}},"rke:index/ClusterAuthenticationWebhook:ClusterAuthenticationWebhook":{"properties":{"cacheTimeout":{"type":"string","description":"Controls how long to cache authentication decisions (string)\n"},"configFile":{"type":"string","description":"Multiline string that represent a custom webhook config file (string)\n"}},"type":"object"},"rke:index/ClusterAuthorization:ClusterAuthorization":{"properties":{"mode":{"type":"string","description":"RKE mode for authorization. `rbac` and `none` modes are available. Default `rbac` (string)\n"},"options":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Network provider options (map)\n"}},"type":"object"},"rke:index/ClusterBastionHost:ClusterBastionHost":{"properties":{"address":{"type":"string","description":"Address ip for node (string)\n"},"ignoreProxyEnvVars":{"type":"boolean","description":"Ignore proxy env vars at Bastion Host? Default: `false` (bool)\n"},"port":{"type":"string","description":"Port used for SSH communication (string)\n"},"sshAgentAuth":{"type":"boolean","description":"SSH Agent Auth enable (bool)\n"},"sshCert":{"type":"string","description":"SSH Certificate (string)\n","secret":true},"sshCertPath":{"type":"string","description":"SSH Certificate Path (string)\n"},"sshKey":{"type":"string","description":"SSH Private Key (string)\n","secret":true},"sshKeyPath":{"type":"string","description":"SSH Private Key Path (string)\n"},"user":{"type":"string","description":"Registry user (string)\n"}},"type":"object","required":["address","user"],"language":{"nodejs":{"requiredOutputs":["address","sshAgentAuth","sshCertPath","sshKeyPath","user"]}}},"rke:index/ClusterCertificate:ClusterCertificate":{"properties":{"certificate":{"type":"string","secret":true},"commonName":{"type":"string"},"config":{"type":"string","secret":true},"configEnvName":{"type":"string"},"configPath":{"type":"string"},"envName":{"type":"string"},"id":{"type":"string","description":"(Computed) The ID of the resource (string)\n"},"key":{"type":"string","description":"TLS key for etcd service (string)\n","secret":true},"keyEnvName":{"type":"string"},"keyPath":{"type":"string"},"name":{"type":"string","description":"Name of virtualcenter config for Vsphere Cloud Provider config (string)\n"},"ouName":{"type":"string"},"path":{"type":"string","description":"Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["certificate","commonName","config","configEnvName","configPath","envName","id","key","keyEnvName","keyPath","name","ouName","path"]}}},"rke:index/ClusterCloudProvider:ClusterCloudProvider":{"properties":{"awsCloudConfig":{"$ref":"#/types/rke:index/ClusterCloudProviderAwsCloudConfig:ClusterCloudProviderAwsCloudConfig","description":"Use aws_cloud_provider instead\n","deprecationMessage":"Use aws_cloud_provider instead"},"awsCloudProvider":{"$ref":"#/types/rke:index/ClusterCloudProviderAwsCloudProvider:ClusterCloudProviderAwsCloudProvider","description":"AWS Cloud Provider config [rke-aws-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/aws/) (list maxitems:1)\n"},"azureCloudConfig":{"$ref":"#/types/rke:index/ClusterCloudProviderAzureCloudConfig:ClusterCloudProviderAzureCloudConfig","description":"Use azure_cloud_provider instead\n","deprecationMessage":"Use azure_cloud_provider instead"},"azureCloudProvider":{"$ref":"#/types/rke:index/ClusterCloudProviderAzureCloudProvider:ClusterCloudProviderAzureCloudProvider","description":"Azure Cloud Provider config [rke-azure-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/azure/) (list maxitems:1)\n"},"customCloudConfig":{"type":"string","description":"Use custom_cloud_provider instead\n","deprecationMessage":"Use custom_cloud_provider instead"},"customCloudProvider":{"type":"string","description":"Custom Cloud Provider config (string)\n"},"name":{"type":"string","description":"Name of virtualcenter config for Vsphere Cloud Provider config (string)\n"},"openstackCloudConfig":{"$ref":"#/types/rke:index/ClusterCloudProviderOpenstackCloudConfig:ClusterCloudProviderOpenstackCloudConfig","description":"Use openstack_cloud_provider instead\n","deprecationMessage":"Use openstack_cloud_provider instead"},"openstackCloudProvider":{"$ref":"#/types/rke:index/ClusterCloudProviderOpenstackCloudProvider:ClusterCloudProviderOpenstackCloudProvider","description":"Openstack Cloud Provider config [rke-openstack-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/openstack/) (list maxitems:1)\n"},"vsphereCloudConfig":{"$ref":"#/types/rke:index/ClusterCloudProviderVsphereCloudConfig:ClusterCloudProviderVsphereCloudConfig","description":"Use vsphere_cloud_provider instead\n","deprecationMessage":"Use vsphere_cloud_provider instead"},"vsphereCloudProvider":{"$ref":"#/types/rke:index/ClusterCloudProviderVsphereCloudProvider:ClusterCloudProviderVsphereCloudProvider","description":"Vsphere Cloud Provider config [rke-vsphere-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/vsphere/) Extra argument `name` is required on `virtual_center` configuration. (list maxitems:1)\n"}},"type":"object","required":["name"]},"rke:index/ClusterCloudProviderAwsCloudConfig:ClusterCloudProviderAwsCloudConfig":{"properties":{"global":{"$ref":"#/types/rke:index/ClusterCloudProviderAwsCloudConfigGlobal:ClusterCloudProviderAwsCloudConfigGlobal","description":"(list maxitems:1)\n"},"serviceOverrides":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterCloudProviderAwsCloudConfigServiceOverride:ClusterCloudProviderAwsCloudConfigServiceOverride"},"description":"(list)\n"}},"type":"object"},"rke:index/ClusterCloudProviderAwsCloudConfigGlobal:ClusterCloudProviderAwsCloudConfigGlobal":{"properties":{"disableSecurityGroupIngress":{"type":"boolean","description":"Disables the automatic ingress creation. Default `false` (bool)\n"},"disableStrictZoneCheck":{"type":"boolean","description":"Setting this to true will disable the check and provide a warning that the check was skipped. Default `false` (bool)\n"},"elbSecurityGroup":{"type":"string","description":"Use these ELB security groups instead create new (string)\n"},"kubernetesClusterId":{"type":"string","description":"The cluster id we'll use to identify our cluster resources (string)\n"},"kubernetesClusterTag":{"type":"string","description":"Legacy cluster id we'll use to identify our cluster resources (string)\n"},"roleArn":{"type":"string","description":"IAM role to assume when interaction with AWS APIs (string)\n"},"routeTableId":{"type":"string","description":"Enables using a specific RouteTable (string)\n"},"subnetId":{"type":"string","description":"(string)\n"},"vpc":{"type":"string","description":"The AWS VPC flag enables the possibility to run the master components on a different aws account, on a different cloud provider or on-premises. If the flag is set also the KubernetesClusterTag must be provided (string)\n"},"zone":{"type":"string","description":"The AWS zone (string)\n"}},"type":"object"},"rke:index/ClusterCloudProviderAwsCloudConfigServiceOverride:ClusterCloudProviderAwsCloudConfigServiceOverride":{"properties":{"key":{"type":"string","description":"TLS key for etcd service (string)\n","deprecationMessage":"Use service instead"},"region":{"type":"string","description":"Region for S3 service (string)\n"},"service":{"type":"string","description":"(string)\n"},"signingMethod":{"type":"string","description":"(string)\n"},"signingName":{"type":"string","description":"(string)\n"},"signingRegion":{"type":"string","description":"(string)\n"},"url":{"type":"string","description":"Registry URL (string)\n"}},"type":"object","required":["service"],"language":{"nodejs":{"requiredOutputs":["service","signingMethod"]}}},"rke:index/ClusterCloudProviderAwsCloudProvider:ClusterCloudProviderAwsCloudProvider":{"properties":{"global":{"$ref":"#/types/rke:index/ClusterCloudProviderAwsCloudProviderGlobal:ClusterCloudProviderAwsCloudProviderGlobal","description":"(list maxitems:1)\n"},"serviceOverrides":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterCloudProviderAwsCloudProviderServiceOverride:ClusterCloudProviderAwsCloudProviderServiceOverride"},"description":"(list)\n"}},"type":"object"},"rke:index/ClusterCloudProviderAwsCloudProviderGlobal:ClusterCloudProviderAwsCloudProviderGlobal":{"properties":{"disableSecurityGroupIngress":{"type":"boolean","description":"Disables the automatic ingress creation. Default `false` (bool)\n"},"disableStrictZoneCheck":{"type":"boolean","description":"Setting this to true will disable the check and provide a warning that the check was skipped. Default `false` (bool)\n"},"elbSecurityGroup":{"type":"string","description":"Use these ELB security groups instead create new (string)\n"},"kubernetesClusterId":{"type":"string","description":"The cluster id we'll use to identify our cluster resources (string)\n"},"kubernetesClusterTag":{"type":"string","description":"Legacy cluster id we'll use to identify our cluster resources (string)\n"},"roleArn":{"type":"string","description":"IAM role to assume when interaction with AWS APIs (string)\n"},"routeTableId":{"type":"string","description":"Enables using a specific RouteTable (string)\n"},"subnetId":{"type":"string","description":"(string)\n"},"vpc":{"type":"string","description":"The AWS VPC flag enables the possibility to run the master components on a different aws account, on a different cloud provider or on-premises. If the flag is set also the KubernetesClusterTag must be provided (string)\n"},"zone":{"type":"string","description":"The AWS zone (string)\n"}},"type":"object"},"rke:index/ClusterCloudProviderAwsCloudProviderServiceOverride:ClusterCloudProviderAwsCloudProviderServiceOverride":{"properties":{"key":{"type":"string","description":"TLS key for etcd service (string)\n","deprecationMessage":"Use service instead"},"region":{"type":"string","description":"Region for S3 service (string)\n"},"service":{"type":"string","description":"(string)\n"},"signingMethod":{"type":"string","description":"(string)\n"},"signingName":{"type":"string","description":"(string)\n"},"signingRegion":{"type":"string","description":"(string)\n"},"url":{"type":"string","description":"Registry URL (string)\n"}},"type":"object","required":["service"],"language":{"nodejs":{"requiredOutputs":["service","signingMethod"]}}},"rke:index/ClusterCloudProviderAzureCloudConfig:ClusterCloudProviderAzureCloudConfig":{"properties":{"aadClientCertPassword":{"type":"string","description":"(string)\n","secret":true},"aadClientCertPath":{"type":"string","description":"(string)\n"},"aadClientId":{"type":"string","description":"(string)\n","secret":true},"aadClientSecret":{"type":"string","description":"(string)\n","secret":true},"cloud":{"type":"string","description":"(string)\n"},"cloudProviderBackoff":{"type":"boolean","description":"(bool)\n"},"cloudProviderBackoffDuration":{"type":"integer","description":"(int)\n"},"cloudProviderBackoffExponent":{"type":"integer","description":"(int)\n"},"cloudProviderBackoffJitter":{"type":"integer","description":"(int)\n"},"cloudProviderBackoffRetries":{"type":"integer","description":"(int)\n"},"cloudProviderRateLimit":{"type":"boolean","description":"(bool)\n"},"cloudProviderRateLimitBucket":{"type":"integer","description":"(int)\n"},"cloudProviderRateLimitQps":{"type":"integer","description":"(int)\n"},"loadBalancerSku":{"type":"string"},"location":{"type":"string","description":"(string)\n"},"maximumLoadBalancerRuleCount":{"type":"integer","description":"(int)\n"},"primaryAvailabilitySetName":{"type":"string","description":"(string)\n"},"primaryScaleSetName":{"type":"string","description":"(string)\n"},"resourceGroup":{"type":"string","description":"(string)\n"},"routeTableName":{"type":"string","description":"(string)\n"},"securityGroupName":{"type":"string","description":"(string)\n"},"subnetName":{"type":"string","description":"(string)\n"},"subscriptionId":{"type":"string","description":"(string)\n","secret":true},"tenantId":{"type":"string","description":"Required if `tenant_name` not provided. (string)\n","secret":true},"useInstanceMetadata":{"type":"boolean","description":"(bool)\n"},"useManagedIdentityExtension":{"type":"boolean","description":"(bool)\n"},"vmType":{"type":"string","description":"(string)\n"},"vnetName":{"type":"string","description":"(string)\n"},"vnetResourceGroup":{"type":"string","description":"(string)\n"}},"type":"object","required":["aadClientId","aadClientSecret","subscriptionId","tenantId"],"language":{"nodejs":{"requiredOutputs":["aadClientId","aadClientSecret","cloudProviderRateLimitBucket","subscriptionId","tenantId"]}}},"rke:index/ClusterCloudProviderAzureCloudProvider:ClusterCloudProviderAzureCloudProvider":{"properties":{"aadClientCertPassword":{"type":"string","description":"(string)\n","secret":true},"aadClientCertPath":{"type":"string","description":"(string)\n"},"aadClientId":{"type":"string","description":"(string)\n","secret":true},"aadClientSecret":{"type":"string","description":"(string)\n","secret":true},"cloud":{"type":"string","description":"(string)\n"},"cloudProviderBackoff":{"type":"boolean","description":"(bool)\n"},"cloudProviderBackoffDuration":{"type":"integer","description":"(int)\n"},"cloudProviderBackoffExponent":{"type":"integer","description":"(int)\n"},"cloudProviderBackoffJitter":{"type":"integer","description":"(int)\n"},"cloudProviderBackoffRetries":{"type":"integer","description":"(int)\n"},"cloudProviderRateLimit":{"type":"boolean","description":"(bool)\n"},"cloudProviderRateLimitBucket":{"type":"integer","description":"(int)\n"},"cloudProviderRateLimitQps":{"type":"integer","description":"(int)\n"},"loadBalancerSku":{"type":"string"},"location":{"type":"string","description":"(string)\n"},"maximumLoadBalancerRuleCount":{"type":"integer","description":"(int)\n"},"primaryAvailabilitySetName":{"type":"string","description":"(string)\n"},"primaryScaleSetName":{"type":"string","description":"(string)\n"},"resourceGroup":{"type":"string","description":"(string)\n"},"routeTableName":{"type":"string","description":"(string)\n"},"securityGroupName":{"type":"string","description":"(string)\n"},"subnetName":{"type":"string","description":"(string)\n"},"subscriptionId":{"type":"string","description":"(string)\n","secret":true},"tenantId":{"type":"string","description":"Required if `tenant_name` not provided. (string)\n","secret":true},"useInstanceMetadata":{"type":"boolean","description":"(bool)\n"},"useManagedIdentityExtension":{"type":"boolean","description":"(bool)\n"},"vmType":{"type":"string","description":"(string)\n"},"vnetName":{"type":"string","description":"(string)\n"},"vnetResourceGroup":{"type":"string","description":"(string)\n"}},"type":"object","required":["aadClientId","aadClientSecret","subscriptionId","tenantId"],"language":{"nodejs":{"requiredOutputs":["aadClientId","aadClientSecret","cloudProviderRateLimitBucket","subscriptionId","tenantId"]}}},"rke:index/ClusterCloudProviderOpenstackCloudConfig:ClusterCloudProviderOpenstackCloudConfig":{"properties":{"blockStorage":{"$ref":"#/types/rke:index/ClusterCloudProviderOpenstackCloudConfigBlockStorage:ClusterCloudProviderOpenstackCloudConfigBlockStorage","description":"(list maxitems:1)\n"},"global":{"$ref":"#/types/rke:index/ClusterCloudProviderOpenstackCloudConfigGlobal:ClusterCloudProviderOpenstackCloudConfigGlobal","description":"(list maxitems:1)\n"},"loadBalancer":{"$ref":"#/types/rke:index/ClusterCloudProviderOpenstackCloudConfigLoadBalancer:ClusterCloudProviderOpenstackCloudConfigLoadBalancer","description":"(list maxitems:1)\n"},"metadata":{"$ref":"#/types/rke:index/ClusterCloudProviderOpenstackCloudConfigMetadata:ClusterCloudProviderOpenstackCloudConfigMetadata","description":"(list maxitems:1)\n"},"route":{"$ref":"#/types/rke:index/ClusterCloudProviderOpenstackCloudConfigRoute:ClusterCloudProviderOpenstackCloudConfigRoute","description":"(list maxitems:1)\n"}},"type":"object","required":["global"],"language":{"nodejs":{"requiredOutputs":["blockStorage","global","loadBalancer","metadata","route"]}}},"rke:index/ClusterCloudProviderOpenstackCloudConfigBlockStorage:ClusterCloudProviderOpenstackCloudConfigBlockStorage":{"properties":{"bsVersion":{"type":"string","description":"(string)\n"},"ignoreVolumeAz":{"type":"boolean","description":"(string)\n"},"trustDevicePath":{"type":"boolean","description":"(string)\n"}},"type":"object"},"rke:index/ClusterCloudProviderOpenstackCloudConfigGlobal:ClusterCloudProviderOpenstackCloudConfigGlobal":{"properties":{"authUrl":{"type":"string","description":"(string)\n"},"caFile":{"type":"string","description":"(string)\n"},"domainId":{"type":"string","description":"Required if `domain_name` not provided. (string)\n","secret":true},"domainName":{"type":"string","description":"Required if `domain_id` not provided. (string)\n"},"password":{"type":"string","description":"Registry password (string)\n","secret":true},"region":{"type":"string","description":"Region for S3 service (string)\n"},"tenantId":{"type":"string","description":"Required if `tenant_name` not provided. (string)\n","secret":true},"tenantName":{"type":"string","description":"Required if `tenant_id` not provided. (string)\n"},"trustId":{"type":"string","description":"(string)\n","secret":true},"userId":{"type":"string","description":"Required if `username` not provided. (string)\n","secret":true},"username":{"type":"string","description":"Required if `user_id` not provided. (string)\n"}},"type":"object","required":["authUrl","password"]},"rke:index/ClusterCloudProviderOpenstackCloudConfigLoadBalancer:ClusterCloudProviderOpenstackCloudConfigLoadBalancer":{"properties":{"createMonitor":{"type":"boolean","description":"(bool)\n"},"floatingNetworkId":{"type":"string","description":"(string)\n"},"lbMethod":{"type":"string","description":"(string)\n"},"lbProvider":{"type":"string","description":"(string)\n"},"lbVersion":{"type":"string","description":"(string)\n"},"manageSecurityGroups":{"type":"boolean","description":"(bool)\n"},"monitorDelay":{"type":"string","description":"(string)\n"},"monitorMaxRetries":{"type":"integer","description":"(int)\n"},"monitorTimeout":{"type":"string","description":"(string)\n"},"subnetId":{"type":"string","description":"(string)\n"},"useOctavia":{"type":"boolean","description":"(bool)\n"}},"type":"object"},"rke:index/ClusterCloudProviderOpenstackCloudConfigMetadata:ClusterCloudProviderOpenstackCloudConfigMetadata":{"properties":{"requestTimeout":{"type":"integer","description":"(int)\n"},"searchOrder":{"type":"string","description":"(string)\n"}},"type":"object"},"rke:index/ClusterCloudProviderOpenstackCloudConfigRoute:ClusterCloudProviderOpenstackCloudConfigRoute":{"properties":{"routerId":{"type":"string","description":"(string)\n"}},"type":"object"},"rke:index/ClusterCloudProviderOpenstackCloudProvider:ClusterCloudProviderOpenstackCloudProvider":{"properties":{"blockStorage":{"$ref":"#/types/rke:index/ClusterCloudProviderOpenstackCloudProviderBlockStorage:ClusterCloudProviderOpenstackCloudProviderBlockStorage","description":"(list maxitems:1)\n"},"global":{"$ref":"#/types/rke:index/ClusterCloudProviderOpenstackCloudProviderGlobal:ClusterCloudProviderOpenstackCloudProviderGlobal","description":"(list maxitems:1)\n"},"loadBalancer":{"$ref":"#/types/rke:index/ClusterCloudProviderOpenstackCloudProviderLoadBalancer:ClusterCloudProviderOpenstackCloudProviderLoadBalancer","description":"(list maxitems:1)\n"},"metadata":{"$ref":"#/types/rke:index/ClusterCloudProviderOpenstackCloudProviderMetadata:ClusterCloudProviderOpenstackCloudProviderMetadata","description":"(list maxitems:1)\n"},"route":{"$ref":"#/types/rke:index/ClusterCloudProviderOpenstackCloudProviderRoute:ClusterCloudProviderOpenstackCloudProviderRoute","description":"(list maxitems:1)\n"}},"type":"object","required":["global"],"language":{"nodejs":{"requiredOutputs":["blockStorage","global","loadBalancer","metadata","route"]}}},"rke:index/ClusterCloudProviderOpenstackCloudProviderBlockStorage:ClusterCloudProviderOpenstackCloudProviderBlockStorage":{"properties":{"bsVersion":{"type":"string","description":"(string)\n"},"ignoreVolumeAz":{"type":"boolean","description":"(string)\n"},"trustDevicePath":{"type":"boolean","description":"(string)\n"}},"type":"object"},"rke:index/ClusterCloudProviderOpenstackCloudProviderGlobal:ClusterCloudProviderOpenstackCloudProviderGlobal":{"properties":{"authUrl":{"type":"string","description":"(string)\n"},"caFile":{"type":"string","description":"(string)\n"},"domainId":{"type":"string","description":"Required if `domain_name` not provided. (string)\n","secret":true},"domainName":{"type":"string","description":"Required if `domain_id` not provided. (string)\n"},"password":{"type":"string","description":"Registry password (string)\n","secret":true},"region":{"type":"string","description":"Region for S3 service (string)\n"},"tenantId":{"type":"string","description":"Required if `tenant_name` not provided. (string)\n","secret":true},"tenantName":{"type":"string","description":"Required if `tenant_id` not provided. (string)\n"},"trustId":{"type":"string","description":"(string)\n","secret":true},"userId":{"type":"string","description":"Required if `username` not provided. (string)\n","secret":true},"username":{"type":"string","description":"Required if `user_id` not provided. (string)\n"}},"type":"object","required":["authUrl","password"]},"rke:index/ClusterCloudProviderOpenstackCloudProviderLoadBalancer:ClusterCloudProviderOpenstackCloudProviderLoadBalancer":{"properties":{"createMonitor":{"type":"boolean","description":"(bool)\n"},"floatingNetworkId":{"type":"string","description":"(string)\n"},"lbMethod":{"type":"string","description":"(string)\n"},"lbProvider":{"type":"string","description":"(string)\n"},"lbVersion":{"type":"string","description":"(string)\n"},"manageSecurityGroups":{"type":"boolean","description":"(bool)\n"},"monitorDelay":{"type":"string","description":"(string)\n"},"monitorMaxRetries":{"type":"integer","description":"(int)\n"},"monitorTimeout":{"type":"string","description":"(string)\n"},"subnetId":{"type":"string","description":"(string)\n"},"useOctavia":{"type":"boolean","description":"(bool)\n"}},"type":"object"},"rke:index/ClusterCloudProviderOpenstackCloudProviderMetadata:ClusterCloudProviderOpenstackCloudProviderMetadata":{"properties":{"requestTimeout":{"type":"integer","description":"(int)\n"},"searchOrder":{"type":"string","description":"(string)\n"}},"type":"object"},"rke:index/ClusterCloudProviderOpenstackCloudProviderRoute:ClusterCloudProviderOpenstackCloudProviderRoute":{"properties":{"routerId":{"type":"string","description":"(string)\n"}},"type":"object"},"rke:index/ClusterCloudProviderVsphereCloudConfig:ClusterCloudProviderVsphereCloudConfig":{"properties":{"disk":{"$ref":"#/types/rke:index/ClusterCloudProviderVsphereCloudConfigDisk:ClusterCloudProviderVsphereCloudConfigDisk","description":"(list maxitems:1)\n"},"global":{"$ref":"#/types/rke:index/ClusterCloudProviderVsphereCloudConfigGlobal:ClusterCloudProviderVsphereCloudConfigGlobal","description":"(list maxitems:1)\n"},"network":{"$ref":"#/types/rke:index/ClusterCloudProviderVsphereCloudConfigNetwork:ClusterCloudProviderVsphereCloudConfigNetwork","description":"RKE k8s cluster network configuration (list maxitems:1)\n"},"virtualCenters":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterCloudProviderVsphereCloudConfigVirtualCenter:ClusterCloudProviderVsphereCloudConfigVirtualCenter"},"description":"(List)\n"},"workspace":{"$ref":"#/types/rke:index/ClusterCloudProviderVsphereCloudConfigWorkspace:ClusterCloudProviderVsphereCloudConfigWorkspace","description":"(list maxitems:1)\n"}},"type":"object","required":["virtualCenters","workspace"],"language":{"nodejs":{"requiredOutputs":["disk","global","network","virtualCenters","workspace"]}}},"rke:index/ClusterCloudProviderVsphereCloudConfigDisk:ClusterCloudProviderVsphereCloudConfigDisk":{"properties":{"scsiControllerType":{"type":"string","description":"(string)\n"}},"type":"object"},"rke:index/ClusterCloudProviderVsphereCloudConfigGlobal:ClusterCloudProviderVsphereCloudConfigGlobal":{"properties":{"datacenter":{"type":"string","description":"(string)\n"},"datacenters":{"type":"string","description":"(string)\n"},"datastore":{"type":"string","description":"(string)\n"},"insecureFlag":{"type":"boolean","description":"(bool)\n"},"password":{"type":"string","description":"Registry password (string)\n","secret":true},"port":{"type":"string","description":"Port used for SSH communication (string)\n"},"soapRoundtripCount":{"type":"integer","description":"(int)\n"},"user":{"type":"string","description":"Registry user (string)\n","secret":true},"vmName":{"type":"string","description":"(string)\n"},"vmUuid":{"type":"string","description":"(string)\n"},"workingDir":{"type":"string","description":"(string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["datacenters"]}}},"rke:index/ClusterCloudProviderVsphereCloudConfigNetwork:ClusterCloudProviderVsphereCloudConfigNetwork":{"properties":{"publicNetwork":{"type":"string","description":"(string)\n"}},"type":"object"},"rke:index/ClusterCloudProviderVsphereCloudConfigVirtualCenter:ClusterCloudProviderVsphereCloudConfigVirtualCenter":{"properties":{"datacenters":{"type":"string","description":"(string)\n"},"name":{"type":"string","description":"Name of virtualcenter config for Vsphere Cloud Provider config (string)\n"},"password":{"type":"string","description":"Registry password (string)\n","secret":true},"port":{"type":"string","description":"Port used for SSH communication (string)\n"},"soapRoundtripCount":{"type":"integer","description":"(int)\n"},"user":{"type":"string","description":"Registry user (string)\n","secret":true}},"type":"object","required":["datacenters","name","password","user"]},"rke:index/ClusterCloudProviderVsphereCloudConfigWorkspace:ClusterCloudProviderVsphereCloudConfigWorkspace":{"properties":{"datacenter":{"type":"string","description":"(string)\n"},"defaultDatastore":{"type":"string","description":"(string)\n"},"folder":{"type":"string","description":"Folder for S3 service. Available from Rancher v2.2.7 (string)\n"},"resourcepoolPath":{"type":"string","description":"(string)\n"},"server":{"type":"string","description":"(string)\n"}},"type":"object","required":["datacenter","server"]},"rke:index/ClusterCloudProviderVsphereCloudProvider:ClusterCloudProviderVsphereCloudProvider":{"properties":{"disk":{"$ref":"#/types/rke:index/ClusterCloudProviderVsphereCloudProviderDisk:ClusterCloudProviderVsphereCloudProviderDisk","description":"(list maxitems:1)\n"},"global":{"$ref":"#/types/rke:index/ClusterCloudProviderVsphereCloudProviderGlobal:ClusterCloudProviderVsphereCloudProviderGlobal","description":"(list maxitems:1)\n"},"network":{"$ref":"#/types/rke:index/ClusterCloudProviderVsphereCloudProviderNetwork:ClusterCloudProviderVsphereCloudProviderNetwork","description":"RKE k8s cluster network configuration (list maxitems:1)\n"},"virtualCenters":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterCloudProviderVsphereCloudProviderVirtualCenter:ClusterCloudProviderVsphereCloudProviderVirtualCenter"},"description":"(List)\n"},"workspace":{"$ref":"#/types/rke:index/ClusterCloudProviderVsphereCloudProviderWorkspace:ClusterCloudProviderVsphereCloudProviderWorkspace","description":"(list maxitems:1)\n"}},"type":"object","required":["virtualCenters","workspace"],"language":{"nodejs":{"requiredOutputs":["disk","global","network","virtualCenters","workspace"]}}},"rke:index/ClusterCloudProviderVsphereCloudProviderDisk:ClusterCloudProviderVsphereCloudProviderDisk":{"properties":{"scsiControllerType":{"type":"string","description":"(string)\n"}},"type":"object"},"rke:index/ClusterCloudProviderVsphereCloudProviderGlobal:ClusterCloudProviderVsphereCloudProviderGlobal":{"properties":{"datacenter":{"type":"string","description":"(string)\n"},"datacenters":{"type":"string","description":"(string)\n"},"datastore":{"type":"string","description":"(string)\n"},"insecureFlag":{"type":"boolean","description":"(bool)\n"},"password":{"type":"string","description":"Registry password (string)\n","secret":true},"port":{"type":"string","description":"Port used for SSH communication (string)\n"},"soapRoundtripCount":{"type":"integer","description":"(int)\n"},"user":{"type":"string","description":"Registry user (string)\n","secret":true},"vmName":{"type":"string","description":"(string)\n"},"vmUuid":{"type":"string","description":"(string)\n"},"workingDir":{"type":"string","description":"(string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["datacenters"]}}},"rke:index/ClusterCloudProviderVsphereCloudProviderNetwork:ClusterCloudProviderVsphereCloudProviderNetwork":{"properties":{"publicNetwork":{"type":"string","description":"(string)\n"}},"type":"object"},"rke:index/ClusterCloudProviderVsphereCloudProviderVirtualCenter:ClusterCloudProviderVsphereCloudProviderVirtualCenter":{"properties":{"datacenters":{"type":"string","description":"(string)\n"},"name":{"type":"string","description":"Name of virtualcenter config for Vsphere Cloud Provider config (string)\n"},"password":{"type":"string","description":"Registry password (string)\n","secret":true},"port":{"type":"string","description":"Port used for SSH communication (string)\n"},"soapRoundtripCount":{"type":"integer","description":"(int)\n"},"user":{"type":"string","description":"Registry user (string)\n","secret":true}},"type":"object","required":["datacenters","name","password","user"]},"rke:index/ClusterCloudProviderVsphereCloudProviderWorkspace:ClusterCloudProviderVsphereCloudProviderWorkspace":{"properties":{"datacenter":{"type":"string","description":"(string)\n"},"defaultDatastore":{"type":"string","description":"(string)\n"},"folder":{"type":"string","description":"Folder for S3 service. Available from Rancher v2.2.7 (string)\n"},"resourcepoolPath":{"type":"string","description":"(string)\n"},"server":{"type":"string","description":"(string)\n"}},"type":"object","required":["datacenter","server"]},"rke:index/ClusterControlPlaneHost:ClusterControlPlaneHost":{"properties":{"address":{"type":"string","description":"Address ip for node (string)\n"},"nodeName":{"type":"string","description":"Name of the host provisioned via docker machine (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["address","nodeName"]}}},"rke:index/ClusterDns:ClusterDns":{"properties":{"nodeSelector":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Node selector key pair (map)\n"},"nodelocal":{"$ref":"#/types/rke:index/ClusterDnsNodelocal:ClusterDnsNodelocal","description":"Docker image for nodelocal (string)\n"},"provider":{"type":"string","description":"Monitoring provider (string)\n"},"reverseCidrs":{"type":"array","items":{"type":"string"},"description":"Reverse CIDRs  (list)\n"},"upstreamNameservers":{"type":"array","items":{"type":"string"},"description":"Upstream nameservers  (list)\n"}},"type":"object"},"rke:index/ClusterDnsNodelocal:ClusterDnsNodelocal":{"properties":{"ipAddress":{"type":"string","description":"Nodelocal dns ip address (string)\n"},"nodeSelector":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Node selector key pair (map)\n"}},"type":"object"},"rke:index/ClusterEtcdHost:ClusterEtcdHost":{"properties":{"address":{"type":"string","description":"Address ip for node (string)\n"},"nodeName":{"type":"string","description":"Name of the host provisioned via docker machine (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["address","nodeName"]}}},"rke:index/ClusterInactiveHost:ClusterInactiveHost":{"properties":{"address":{"type":"string","description":"Address ip for node (string)\n"},"nodeName":{"type":"string","description":"Name of the host provisioned via docker machine (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["address","nodeName"]}}},"rke:index/ClusterIngress:ClusterIngress":{"properties":{"defaultBackend":{"type":"boolean"},"dnsPolicy":{"type":"string","description":"Ingress controller DNS policy. `ClusterFirstWithHostNet`, `ClusterFirst`, `Default`, and `None` are supported. [K8S dns Policy](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy) (string)\n"},"extraArgs":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Extra arguments for scheduler service (map)\n"},"httpPort":{"type":"integer","description":"Ingress controller http port (int)\n"},"httpsPort":{"type":"integer","description":"Ingress controller https port (int)\n"},"networkMode":{"type":"string","description":"Networt mode for the ingress controller. `hostNetwork`, `hostPort` and `none` are supported (string)\n"},"nodeSelector":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Node selector key pair (map)\n"},"options":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Network provider options (map)\n"},"provider":{"type":"string","description":"Monitoring provider (string)\n"}},"type":"object"},"rke:index/ClusterMonitoring:ClusterMonitoring":{"properties":{"nodeSelector":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Node selector key pair (map)\n"},"options":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Network provider options (map)\n"},"provider":{"type":"string","description":"Monitoring provider (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["provider"]}}},"rke:index/ClusterNetwork:ClusterNetwork":{"properties":{"aciNetworkProvider":{"$ref":"#/types/rke:index/ClusterNetworkAciNetworkProvider:ClusterNetworkAciNetworkProvider","description":"Aci network provider config (list maxitems:1)\n"},"calicoNetworkProvider":{"$ref":"#/types/rke:index/ClusterNetworkCalicoNetworkProvider:ClusterNetworkCalicoNetworkProvider","description":"Calico network provider config (list maxitems:1)\n"},"canalNetworkProvider":{"$ref":"#/types/rke:index/ClusterNetworkCanalNetworkProvider:ClusterNetworkCanalNetworkProvider","description":"Canal network provider config (list maxitems:1)\n"},"flannelNetworkProvider":{"$ref":"#/types/rke:index/ClusterNetworkFlannelNetworkProvider:ClusterNetworkFlannelNetworkProvider","description":"Flannel network provider config (list maxitems:1)\n"},"mtu":{"type":"integer","description":"Network provider MTU. Default `0` (int)\n"},"options":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Network provider options (map)\n"},"plugin":{"type":"string","description":"Network provider plugin. `calico`, `canal` (default), `flannel`, `none` and `weave` are supported. (string)\n"},"weaveNetworkProvider":{"$ref":"#/types/rke:index/ClusterNetworkWeaveNetworkProvider:ClusterNetworkWeaveNetworkProvider","description":"Weave network provider config (list maxitems:1)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["options"]}}},"rke:index/ClusterNetworkAciNetworkProvider:ClusterNetworkAciNetworkProvider":{"properties":{"aep":{"type":"string","description":"Attachment entity profile name on aci (string)\n"},"apicHosts":{"type":"array","items":{"type":"string"},"description":"Ip address for apic hosts (list)\n"},"apicUserCrt":{"type":"string","description":"Base64 encoded certificate for aci apic user (string)\n","secret":true},"apicUserKey":{"type":"string","description":"Base64 encoded private key for aci apic user (string)\n","secret":true},"apicUserName":{"type":"string","description":"User name for aci apic (string)\n"},"encapType":{"type":"string","description":"One of the supported encap types for aci(vlan/vxlan) (string)\n"},"externDynamic":{"type":"string","description":"Subnet to use for dynamic external IPs on aci (string)\n* `extern_static\"` - (Required) Subnet to use for static external IPs on aci (string)\n"},"externStatic":{"type":"string"},"infraVlan":{"type":"string","description":"Vlan for infra network on aci (string)\n"},"kubeApiVlan":{"type":"string","description":"Vlan for node network on aci (string)\n"},"l3out":{"type":"string","description":"L3Out on aci (string)\n"},"l3outExternalNetworks":{"type":"array","items":{"type":"string"},"description":"L3out external networks on aci (list)\n"},"mcastRangeEnd":{"type":"string","description":"Mcast range end address for endpoint groups on aci (string)\n"},"mcastRangeStart":{"type":"string","description":"Mcast range start address for endpoint groups on aci (string)\n"},"nodeSubnet":{"type":"string","description":"Kubernetes node address subnet (string)\n"},"nodeSvcSubnet":{"type":"string","description":"Subnet to use for service graph endpoints on aci (string)\n"},"serviceVlan":{"type":"string","description":"Vlan for service graph nodes on aci (string)\n"},"snatPortRangeEnd":{"type":"string","description":"Port end range for Source Network Address Translation on aci (string)\n"},"snatPortRangeStart":{"type":"string","description":"Port start range for Source Network Address Translation on aci (string)\n"},"snatPortsPerNode":{"type":"string","description":"Ports per node for Source Network Address Translation on aci (string)\n"},"systemId":{"type":"string","description":"Unique suffix for all cluster related objects in aci (string)\n"},"token":{"type":"string","description":"UUID for this version of the input configuration (string)\n","secret":true},"vrfName":{"type":"string","description":"VRF Name on aci (string)\n"},"vrfTenant":{"type":"string","description":"Tenant for VRF on aci (string)\n"}},"type":"object","required":["aep","apicHosts","apicUserCrt","apicUserKey","apicUserName","encapType","externDynamic","externStatic","infraVlan","kubeApiVlan","l3out","l3outExternalNetworks","mcastRangeEnd","mcastRangeStart","nodeSubnet","nodeSvcSubnet","serviceVlan","systemId","token","vrfName","vrfTenant"]},"rke:index/ClusterNetworkCalicoNetworkProvider:ClusterNetworkCalicoNetworkProvider":{"properties":{"cloudProvider":{"type":"string","description":"RKE k8s cluster cloud provider configuration [rke-cloud-providers](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/) (list maxitems:1)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["cloudProvider"]}}},"rke:index/ClusterNetworkCanalNetworkProvider:ClusterNetworkCanalNetworkProvider":{"properties":{"iface":{"type":"string","description":"Flannel network interface (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["iface"]}}},"rke:index/ClusterNetworkFlannelNetworkProvider:ClusterNetworkFlannelNetworkProvider":{"properties":{"iface":{"type":"string","description":"Flannel network interface (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["iface"]}}},"rke:index/ClusterNetworkWeaveNetworkProvider:ClusterNetworkWeaveNetworkProvider":{"properties":{"password":{"type":"string","description":"Registry password (string)\n"}},"type":"object","required":["password"]},"rke:index/ClusterNode:ClusterNode":{"properties":{"address":{"type":"string","description":"Address ip for node (string)\n"},"dockerSocket":{"type":"string","description":"Docker socket on the node that will be used in tunneling (string)\n"},"hostnameOverride":{"type":"string","description":"Hostname override for node (string)\n"},"internalAddress":{"type":"string","description":"Internal address that will be used for components communication (string)\n"},"labels":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Node labels (map)\n"},"nodeName":{"type":"string","description":"Name of the host provisioned via docker machine (string)\n"},"port":{"type":"string","description":"Port used for SSH communication (string)\n"},"roles":{"type":"array","items":{"type":"string"},"description":"Node roles in k8s cluster. `controlplane`, `etcd` and `worker` are supported. (list)\n"},"rolesDeprecated":{"type":"string","deprecationMessage":"Use role instead","language":{"csharp":{"name":"RolesDeprecated"}}},"sshAgentAuth":{"type":"boolean","description":"SSH Agent Auth enable (bool)\n"},"sshCert":{"type":"string","description":"SSH Certificate (string)\n","secret":true},"sshCertPath":{"type":"string","description":"SSH Certificate Path (string)\n"},"sshKey":{"type":"string","description":"SSH Private Key (string)\n","secret":true},"sshKeyPath":{"type":"string","description":"SSH Private Key Path (string)\n"},"taints":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterNodeTaint:ClusterNodeTaint"},"description":"Node taints (list)\n"},"user":{"type":"string","description":"Registry user (string)\n","secret":true}},"type":"object","required":["address","roles","user"],"language":{"nodejs":{"requiredOutputs":["address","roles","sshAgentAuth","user"]}}},"rke:index/ClusterNodeTaint:ClusterNodeTaint":{"properties":{"effect":{"type":"string","description":"Taint effect. `NoExecute`, `NoSchedule` (default) and `PreferNoSchedule` are supported (string)\n"},"key":{"type":"string","description":"TLS key for etcd service (string)\n"},"value":{"type":"string","description":"Taint value (string)\n"}},"type":"object","required":["key","value"]},"rke:index/ClusterPrivateRegistry:ClusterPrivateRegistry":{"properties":{"isDefault":{"type":"boolean","description":"Set as default registry. Default `false` (bool)\n"},"password":{"type":"string","description":"Registry password (string)\n","secret":true},"url":{"type":"string","description":"Registry URL (string)\n"},"user":{"type":"string","description":"Registry user (string)\n","secret":true}},"type":"object","required":["url"]},"rke:index/ClusterRestore:ClusterRestore":{"properties":{"restore":{"type":"boolean","description":"RKE k8s cluster restore configuration (list maxitems:1)\n"},"snapshotName":{"type":"string","description":"Snapshot name (string)\n"}},"type":"object"},"rke:index/ClusterRotateCertificates:ClusterRotateCertificates":{"properties":{"caCertificates":{"type":"boolean","description":"Rotate CA Certificates. Default `false` (bool)\n"},"services":{"type":"array","items":{"type":"string"},"description":"RKE k8s cluster services (list maxitems:1)\n"}},"type":"object"},"rke:index/ClusterRunningSystemImage:ClusterRunningSystemImage":{"properties":{"aciCniDeployContainer":{"type":"string","description":"Docker image for aci_cni_deploy_container (string)\n"},"aciControllerContainer":{"type":"string","description":"Docker image for aci_controller_container (string)\n"},"aciHostContainer":{"type":"string","description":"Docker image for aci_host_container (string)\n"},"aciMcastContainer":{"type":"string","description":"Docker image for aci_mcast_container (string)\n"},"aciOpflexContainer":{"type":"string","description":"Docker image for aci_opflex_container (string)\n"},"aciOvsContainer":{"type":"string","description":"Docker image for aci_ovs_container (string)\n"},"alpine":{"type":"string","description":"Docker image for alpine (string)\n"},"calicoCni":{"type":"string","description":"Docker image for calico_cni (string)\n"},"calicoControllers":{"type":"string","description":"Docker image for calico_controllers (string)\n"},"calicoCtl":{"type":"string","description":"Docker image for calico_ctl (string)\n"},"calicoFlexVol":{"type":"string","description":"Docker image for calico_flex_vol (string)\n"},"calicoNode":{"type":"string","description":"Docker image for calico_node (string)\n"},"canalCni":{"type":"string","description":"Docker image for canal_cni (string)\n"},"canalFlannel":{"type":"string","description":"Docker image for canal_flannel (string)\n"},"canalFlexVol":{"type":"string","description":"Docker image for canal_flex_vol (string)\n"},"canalNode":{"type":"string","description":"Docker image for canal_node (string)\n"},"certDownloader":{"type":"string","description":"Docker image for cert_downloader (string)\n"},"coredns":{"type":"string","description":"Docker image for coredns (string)\n"},"corednsAutoscaler":{"type":"string","description":"Docker image for coredns_autoscaler (string)\n"},"dnsmasq":{"type":"string","description":"Docker image for dnsmasq (string)\n"},"etcd":{"type":"string","description":"Docker image for etcd (string)\n"},"flannel":{"type":"string","description":"Docker image for flannel (string)\n"},"flannelCni":{"type":"string","description":"Docker image for flannel_cni (string)\n"},"ingress":{"type":"string","description":"RKE k8s cluster ingress controller configuration (list maxitems:1)\n"},"ingressBackend":{"type":"string","description":"Docker image for ingress_backend (string)\n"},"kubeDns":{"type":"string","description":"Docker image for kube_dns (string)\n"},"kubeDnsAutoscaler":{"type":"string","description":"Docker image for kube_dns_autoscaler (string)\n"},"kubeDnsSidecar":{"type":"string","description":"Docker image for kube_dns_sidecar (string)\n"},"kubernetes":{"type":"string","description":"Docker image for kubernetes (string)\n"},"kubernetesServicesSidecar":{"type":"string","description":"Docker image for kubernetes_services_sidecar (string)\n"},"metricsServer":{"type":"string","description":"Docker image for metrics_server (string)\n"},"nginxProxy":{"type":"string","description":"Docker image for nginx_proxy (string)\n"},"nodelocal":{"type":"string","description":"Docker image for nodelocal (string)\n"},"podInfraContainer":{"type":"string","description":"Docker image for pod_infra_container (string)\n"},"weaveCni":{"type":"string","description":"Docker image for weave_cni (string)\n"},"weaveNode":{"type":"string","description":"Docker image for weave_node (string)\n"},"windowsPodInfraContainer":{"type":"string","description":"Docker image for windows_pod_infra_container (string)\n"}},"type":"object"},"rke:index/ClusterServices:ClusterServices":{"properties":{"etcd":{"$ref":"#/types/rke:index/ClusterServicesEtcd:ClusterServicesEtcd","description":"Docker image for etcd (string)\n"},"kubeApi":{"$ref":"#/types/rke:index/ClusterServicesKubeApi:ClusterServicesKubeApi","description":"Kube API options for RKE services (list maxitems:1)\n"},"kubeController":{"$ref":"#/types/rke:index/ClusterServicesKubeController:ClusterServicesKubeController","description":"Kube Controller options for RKE services (list maxitems:1)\n"},"kubelet":{"$ref":"#/types/rke:index/ClusterServicesKubelet:ClusterServicesKubelet","description":"Kubelet options for RKE services (list maxitems:1)\n"},"kubeproxy":{"$ref":"#/types/rke:index/ClusterServicesKubeproxy:ClusterServicesKubeproxy","description":"Kubeproxy options for RKE services (list maxitems:1)\n"},"scheduler":{"$ref":"#/types/rke:index/ClusterServicesScheduler:ClusterServicesScheduler","description":"Scheduler options for RKE services (list maxitems:1)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["etcd","kubeApi","kubeController","kubelet","kubeproxy","scheduler"]}}},"rke:index/ClusterServicesEtcd:ClusterServicesEtcd":{"properties":{"backupConfig":{"$ref":"#/types/rke:index/ClusterServicesEtcdBackupConfig:ClusterServicesEtcdBackupConfig","description":"Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)\n"},"caCert":{"type":"string","description":"TLS CA certificate for etcd service (string)\n","secret":true},"cert":{"type":"string","description":"TLS certificate for etcd service (string)\n","secret":true},"creation":{"type":"string","description":"Creation option for etcd service (string)\n"},"externalUrls":{"type":"array","items":{"type":"string"},"description":"External urls for etcd service (list)\n"},"extraArgs":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Extra arguments for scheduler service (map)\n"},"extraBinds":{"type":"array","items":{"type":"string"},"description":"Extra binds for scheduler service (list)\n"},"extraEnvs":{"type":"array","items":{"type":"string"},"description":"Extra environment for scheduler service (list)\n"},"gid":{"type":"integer","description":"Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)\n"},"image":{"type":"string","description":"Docker image for scheduler service (string)\n"},"key":{"type":"string","description":"TLS key for etcd service (string)\n","secret":true},"path":{"type":"string","description":"Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)\n"},"retention":{"type":"string","description":"Retention for etcd backup. Default `6` (int)\n"},"snapshot":{"type":"boolean","description":"Snapshot option for etcd service. Default `true` (bool)\n"},"uid":{"type":"integer","description":"Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["backupConfig","caCert","cert","creation","externalUrls","extraArgs","extraBinds","extraEnvs","image","key","path","retention"]}}},"rke:index/ClusterServicesEtcdBackupConfig:ClusterServicesEtcdBackupConfig":{"properties":{"enabled":{"type":"boolean","description":"Enable secrets encryption (bool)\n"},"intervalHours":{"type":"integer","description":"Interval hours for etcd backup. Default `12` (int)\n"},"retention":{"type":"integer","description":"Retention for etcd backup. Default `6` (int)\n"},"s3BackupConfig":{"$ref":"#/types/rke:index/ClusterServicesEtcdBackupConfigS3BackupConfig:ClusterServicesEtcdBackupConfigS3BackupConfig","description":"S3 config options for etcd backup (list maxitems:1)\n"},"safeTimestamp":{"type":"boolean","description":"Safe timestamp for etcd backup. Default: `false` (bool)\n"},"timeout":{"type":"integer","description":"RKE node drain timeout (int)\n"}},"type":"object"},"rke:index/ClusterServicesEtcdBackupConfigS3BackupConfig:ClusterServicesEtcdBackupConfigS3BackupConfig":{"properties":{"accessKey":{"type":"string","description":"Access key for S3 service (string)\n","secret":true},"bucketName":{"type":"string","description":"Bucket name for S3 service (string)\n"},"customCa":{"type":"string","description":"Base64 encoded custom CA for S3 service. Use filebase64(\u003cFILE\u003e) for encoding file. Available from Rancher v2.2.5 (string)\n"},"endpoint":{"type":"string","description":"Endpoint for S3 service (string)\n"},"folder":{"type":"string","description":"Folder for S3 service. Available from Rancher v2.2.7 (string)\n"},"region":{"type":"string","description":"Region for S3 service (string)\n"},"secretKey":{"type":"string","description":"Secret key for S3 service (string)\n","secret":true}},"type":"object"},"rke:index/ClusterServicesEtcdDeprecated:ClusterServicesEtcdDeprecated":{"properties":{"backupConfig":{"$ref":"#/types/rke:index/ClusterServicesEtcdDeprecatedBackupConfig:ClusterServicesEtcdDeprecatedBackupConfig","description":"Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)\n"},"caCert":{"type":"string","description":"TLS CA certificate for etcd service (string)\n","secret":true},"cert":{"type":"string","description":"TLS certificate for etcd service (string)\n","secret":true},"creation":{"type":"string","description":"Creation option for etcd service (string)\n"},"externalUrls":{"type":"array","items":{"type":"string"},"description":"External urls for etcd service (list)\n"},"extraArgs":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Extra arguments for scheduler service (map)\n"},"extraBinds":{"type":"array","items":{"type":"string"},"description":"Extra binds for scheduler service (list)\n"},"extraEnvs":{"type":"array","items":{"type":"string"},"description":"Extra environment for scheduler service (list)\n"},"gid":{"type":"integer","description":"Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)\n"},"image":{"type":"string","description":"Docker image for scheduler service (string)\n"},"key":{"type":"string","description":"TLS key for etcd service (string)\n","secret":true},"path":{"type":"string","description":"Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)\n"},"retention":{"type":"string","description":"Retention for etcd backup. Default `6` (int)\n"},"snapshot":{"type":"boolean","description":"Snapshot option for etcd service. Default `true` (bool)\n"},"uid":{"type":"integer","description":"Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["backupConfig","caCert","cert","creation","externalUrls","extraArgs","extraBinds","extraEnvs","image","key","path","retention"]}}},"rke:index/ClusterServicesEtcdDeprecatedBackupConfig:ClusterServicesEtcdDeprecatedBackupConfig":{"properties":{"enabled":{"type":"boolean","description":"Enable secrets encryption (bool)\n"},"intervalHours":{"type":"integer","description":"Interval hours for etcd backup. Default `12` (int)\n"},"retention":{"type":"integer","description":"Retention for etcd backup. Default `6` (int)\n"},"s3BackupConfig":{"$ref":"#/types/rke:index/ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig:ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig","description":"S3 config options for etcd backup (list maxitems:1)\n"},"safeTimestamp":{"type":"boolean","description":"Safe timestamp for etcd backup. Default: `false` (bool)\n"},"timeout":{"type":"integer","description":"RKE node drain timeout (int)\n"}},"type":"object"},"rke:index/ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig:ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig":{"properties":{"accessKey":{"type":"string","description":"Access key for S3 service (string)\n","secret":true},"bucketName":{"type":"string","description":"Bucket name for S3 service (string)\n"},"customCa":{"type":"string","description":"Base64 encoded custom CA for S3 service. Use filebase64(\u003cFILE\u003e) for encoding file. Available from Rancher v2.2.5 (string)\n"},"endpoint":{"type":"string","description":"Endpoint for S3 service (string)\n"},"folder":{"type":"string","description":"Folder for S3 service. Available from Rancher v2.2.7 (string)\n"},"region":{"type":"string","description":"Region for S3 service (string)\n"},"secretKey":{"type":"string","description":"Secret key for S3 service (string)\n","secret":true}},"type":"object"},"rke:index/ClusterServicesKubeApi:ClusterServicesKubeApi":{"properties":{"alwaysPullImages":{"type":"boolean","description":"Enable [AlwaysPullImages](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages) Admission controller plugin. [Rancher docs](https://rancher.com/docs/rke/latest/en/config-options/services/#kubernetes-api-server-options) (bool)\n"},"auditLog":{"$ref":"#/types/rke:index/ClusterServicesKubeApiAuditLog:ClusterServicesKubeApiAuditLog","description":"K8s audit log configuration. (list maxitem: 1)\n"},"eventRateLimit":{"$ref":"#/types/rke:index/ClusterServicesKubeApiEventRateLimit:ClusterServicesKubeApiEventRateLimit","description":"K8s event rate limit configuration. (list maxitem: 1)\n"},"extraArgs":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Extra arguments for scheduler service (map)\n"},"extraBinds":{"type":"array","items":{"type":"string"},"description":"Extra binds for scheduler service (list)\n"},"extraEnvs":{"type":"array","items":{"type":"string"},"description":"Extra environment for scheduler service (list)\n"},"image":{"type":"string","description":"Docker image for scheduler service (string)\n"},"podSecurityPolicy":{"type":"boolean","description":"Pod Security Policy option for kube API service (bool)\n"},"secretsEncryptionConfig":{"$ref":"#/types/rke:index/ClusterServicesKubeApiSecretsEncryptionConfig:ClusterServicesKubeApiSecretsEncryptionConfig","description":"[Encrypt k8s secret data configration](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/). (list maxitem: 1)\n"},"serviceClusterIpRange":{"type":"string","description":"Service Cluster ip Range option for kube controller service (string)\n"},"serviceNodePortRange":{"type":"string","description":"Service Node Port Range option for kube API service (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["alwaysPullImages","auditLog","extraArgs","extraBinds","extraEnvs","image","podSecurityPolicy","serviceClusterIpRange","serviceNodePortRange"]}}},"rke:index/ClusterServicesKubeApiAuditLog:ClusterServicesKubeApiAuditLog":{"properties":{"configuration":{"$ref":"#/types/rke:index/ClusterServicesKubeApiAuditLogConfiguration:ClusterServicesKubeApiAuditLogConfiguration","description":"Event rate limit yaml encoded configuration. `\"apiVersion\"` and `\"kind\":\"Configuration\"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\\nkind: Configuration\\nlimits:\\n- type: Server\\n  burst: 30000\\n  qps: 6000\\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)\n"},"enabled":{"type":"boolean","description":"Enable secrets encryption (bool)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["configuration","enabled"]}}},"rke:index/ClusterServicesKubeApiAuditLogConfiguration:ClusterServicesKubeApiAuditLogConfiguration":{"properties":{"format":{"type":"string","description":"Audit log format (string)\n"},"maxAge":{"type":"integer","description":"Audit log max age (int)\n"},"maxBackup":{"type":"integer","description":"Audit log max backup. Default: `10` (int)\n"},"maxSize":{"type":"integer","description":"Audit log max size. Default: `100` (int)\n"},"path":{"type":"string","description":"Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)\n"},"policy":{"type":"string","description":"Audit policy json encoded definition. `\"apiVersion\"` and `\"kind\":\"Policy\",\"rules\"` fields are required in the json. Ex. `jsonencode({\"apiVersion\":\"audit.k8s.io/v1\",\"kind\":\"Policy\",\"rules\":[{\"level\":\"RequestResponse\",\"resources\":[{\"group\":\"\",\"resources\":[\"pods\"]}]}]})` [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["format","maxAge","maxBackup","maxSize","path","policy"]}}},"rke:index/ClusterServicesKubeApiDeprecated:ClusterServicesKubeApiDeprecated":{"properties":{"alwaysPullImages":{"type":"boolean","description":"Enable [AlwaysPullImages](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages) Admission controller plugin. [Rancher docs](https://rancher.com/docs/rke/latest/en/config-options/services/#kubernetes-api-server-options) (bool)\n"},"auditLog":{"$ref":"#/types/rke:index/ClusterServicesKubeApiDeprecatedAuditLog:ClusterServicesKubeApiDeprecatedAuditLog","description":"K8s audit log configuration. (list maxitem: 1)\n"},"eventRateLimit":{"$ref":"#/types/rke:index/ClusterServicesKubeApiDeprecatedEventRateLimit:ClusterServicesKubeApiDeprecatedEventRateLimit","description":"K8s event rate limit configuration. (list maxitem: 1)\n"},"extraArgs":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Extra arguments for scheduler service (map)\n"},"extraBinds":{"type":"array","items":{"type":"string"},"description":"Extra binds for scheduler service (list)\n"},"extraEnvs":{"type":"array","items":{"type":"string"},"description":"Extra environment for scheduler service (list)\n"},"image":{"type":"string","description":"Docker image for scheduler service (string)\n"},"podSecurityPolicy":{"type":"boolean","description":"Pod Security Policy option for kube API service (bool)\n"},"secretsEncryptionConfig":{"$ref":"#/types/rke:index/ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig:ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig","description":"[Encrypt k8s secret data configration](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/). (list maxitem: 1)\n"},"serviceClusterIpRange":{"type":"string","description":"Service Cluster ip Range option for kube controller service (string)\n"},"serviceNodePortRange":{"type":"string","description":"Service Node Port Range option for kube API service (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["alwaysPullImages","auditLog","extraArgs","extraBinds","extraEnvs","image","podSecurityPolicy","serviceClusterIpRange","serviceNodePortRange"]}}},"rke:index/ClusterServicesKubeApiDeprecatedAuditLog:ClusterServicesKubeApiDeprecatedAuditLog":{"properties":{"configuration":{"$ref":"#/types/rke:index/ClusterServicesKubeApiDeprecatedAuditLogConfiguration:ClusterServicesKubeApiDeprecatedAuditLogConfiguration","description":"Event rate limit yaml encoded configuration. `\"apiVersion\"` and `\"kind\":\"Configuration\"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\\nkind: Configuration\\nlimits:\\n- type: Server\\n  burst: 30000\\n  qps: 6000\\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)\n"},"enabled":{"type":"boolean","description":"Enable secrets encryption (bool)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["configuration","enabled"]}}},"rke:index/ClusterServicesKubeApiDeprecatedAuditLogConfiguration:ClusterServicesKubeApiDeprecatedAuditLogConfiguration":{"properties":{"format":{"type":"string","description":"Audit log format (string)\n"},"maxAge":{"type":"integer","description":"Audit log max age (int)\n"},"maxBackup":{"type":"integer","description":"Audit log max backup. Default: `10` (int)\n"},"maxSize":{"type":"integer","description":"Audit log max size. Default: `100` (int)\n"},"path":{"type":"string","description":"Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)\n"},"policy":{"type":"string","description":"Audit policy json encoded definition. `\"apiVersion\"` and `\"kind\":\"Policy\",\"rules\"` fields are required in the json. Ex. `jsonencode({\"apiVersion\":\"audit.k8s.io/v1\",\"kind\":\"Policy\",\"rules\":[{\"level\":\"RequestResponse\",\"resources\":[{\"group\":\"\",\"resources\":[\"pods\"]}]}]})` [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["format","maxAge","maxBackup","maxSize","path","policy"]}}},"rke:index/ClusterServicesKubeApiDeprecatedEventRateLimit:ClusterServicesKubeApiDeprecatedEventRateLimit":{"properties":{"configuration":{"type":"string","description":"Event rate limit yaml encoded configuration. `\"apiVersion\"` and `\"kind\":\"Configuration\"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\\nkind: Configuration\\nlimits:\\n- type: Server\\n  burst: 30000\\n  qps: 6000\\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)\n"},"enabled":{"type":"boolean","description":"Enable secrets encryption (bool)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["configuration","enabled"]}}},"rke:index/ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig:ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig":{"properties":{"customConfig":{"type":"string","description":"Secrets encryption yaml encoded custom configuration. `\"apiVersion\"` and `\"kind\":\"EncryptionConfiguration\"` fields are required in the yaml. Ex. `apiVersion: apiserver.config.k8s.io/v1\\nkind: EncryptionConfiguration\\nresources:\\n- resources:\\n  - secrets\\n  providers:\\n  - aescbc:\\n      keys:\\n      - name: k-fw5hn\\n        secret: RTczRjFDODMwQzAyMDVBREU4NDJBMUZFNDhCNzM5N0I=\\n    identity: {}\\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/) (string)\n"},"enabled":{"type":"boolean","description":"Enable secrets encryption (bool)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["customConfig","enabled"]}}},"rke:index/ClusterServicesKubeApiEventRateLimit:ClusterServicesKubeApiEventRateLimit":{"properties":{"configuration":{"type":"string","description":"Event rate limit yaml encoded configuration. `\"apiVersion\"` and `\"kind\":\"Configuration\"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\\nkind: Configuration\\nlimits:\\n- type: Server\\n  burst: 30000\\n  qps: 6000\\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)\n"},"enabled":{"type":"boolean","description":"Enable secrets encryption (bool)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["configuration","enabled"]}}},"rke:index/ClusterServicesKubeApiSecretsEncryptionConfig:ClusterServicesKubeApiSecretsEncryptionConfig":{"properties":{"customConfig":{"type":"string","description":"Secrets encryption yaml encoded custom configuration. `\"apiVersion\"` and `\"kind\":\"EncryptionConfiguration\"` fields are required in the yaml. Ex. `apiVersion: apiserver.config.k8s.io/v1\\nkind: EncryptionConfiguration\\nresources:\\n- resources:\\n  - secrets\\n  providers:\\n  - aescbc:\\n      keys:\\n      - name: k-fw5hn\\n        secret: RTczRjFDODMwQzAyMDVBREU4NDJBMUZFNDhCNzM5N0I=\\n    identity: {}\\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/) (string)\n"},"enabled":{"type":"boolean","description":"Enable secrets encryption (bool)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["customConfig","enabled"]}}},"rke:index/ClusterServicesKubeController:ClusterServicesKubeController":{"properties":{"clusterCidr":{"type":"string","description":"Cluster CIDR option for kube controller service (string)\n"},"extraArgs":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Extra arguments for scheduler service (map)\n"},"extraBinds":{"type":"array","items":{"type":"string"},"description":"Extra binds for scheduler service (list)\n"},"extraEnvs":{"type":"array","items":{"type":"string"},"description":"Extra environment for scheduler service (list)\n"},"image":{"type":"string","description":"Docker image for scheduler service (string)\n"},"serviceClusterIpRange":{"type":"string","description":"Service Cluster ip Range option for kube controller service (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["clusterCidr","extraArgs","extraBinds","extraEnvs","image","serviceClusterIpRange"]}}},"rke:index/ClusterServicesKubeControllerDeprecated:ClusterServicesKubeControllerDeprecated":{"properties":{"clusterCidr":{"type":"string","description":"Cluster CIDR option for kube controller service (string)\n"},"extraArgs":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Extra arguments for scheduler service (map)\n"},"extraBinds":{"type":"array","items":{"type":"string"},"description":"Extra binds for scheduler service (list)\n"},"extraEnvs":{"type":"array","items":{"type":"string"},"description":"Extra environment for scheduler service (list)\n"},"image":{"type":"string","description":"Docker image for scheduler service (string)\n"},"serviceClusterIpRange":{"type":"string","description":"Service Cluster ip Range option for kube controller service (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["clusterCidr","extraArgs","extraBinds","extraEnvs","image","serviceClusterIpRange"]}}},"rke:index/ClusterServicesKubeProxyDeprecated:ClusterServicesKubeProxyDeprecated":{"properties":{"extraArgs":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Extra arguments for scheduler service (map)\n"},"extraBinds":{"type":"array","items":{"type":"string"},"description":"Extra binds for scheduler service (list)\n"},"extraEnvs":{"type":"array","items":{"type":"string"},"description":"Extra environment for scheduler service (list)\n"},"image":{"type":"string","description":"Docker image for scheduler service (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["extraArgs","extraBinds","extraEnvs","image"]}}},"rke:index/ClusterServicesKubeSchedulerDeprecated:ClusterServicesKubeSchedulerDeprecated":{"properties":{"extraArgs":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Extra arguments for scheduler service (map)\n"},"extraBinds":{"type":"array","items":{"type":"string"},"description":"Extra binds for scheduler service (list)\n"},"extraEnvs":{"type":"array","items":{"type":"string"},"description":"Extra environment for scheduler service (list)\n"},"image":{"type":"string","description":"Docker image for scheduler service (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["extraArgs","extraBinds","extraEnvs","image"]}}},"rke:index/ClusterServicesKubelet:ClusterServicesKubelet":{"properties":{"clusterDnsServer":{"type":"string","description":"Cluster DNS Server option for kubelet service (string)\n"},"clusterDomain":{"type":"string","description":"Cluster Domain option for kubelet service. Default `cluster.local` (string)\n"},"extraArgs":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Extra arguments for scheduler service (map)\n"},"extraBinds":{"type":"array","items":{"type":"string"},"description":"Extra binds for scheduler service (list)\n"},"extraEnvs":{"type":"array","items":{"type":"string"},"description":"Extra environment for scheduler service (list)\n"},"failSwapOn":{"type":"boolean","description":"Enable or disable failing when swap on is not supported (bool)\n"},"generateServingCertificate":{"type":"boolean","description":"[Generate a certificate signed by the kube-ca](https://rancher.com/docs/rke/latest/en/config-options/services/#kubelet-serving-certificate-requirements). Default `false` (bool)\n"},"image":{"type":"string","description":"Docker image for scheduler service (string)\n"},"infraContainerImage":{"type":"string","description":"Infra container image for kubelet service (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["clusterDnsServer","extraArgs","extraBinds","extraEnvs","failSwapOn","image","infraContainerImage"]}}},"rke:index/ClusterServicesKubeletDeprecated:ClusterServicesKubeletDeprecated":{"properties":{"clusterDnsServer":{"type":"string","description":"Cluster DNS Server option for kubelet service (string)\n"},"clusterDomain":{"type":"string","description":"Cluster Domain option for kubelet service. Default `cluster.local` (string)\n"},"extraArgs":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Extra arguments for scheduler service (map)\n"},"extraBinds":{"type":"array","items":{"type":"string"},"description":"Extra binds for scheduler service (list)\n"},"extraEnvs":{"type":"array","items":{"type":"string"},"description":"Extra environment for scheduler service (list)\n"},"failSwapOn":{"type":"boolean","description":"Enable or disable failing when swap on is not supported (bool)\n"},"generateServingCertificate":{"type":"boolean","description":"[Generate a certificate signed by the kube-ca](https://rancher.com/docs/rke/latest/en/config-options/services/#kubelet-serving-certificate-requirements). Default `false` (bool)\n"},"image":{"type":"string","description":"Docker image for scheduler service (string)\n"},"infraContainerImage":{"type":"string","description":"Infra container image for kubelet service (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["clusterDnsServer","extraArgs","extraBinds","extraEnvs","failSwapOn","image","infraContainerImage"]}}},"rke:index/ClusterServicesKubeproxy:ClusterServicesKubeproxy":{"properties":{"extraArgs":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Extra arguments for scheduler service (map)\n"},"extraBinds":{"type":"array","items":{"type":"string"},"description":"Extra binds for scheduler service (list)\n"},"extraEnvs":{"type":"array","items":{"type":"string"},"description":"Extra environment for scheduler service (list)\n"},"image":{"type":"string","description":"Docker image for scheduler service (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["extraArgs","extraBinds","extraEnvs","image"]}}},"rke:index/ClusterServicesScheduler:ClusterServicesScheduler":{"properties":{"extraArgs":{"type":"object","additionalProperties":{"$ref":"pulumi.json#/Any"},"description":"Extra arguments for scheduler service (map)\n"},"extraBinds":{"type":"array","items":{"type":"string"},"description":"Extra binds for scheduler service (list)\n"},"extraEnvs":{"type":"array","items":{"type":"string"},"description":"Extra environment for scheduler service (list)\n"},"image":{"type":"string","description":"Docker image for scheduler service (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["extraArgs","extraBinds","extraEnvs","image"]}}},"rke:index/ClusterSystemImages:ClusterSystemImages":{"properties":{"aciCniDeployContainer":{"type":"string","description":"Docker image for aci_cni_deploy_container (string)\n"},"aciControllerContainer":{"type":"string","description":"Docker image for aci_controller_container (string)\n"},"aciHostContainer":{"type":"string","description":"Docker image for aci_host_container (string)\n"},"aciMcastContainer":{"type":"string","description":"Docker image for aci_mcast_container (string)\n"},"aciOpflexContainer":{"type":"string","description":"Docker image for aci_opflex_container (string)\n"},"aciOvsContainer":{"type":"string","description":"Docker image for aci_ovs_container (string)\n"},"alpine":{"type":"string","description":"Docker image for alpine (string)\n"},"calicoCni":{"type":"string","description":"Docker image for calico_cni (string)\n"},"calicoControllers":{"type":"string","description":"Docker image for calico_controllers (string)\n"},"calicoCtl":{"type":"string","description":"Docker image for calico_ctl (string)\n"},"calicoFlexVol":{"type":"string","description":"Docker image for calico_flex_vol (string)\n"},"calicoNode":{"type":"string","description":"Docker image for calico_node (string)\n"},"canalCni":{"type":"string","description":"Docker image for canal_cni (string)\n"},"canalFlannel":{"type":"string","description":"Docker image for canal_flannel (string)\n"},"canalFlexVol":{"type":"string","description":"Docker image for canal_flex_vol (string)\n"},"canalNode":{"type":"string","description":"Docker image for canal_node (string)\n"},"certDownloader":{"type":"string","description":"Docker image for cert_downloader (string)\n"},"coredns":{"type":"string","description":"Docker image for coredns (string)\n"},"corednsAutoscaler":{"type":"string","description":"Docker image for coredns_autoscaler (string)\n"},"dnsmasq":{"type":"string","description":"Docker image for dnsmasq (string)\n"},"etcd":{"type":"string","description":"Docker image for etcd (string)\n"},"flannel":{"type":"string","description":"Docker image for flannel (string)\n"},"flannelCni":{"type":"string","description":"Docker image for flannel_cni (string)\n"},"ingress":{"type":"string","description":"RKE k8s cluster ingress controller configuration (list maxitems:1)\n"},"ingressBackend":{"type":"string","description":"Docker image for ingress_backend (string)\n"},"kubeDns":{"type":"string","description":"Docker image for kube_dns (string)\n"},"kubeDnsAutoscaler":{"type":"string","description":"Docker image for kube_dns_autoscaler (string)\n"},"kubeDnsSidecar":{"type":"string","description":"Docker image for kube_dns_sidecar (string)\n"},"kubernetes":{"type":"string","description":"Docker image for kubernetes (string)\n"},"kubernetesServicesSidecar":{"type":"string","description":"Docker image for kubernetes_services_sidecar (string)\n"},"metricsServer":{"type":"string","description":"Docker image for metrics_server (string)\n"},"nginxProxy":{"type":"string","description":"Docker image for nginx_proxy (string)\n"},"nodelocal":{"type":"string","description":"Docker image for nodelocal (string)\n"},"podInfraContainer":{"type":"string","description":"Docker image for pod_infra_container (string)\n"},"weaveCni":{"type":"string","description":"Docker image for weave_cni (string)\n"},"weaveNode":{"type":"string","description":"Docker image for weave_node (string)\n"},"windowsPodInfraContainer":{"type":"string","description":"Docker image for windows_pod_infra_container (string)\n"}},"type":"object"},"rke:index/ClusterUpgradeStrategy:ClusterUpgradeStrategy":{"properties":{"drain":{"type":"boolean","description":"RKE drain nodes (bool)\n"},"drainInput":{"$ref":"#/types/rke:index/ClusterUpgradeStrategyDrainInput:ClusterUpgradeStrategyDrainInput","description":"RKE drain node input (list Maxitems: 1)\n"},"maxUnavailableControlplane":{"type":"string","description":"RKE max unavailable controlplane nodes (string)\n"},"maxUnavailableWorker":{"type":"string","description":"RKE max unavailable worker nodes (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["drain","drainInput","maxUnavailableControlplane","maxUnavailableWorker"]}}},"rke:index/ClusterUpgradeStrategyDrainInput:ClusterUpgradeStrategyDrainInput":{"properties":{"deleteLocalData":{"type":"boolean","description":"Delete RKE node local data (bool)\n"},"force":{"type":"boolean","description":"Force RKE node drain (bool)\n"},"gracePeriod":{"type":"integer","description":"RKE node drain grace period (int)\n"},"ignoreDaemonSets":{"type":"boolean","description":"Ignore RKE daemon sets (bool)\n"},"timeout":{"type":"integer","description":"RKE node drain timeout (int)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["deleteLocalData","force","gracePeriod","ignoreDaemonSets","timeout"]}}},"rke:index/ClusterWorkerHost:ClusterWorkerHost":{"properties":{"address":{"type":"string","description":"Address ip for node (string)\n"},"nodeName":{"type":"string","description":"Name of the host provisioned via docker machine (string)\n"}},"type":"object","language":{"nodejs":{"requiredOutputs":["address","nodeName"]}}}},"provider":{"description":"The provider type for the rke package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n","properties":{"debug":{"type":"boolean"},"logFile":{"type":"string"}},"inputProperties":{"debug":{"type":"boolean","default":false,"defaultInfo":{"environment":["RKE_DEBUG"]}},"logFile":{"type":"string","defaultInfo":{"environment":["RKE_LOG_FILE"]}}}},"resources":{"rke:index/cluster:Cluster":{"description":"\n\n\n## Import\n\nrke_cluster can be imported using the RKE cluster config and state files as ID in the format `\u003ccluster_config_file\u003e:\u003crke_state_file\u003e`\n\n```sh\n $ pulumi import rke:index/cluster:Cluster foo \u0026lt;cluster_config_file\u0026gt;:\u0026lt;rke_state_file\u0026gt;\n```\n As experimental feature, dind rke_cluster can be also imported adding `dind` as 3rd import parameter `\u003ccluster_config_file\u003e:\u003crke_state_file\u003e:dind`\n\n```sh\n $ pulumi import rke:index/cluster:Cluster foo \u0026lt;cluster_config_file\u0026gt;:\u0026lt;rke_state_file\u0026gt;:dind\n```\n ","properties":{"addonJobTimeout":{"type":"integer","description":"RKE k8s cluster addon deployment timeout in seconds for status check (int)\n"},"addons":{"type":"string","description":"RKE k8s cluster user addons YAML manifest to be deployed (string)\n"},"addonsIncludes":{"type":"array","items":{"type":"string"},"description":"RKE k8s cluster user addons YAML manifest urls or paths to be deployed (list)\n"},"apiServerUrl":{"type":"string","description":"(Computed) RKE k8s cluster api server url (string)\n"},"authentication":{"$ref":"#/types/rke:index/ClusterAuthentication:ClusterAuthentication","description":"RKE k8s cluster authentication configuration (list maxitems:1)\n"},"authorization":{"$ref":"#/types/rke:index/ClusterAuthorization:ClusterAuthorization","description":"RKE k8s cluster authorization mode configuration (list maxitems:1)\n"},"bastionHost":{"$ref":"#/types/rke:index/ClusterBastionHost:ClusterBastionHost","description":"RKE k8s cluster bastion Host configuration (list maxitems:1)\n"},"caCrt":{"type":"string","description":"(Computed/Sensitive) RKE k8s cluster CA certificate (string)\n","secret":true},"certDir":{"type":"string","description":"Specify a certificate dir path (string)\n"},"certificates":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterCertificate:ClusterCertificate"},"description":"(Computed/Sensitive) RKE k8s cluster certificates (string)\n","secret":true},"clientCert":{"type":"string","description":"(Computed/Sensitive) RKE k8s cluster client certificate (string)\n","secret":true},"clientKey":{"type":"string","description":"(Computed/Sensitive) RKE k8s cluster client key (string)\n","secret":true},"cloudProvider":{"$ref":"#/types/rke:index/ClusterCloudProvider:ClusterCloudProvider","description":"RKE k8s cluster cloud provider configuration [rke-cloud-providers](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/) (list maxitems:1)\n"},"clusterCidr":{"type":"string","description":"Cluster CIDR option for kube controller service (string)\n"},"clusterDnsServer":{"type":"string","description":"Cluster DNS Server option for kubelet service (string)\n"},"clusterDomain":{"type":"string","description":"Cluster Domain option for kubelet service. Default `cluster.local` (string)\n"},"clusterName":{"type":"string","description":"RKE k8s cluster name used in the kube config (string)\n"},"clusterYaml":{"type":"string","description":"RKE k8s cluster config yaml encoded. Provider arguments take precedence over this one (string)\n","secret":true},"controlPlaneHosts":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterControlPlaneHost:ClusterControlPlaneHost"},"description":"(Computed) RKE k8s cluster control plane nodes (list)\n"},"customCerts":{"type":"boolean","description":"Use custom certificates from a cert dir (string)\n"},"delayOnCreation":{"type":"integer","description":"RKE k8s cluster delay on creation (int)\n"},"dind":{"type":"boolean","description":"Deploy RKE cluster on a dind environment. Default: `false` (bool)\n"},"dindDnsServer":{"type":"string","description":"DinD RKE cluster dns (string)\n"},"dindStorageDriver":{"type":"string","description":"DinD RKE cluster storage driver (string)\n"},"disablePortCheck":{"type":"boolean","description":"Enable/Disable RKE k8s cluster port checking. Default `false` (bool)\n"},"dns":{"$ref":"#/types/rke:index/ClusterDns:ClusterDns","description":"RKE k8s cluster DNS Config (list maxitems:1)\n"},"enableCriDockerd":{"type":"boolean","description":"Enable/Disable CRI dockerd for kubelet. Default `false` (bool)\n"},"etcdHosts":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterEtcdHost:ClusterEtcdHost"},"description":"(Computed) RKE k8s cluster etcd nodes (list)\n"},"ignoreDockerVersion":{"type":"boolean","description":"Enable/Disable RKE k8s cluster strict docker version checking. Default `false` (bool)\n"},"inactiveHosts":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterInactiveHost:ClusterInactiveHost"},"description":"(Computed) RKE k8s cluster inactive nodes (list)\n"},"ingress":{"$ref":"#/types/rke:index/ClusterIngress:ClusterIngress","description":"RKE k8s cluster ingress controller configuration (list maxitems:1)\n"},"internalKubeConfigYaml":{"type":"string","description":"(Computed/Sensitive) RKE k8s cluster internal kube config yaml (string)\n","deprecationMessage":"Use kube_config_yaml instead","secret":true},"kubeAdminUser":{"type":"string","description":"(Computed) RKE k8s cluster admin user (string)\n"},"kubeConfigYaml":{"type":"string","description":"(Computed/Sensitive) RKE k8s cluster kube config yaml (string)\n","secret":true},"kubernetesVersion":{"type":"string","description":"K8s version to deploy. If kubernetes image is specified, image version takes precedence. Default: `rke default` (string)\n"},"monitoring":{"$ref":"#/types/rke:index/ClusterMonitoring:ClusterMonitoring","description":"RKE k8s cluster monitoring Config (list maxitems:1)\n"},"network":{"$ref":"#/types/rke:index/ClusterNetwork:ClusterNetwork","description":"RKE k8s cluster network configuration (list maxitems:1)\n"},"nodes":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterNode:ClusterNode"},"description":"RKE k8s cluster nodes (list)\n"},"nodesConfs":{"type":"array","items":{"type":"string"},"deprecationMessage":"Use cluster_yaml instead"},"prefixPath":{"type":"string","description":"RKE k8s directory path (string)\n"},"privateRegistries":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterPrivateRegistry:ClusterPrivateRegistry"},"description":"RKE k8s cluster private docker registries (list)\n"},"restore":{"$ref":"#/types/rke:index/ClusterRestore:ClusterRestore","description":"RKE k8s cluster restore configuration (list maxitems:1)\n"},"rkeClusterYaml":{"type":"string","description":"(Computed/Sensitive) RKE k8s cluster config yaml (string)\n","secret":true},"rkeState":{"type":"string","description":"(Computed/Sensitive) RKE k8s cluster state (string)\n","secret":true},"rotateCertificates":{"$ref":"#/types/rke:index/ClusterRotateCertificates:ClusterRotateCertificates","description":"RKE k8s cluster rotate certificates configuration (list maxitems:1)\n"},"runningSystemImages":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterRunningSystemImage:ClusterRunningSystemImage"},"description":"(Computed) RKE k8s cluster running system images list (list)\n"},"services":{"$ref":"#/types/rke:index/ClusterServices:ClusterServices","description":"RKE k8s cluster services (list maxitems:1)\n"},"servicesEtcdDeprecated":{"$ref":"#/types/rke:index/ClusterServicesEtcdDeprecated:ClusterServicesEtcdDeprecated","description":"Use services.etcd instead (list maxitems:1)\n","deprecationMessage":"Use services.etcd instead"},"servicesKubeApiDeprecated":{"$ref":"#/types/rke:index/ClusterServicesKubeApiDeprecated:ClusterServicesKubeApiDeprecated","description":"Use services.kube_api instead (list maxitems:1)\n","deprecationMessage":"Use services.kube_api instead"},"servicesKubeControllerDeprecated":{"$ref":"#/types/rke:index/ClusterServicesKubeControllerDeprecated:ClusterServicesKubeControllerDeprecated","description":"Use services.kube_controller instead (list maxitems:1)\n","deprecationMessage":"Use services.kube_controller instead"},"servicesKubeProxyDeprecated":{"$ref":"#/types/rke:index/ClusterServicesKubeProxyDeprecated:ClusterServicesKubeProxyDeprecated","description":"Use services.kubeproxy instead (list maxitems:1)\n","deprecationMessage":"Use services.kubeproxy instead"},"servicesKubeSchedulerDeprecated":{"$ref":"#/types/rke:index/ClusterServicesKubeSchedulerDeprecated:ClusterServicesKubeSchedulerDeprecated","description":"Use services.scheduler instead (list maxitems:1)\n","deprecationMessage":"Use services.scheduler instead"},"servicesKubeletDeprecated":{"$ref":"#/types/rke:index/ClusterServicesKubeletDeprecated:ClusterServicesKubeletDeprecated","description":"Use services.kubelet instead (list maxitems:1)\n","deprecationMessage":"Use services.kubelet instead"},"sshAgentAuth":{"type":"boolean","description":"SSH Agent Auth enable (bool)\n"},"sshCertPath":{"type":"string","description":"SSH Certificate Path (string)\n"},"sshKeyPath":{"type":"string","description":"SSH Private Key Path (string)\n"},"systemImages":{"$ref":"#/types/rke:index/ClusterSystemImages:ClusterSystemImages","description":"RKE k8s cluster system images list (list maxitems:1)\n"},"updateOnly":{"type":"boolean","description":"Skip idempotent deployment of control and etcd plane. Default `false` (bool)\n"},"upgradeStrategy":{"$ref":"#/types/rke:index/ClusterUpgradeStrategy:ClusterUpgradeStrategy","description":"RKE k8s cluster upgrade strategy (list maxitems:1)\n"},"workerHosts":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterWorkerHost:ClusterWorkerHost"},"description":"(Computed) RKE k8s cluster worker nodes (list)\n"}},"required":["apiServerUrl","caCrt","certificates","clientCert","clientKey","clusterCidr","clusterDnsServer","clusterDomain","controlPlaneHosts","etcdHosts","inactiveHosts","internalKubeConfigYaml","kubeAdminUser","kubeConfigYaml","rkeClusterYaml","rkeState","runningSystemImages","sshAgentAuth","workerHosts"],"inputProperties":{"addonJobTimeout":{"type":"integer","description":"RKE k8s cluster addon deployment timeout in seconds for status check (int)\n"},"addons":{"type":"string","description":"RKE k8s cluster user addons YAML manifest to be deployed (string)\n"},"addonsIncludes":{"type":"array","items":{"type":"string"},"description":"RKE k8s cluster user addons YAML manifest urls or paths to be deployed (list)\n"},"authentication":{"$ref":"#/types/rke:index/ClusterAuthentication:ClusterAuthentication","description":"RKE k8s cluster authentication configuration (list maxitems:1)\n"},"authorization":{"$ref":"#/types/rke:index/ClusterAuthorization:ClusterAuthorization","description":"RKE k8s cluster authorization mode configuration (list maxitems:1)\n"},"bastionHost":{"$ref":"#/types/rke:index/ClusterBastionHost:ClusterBastionHost","description":"RKE k8s cluster bastion Host configuration (list maxitems:1)\n"},"certDir":{"type":"string","description":"Specify a certificate dir path (string)\n"},"cloudProvider":{"$ref":"#/types/rke:index/ClusterCloudProvider:ClusterCloudProvider","description":"RKE k8s cluster cloud provider configuration [rke-cloud-providers](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/) (list maxitems:1)\n"},"clusterName":{"type":"string","description":"RKE k8s cluster name used in the kube config (string)\n"},"clusterYaml":{"type":"string","description":"RKE k8s cluster config yaml encoded. Provider arguments take precedence over this one (string)\n","secret":true},"customCerts":{"type":"boolean","description":"Use custom certificates from a cert dir (string)\n"},"delayOnCreation":{"type":"integer","description":"RKE k8s cluster delay on creation (int)\n"},"dind":{"type":"boolean","description":"Deploy RKE cluster on a dind environment. Default: `false` (bool)\n"},"dindDnsServer":{"type":"string","description":"DinD RKE cluster dns (string)\n"},"dindStorageDriver":{"type":"string","description":"DinD RKE cluster storage driver (string)\n"},"disablePortCheck":{"type":"boolean","description":"Enable/Disable RKE k8s cluster port checking. Default `false` (bool)\n"},"dns":{"$ref":"#/types/rke:index/ClusterDns:ClusterDns","description":"RKE k8s cluster DNS Config (list maxitems:1)\n"},"enableCriDockerd":{"type":"boolean","description":"Enable/Disable CRI dockerd for kubelet. Default `false` (bool)\n"},"ignoreDockerVersion":{"type":"boolean","description":"Enable/Disable RKE k8s cluster strict docker version checking. Default `false` (bool)\n"},"ingress":{"$ref":"#/types/rke:index/ClusterIngress:ClusterIngress","description":"RKE k8s cluster ingress controller configuration (list maxitems:1)\n"},"kubernetesVersion":{"type":"string","description":"K8s version to deploy. If kubernetes image is specified, image version takes precedence. Default: `rke default` (string)\n"},"monitoring":{"$ref":"#/types/rke:index/ClusterMonitoring:ClusterMonitoring","description":"RKE k8s cluster monitoring Config (list maxitems:1)\n"},"network":{"$ref":"#/types/rke:index/ClusterNetwork:ClusterNetwork","description":"RKE k8s cluster network configuration (list maxitems:1)\n"},"nodes":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterNode:ClusterNode"},"description":"RKE k8s cluster nodes (list)\n"},"nodesConfs":{"type":"array","items":{"type":"string"},"deprecationMessage":"Use cluster_yaml instead"},"prefixPath":{"type":"string","description":"RKE k8s directory path (string)\n"},"privateRegistries":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterPrivateRegistry:ClusterPrivateRegistry"},"description":"RKE k8s cluster private docker registries (list)\n"},"restore":{"$ref":"#/types/rke:index/ClusterRestore:ClusterRestore","description":"RKE k8s cluster restore configuration (list maxitems:1)\n"},"rotateCertificates":{"$ref":"#/types/rke:index/ClusterRotateCertificates:ClusterRotateCertificates","description":"RKE k8s cluster rotate certificates configuration (list maxitems:1)\n"},"services":{"$ref":"#/types/rke:index/ClusterServices:ClusterServices","description":"RKE k8s cluster services (list maxitems:1)\n"},"servicesEtcdDeprecated":{"$ref":"#/types/rke:index/ClusterServicesEtcdDeprecated:ClusterServicesEtcdDeprecated","description":"Use services.etcd instead (list maxitems:1)\n","deprecationMessage":"Use services.etcd instead"},"servicesKubeApiDeprecated":{"$ref":"#/types/rke:index/ClusterServicesKubeApiDeprecated:ClusterServicesKubeApiDeprecated","description":"Use services.kube_api instead (list maxitems:1)\n","deprecationMessage":"Use services.kube_api instead"},"servicesKubeControllerDeprecated":{"$ref":"#/types/rke:index/ClusterServicesKubeControllerDeprecated:ClusterServicesKubeControllerDeprecated","description":"Use services.kube_controller instead (list maxitems:1)\n","deprecationMessage":"Use services.kube_controller instead"},"servicesKubeProxyDeprecated":{"$ref":"#/types/rke:index/ClusterServicesKubeProxyDeprecated:ClusterServicesKubeProxyDeprecated","description":"Use services.kubeproxy instead (list maxitems:1)\n","deprecationMessage":"Use services.kubeproxy instead"},"servicesKubeSchedulerDeprecated":{"$ref":"#/types/rke:index/ClusterServicesKubeSchedulerDeprecated:ClusterServicesKubeSchedulerDeprecated","description":"Use services.scheduler instead (list maxitems:1)\n","deprecationMessage":"Use services.scheduler instead"},"servicesKubeletDeprecated":{"$ref":"#/types/rke:index/ClusterServicesKubeletDeprecated:ClusterServicesKubeletDeprecated","description":"Use services.kubelet instead (list maxitems:1)\n","deprecationMessage":"Use services.kubelet instead"},"sshAgentAuth":{"type":"boolean","description":"SSH Agent Auth enable (bool)\n"},"sshCertPath":{"type":"string","description":"SSH Certificate Path (string)\n"},"sshKeyPath":{"type":"string","description":"SSH Private Key Path (string)\n"},"systemImages":{"$ref":"#/types/rke:index/ClusterSystemImages:ClusterSystemImages","description":"RKE k8s cluster system images list (list maxitems:1)\n"},"updateOnly":{"type":"boolean","description":"Skip idempotent deployment of control and etcd plane. Default `false` (bool)\n"},"upgradeStrategy":{"$ref":"#/types/rke:index/ClusterUpgradeStrategy:ClusterUpgradeStrategy","description":"RKE k8s cluster upgrade strategy (list maxitems:1)\n"}},"stateInputs":{"description":"Input properties used for looking up and filtering Cluster resources.\n","properties":{"addonJobTimeout":{"type":"integer","description":"RKE k8s cluster addon deployment timeout in seconds for status check (int)\n"},"addons":{"type":"string","description":"RKE k8s cluster user addons YAML manifest to be deployed (string)\n"},"addonsIncludes":{"type":"array","items":{"type":"string"},"description":"RKE k8s cluster user addons YAML manifest urls or paths to be deployed (list)\n"},"apiServerUrl":{"type":"string","description":"(Computed) RKE k8s cluster api server url (string)\n"},"authentication":{"$ref":"#/types/rke:index/ClusterAuthentication:ClusterAuthentication","description":"RKE k8s cluster authentication configuration (list maxitems:1)\n"},"authorization":{"$ref":"#/types/rke:index/ClusterAuthorization:ClusterAuthorization","description":"RKE k8s cluster authorization mode configuration (list maxitems:1)\n"},"bastionHost":{"$ref":"#/types/rke:index/ClusterBastionHost:ClusterBastionHost","description":"RKE k8s cluster bastion Host configuration (list maxitems:1)\n"},"caCrt":{"type":"string","description":"(Computed/Sensitive) RKE k8s cluster CA certificate (string)\n","secret":true},"certDir":{"type":"string","description":"Specify a certificate dir path (string)\n"},"certificates":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterCertificate:ClusterCertificate"},"description":"(Computed/Sensitive) RKE k8s cluster certificates (string)\n","secret":true},"clientCert":{"type":"string","description":"(Computed/Sensitive) RKE k8s cluster client certificate (string)\n","secret":true},"clientKey":{"type":"string","description":"(Computed/Sensitive) RKE k8s cluster client key (string)\n","secret":true},"cloudProvider":{"$ref":"#/types/rke:index/ClusterCloudProvider:ClusterCloudProvider","description":"RKE k8s cluster cloud provider configuration [rke-cloud-providers](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/) (list maxitems:1)\n"},"clusterCidr":{"type":"string","description":"Cluster CIDR option for kube controller service (string)\n"},"clusterDnsServer":{"type":"string","description":"Cluster DNS Server option for kubelet service (string)\n"},"clusterDomain":{"type":"string","description":"Cluster Domain option for kubelet service. Default `cluster.local` (string)\n"},"clusterName":{"type":"string","description":"RKE k8s cluster name used in the kube config (string)\n"},"clusterYaml":{"type":"string","description":"RKE k8s cluster config yaml encoded. Provider arguments take precedence over this one (string)\n","secret":true},"controlPlaneHosts":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterControlPlaneHost:ClusterControlPlaneHost"},"description":"(Computed) RKE k8s cluster control plane nodes (list)\n"},"customCerts":{"type":"boolean","description":"Use custom certificates from a cert dir (string)\n"},"delayOnCreation":{"type":"integer","description":"RKE k8s cluster delay on creation (int)\n"},"dind":{"type":"boolean","description":"Deploy RKE cluster on a dind environment. Default: `false` (bool)\n"},"dindDnsServer":{"type":"string","description":"DinD RKE cluster dns (string)\n"},"dindStorageDriver":{"type":"string","description":"DinD RKE cluster storage driver (string)\n"},"disablePortCheck":{"type":"boolean","description":"Enable/Disable RKE k8s cluster port checking. Default `false` (bool)\n"},"dns":{"$ref":"#/types/rke:index/ClusterDns:ClusterDns","description":"RKE k8s cluster DNS Config (list maxitems:1)\n"},"enableCriDockerd":{"type":"boolean","description":"Enable/Disable CRI dockerd for kubelet. Default `false` (bool)\n"},"etcdHosts":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterEtcdHost:ClusterEtcdHost"},"description":"(Computed) RKE k8s cluster etcd nodes (list)\n"},"ignoreDockerVersion":{"type":"boolean","description":"Enable/Disable RKE k8s cluster strict docker version checking. Default `false` (bool)\n"},"inactiveHosts":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterInactiveHost:ClusterInactiveHost"},"description":"(Computed) RKE k8s cluster inactive nodes (list)\n"},"ingress":{"$ref":"#/types/rke:index/ClusterIngress:ClusterIngress","description":"RKE k8s cluster ingress controller configuration (list maxitems:1)\n"},"internalKubeConfigYaml":{"type":"string","description":"(Computed/Sensitive) RKE k8s cluster internal kube config yaml (string)\n","deprecationMessage":"Use kube_config_yaml instead","secret":true},"kubeAdminUser":{"type":"string","description":"(Computed) RKE k8s cluster admin user (string)\n"},"kubeConfigYaml":{"type":"string","description":"(Computed/Sensitive) RKE k8s cluster kube config yaml (string)\n","secret":true},"kubernetesVersion":{"type":"string","description":"K8s version to deploy. If kubernetes image is specified, image version takes precedence. Default: `rke default` (string)\n"},"monitoring":{"$ref":"#/types/rke:index/ClusterMonitoring:ClusterMonitoring","description":"RKE k8s cluster monitoring Config (list maxitems:1)\n"},"network":{"$ref":"#/types/rke:index/ClusterNetwork:ClusterNetwork","description":"RKE k8s cluster network configuration (list maxitems:1)\n"},"nodes":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterNode:ClusterNode"},"description":"RKE k8s cluster nodes (list)\n"},"nodesConfs":{"type":"array","items":{"type":"string"},"deprecationMessage":"Use cluster_yaml instead"},"prefixPath":{"type":"string","description":"RKE k8s directory path (string)\n"},"privateRegistries":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterPrivateRegistry:ClusterPrivateRegistry"},"description":"RKE k8s cluster private docker registries (list)\n"},"restore":{"$ref":"#/types/rke:index/ClusterRestore:ClusterRestore","description":"RKE k8s cluster restore configuration (list maxitems:1)\n"},"rkeClusterYaml":{"type":"string","description":"(Computed/Sensitive) RKE k8s cluster config yaml (string)\n","secret":true},"rkeState":{"type":"string","description":"(Computed/Sensitive) RKE k8s cluster state (string)\n","secret":true},"rotateCertificates":{"$ref":"#/types/rke:index/ClusterRotateCertificates:ClusterRotateCertificates","description":"RKE k8s cluster rotate certificates configuration (list maxitems:1)\n"},"runningSystemImages":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterRunningSystemImage:ClusterRunningSystemImage"},"description":"(Computed) RKE k8s cluster running system images list (list)\n"},"services":{"$ref":"#/types/rke:index/ClusterServices:ClusterServices","description":"RKE k8s cluster services (list maxitems:1)\n"},"servicesEtcdDeprecated":{"$ref":"#/types/rke:index/ClusterServicesEtcdDeprecated:ClusterServicesEtcdDeprecated","description":"Use services.etcd instead (list maxitems:1)\n","deprecationMessage":"Use services.etcd instead"},"servicesKubeApiDeprecated":{"$ref":"#/types/rke:index/ClusterServicesKubeApiDeprecated:ClusterServicesKubeApiDeprecated","description":"Use services.kube_api instead (list maxitems:1)\n","deprecationMessage":"Use services.kube_api instead"},"servicesKubeControllerDeprecated":{"$ref":"#/types/rke:index/ClusterServicesKubeControllerDeprecated:ClusterServicesKubeControllerDeprecated","description":"Use services.kube_controller instead (list maxitems:1)\n","deprecationMessage":"Use services.kube_controller instead"},"servicesKubeProxyDeprecated":{"$ref":"#/types/rke:index/ClusterServicesKubeProxyDeprecated:ClusterServicesKubeProxyDeprecated","description":"Use services.kubeproxy instead (list maxitems:1)\n","deprecationMessage":"Use services.kubeproxy instead"},"servicesKubeSchedulerDeprecated":{"$ref":"#/types/rke:index/ClusterServicesKubeSchedulerDeprecated:ClusterServicesKubeSchedulerDeprecated","description":"Use services.scheduler instead (list maxitems:1)\n","deprecationMessage":"Use services.scheduler instead"},"servicesKubeletDeprecated":{"$ref":"#/types/rke:index/ClusterServicesKubeletDeprecated:ClusterServicesKubeletDeprecated","description":"Use services.kubelet instead (list maxitems:1)\n","deprecationMessage":"Use services.kubelet instead"},"sshAgentAuth":{"type":"boolean","description":"SSH Agent Auth enable (bool)\n"},"sshCertPath":{"type":"string","description":"SSH Certificate Path (string)\n"},"sshKeyPath":{"type":"string","description":"SSH Private Key Path (string)\n"},"systemImages":{"$ref":"#/types/rke:index/ClusterSystemImages:ClusterSystemImages","description":"RKE k8s cluster system images list (list maxitems:1)\n"},"updateOnly":{"type":"boolean","description":"Skip idempotent deployment of control and etcd plane. Default `false` (bool)\n"},"upgradeStrategy":{"$ref":"#/types/rke:index/ClusterUpgradeStrategy:ClusterUpgradeStrategy","description":"RKE k8s cluster upgrade strategy (list maxitems:1)\n"},"workerHosts":{"type":"array","items":{"$ref":"#/types/rke:index/ClusterWorkerHost:ClusterWorkerHost"},"description":"(Computed) RKE k8s cluster worker nodes (list)\n"}},"type":"object"}}}}