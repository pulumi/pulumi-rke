// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rke

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClusterAuthentication struct {
	// List of additional hostnames and IPs to include in the api server PKI cert (list)
	Sans []string `pulumi:"sans"`
	// Authentication strategy that will be used in RKE k8s cluster. Default: `x509` (string)
	Strategy *string `pulumi:"strategy"`
	// Webhook configuration options (list maxitem: 1)
	Webhook *ClusterAuthenticationWebhook `pulumi:"webhook"`
}

// ClusterAuthenticationInput is an input type that accepts ClusterAuthenticationArgs and ClusterAuthenticationOutput values.
// You can construct a concrete instance of `ClusterAuthenticationInput` via:
//
//          ClusterAuthenticationArgs{...}
type ClusterAuthenticationInput interface {
	pulumi.Input

	ToClusterAuthenticationOutput() ClusterAuthenticationOutput
	ToClusterAuthenticationOutputWithContext(context.Context) ClusterAuthenticationOutput
}

type ClusterAuthenticationArgs struct {
	// List of additional hostnames and IPs to include in the api server PKI cert (list)
	Sans pulumi.StringArrayInput `pulumi:"sans"`
	// Authentication strategy that will be used in RKE k8s cluster. Default: `x509` (string)
	Strategy pulumi.StringPtrInput `pulumi:"strategy"`
	// Webhook configuration options (list maxitem: 1)
	Webhook ClusterAuthenticationWebhookPtrInput `pulumi:"webhook"`
}

func (ClusterAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthentication)(nil)).Elem()
}

func (i ClusterAuthenticationArgs) ToClusterAuthenticationOutput() ClusterAuthenticationOutput {
	return i.ToClusterAuthenticationOutputWithContext(context.Background())
}

func (i ClusterAuthenticationArgs) ToClusterAuthenticationOutputWithContext(ctx context.Context) ClusterAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticationOutput)
}

func (i ClusterAuthenticationArgs) ToClusterAuthenticationPtrOutput() ClusterAuthenticationPtrOutput {
	return i.ToClusterAuthenticationPtrOutputWithContext(context.Background())
}

func (i ClusterAuthenticationArgs) ToClusterAuthenticationPtrOutputWithContext(ctx context.Context) ClusterAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticationOutput).ToClusterAuthenticationPtrOutputWithContext(ctx)
}

// ClusterAuthenticationPtrInput is an input type that accepts ClusterAuthenticationArgs, ClusterAuthenticationPtr and ClusterAuthenticationPtrOutput values.
// You can construct a concrete instance of `ClusterAuthenticationPtrInput` via:
//
//          ClusterAuthenticationArgs{...}
//
//  or:
//
//          nil
type ClusterAuthenticationPtrInput interface {
	pulumi.Input

	ToClusterAuthenticationPtrOutput() ClusterAuthenticationPtrOutput
	ToClusterAuthenticationPtrOutputWithContext(context.Context) ClusterAuthenticationPtrOutput
}

type clusterAuthenticationPtrType ClusterAuthenticationArgs

func ClusterAuthenticationPtr(v *ClusterAuthenticationArgs) ClusterAuthenticationPtrInput {
	return (*clusterAuthenticationPtrType)(v)
}

func (*clusterAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthentication)(nil)).Elem()
}

func (i *clusterAuthenticationPtrType) ToClusterAuthenticationPtrOutput() ClusterAuthenticationPtrOutput {
	return i.ToClusterAuthenticationPtrOutputWithContext(context.Background())
}

func (i *clusterAuthenticationPtrType) ToClusterAuthenticationPtrOutputWithContext(ctx context.Context) ClusterAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticationPtrOutput)
}

type ClusterAuthenticationOutput struct{ *pulumi.OutputState }

func (ClusterAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthentication)(nil)).Elem()
}

func (o ClusterAuthenticationOutput) ToClusterAuthenticationOutput() ClusterAuthenticationOutput {
	return o
}

func (o ClusterAuthenticationOutput) ToClusterAuthenticationOutputWithContext(ctx context.Context) ClusterAuthenticationOutput {
	return o
}

func (o ClusterAuthenticationOutput) ToClusterAuthenticationPtrOutput() ClusterAuthenticationPtrOutput {
	return o.ToClusterAuthenticationPtrOutputWithContext(context.Background())
}

func (o ClusterAuthenticationOutput) ToClusterAuthenticationPtrOutputWithContext(ctx context.Context) ClusterAuthenticationPtrOutput {
	return o.ApplyT(func(v ClusterAuthentication) *ClusterAuthentication {
		return &v
	}).(ClusterAuthenticationPtrOutput)
}

// List of additional hostnames and IPs to include in the api server PKI cert (list)
func (o ClusterAuthenticationOutput) Sans() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterAuthentication) []string { return v.Sans }).(pulumi.StringArrayOutput)
}

// Authentication strategy that will be used in RKE k8s cluster. Default: `x509` (string)
func (o ClusterAuthenticationOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAuthentication) *string { return v.Strategy }).(pulumi.StringPtrOutput)
}

// Webhook configuration options (list maxitem: 1)
func (o ClusterAuthenticationOutput) Webhook() ClusterAuthenticationWebhookPtrOutput {
	return o.ApplyT(func(v ClusterAuthentication) *ClusterAuthenticationWebhook { return v.Webhook }).(ClusterAuthenticationWebhookPtrOutput)
}

type ClusterAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ClusterAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthentication)(nil)).Elem()
}

func (o ClusterAuthenticationPtrOutput) ToClusterAuthenticationPtrOutput() ClusterAuthenticationPtrOutput {
	return o
}

func (o ClusterAuthenticationPtrOutput) ToClusterAuthenticationPtrOutputWithContext(ctx context.Context) ClusterAuthenticationPtrOutput {
	return o
}

func (o ClusterAuthenticationPtrOutput) Elem() ClusterAuthenticationOutput {
	return o.ApplyT(func(v *ClusterAuthentication) ClusterAuthentication { return *v }).(ClusterAuthenticationOutput)
}

// List of additional hostnames and IPs to include in the api server PKI cert (list)
func (o ClusterAuthenticationPtrOutput) Sans() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterAuthentication) []string {
		if v == nil {
			return nil
		}
		return v.Sans
	}).(pulumi.StringArrayOutput)
}

// Authentication strategy that will be used in RKE k8s cluster. Default: `x509` (string)
func (o ClusterAuthenticationPtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(pulumi.StringPtrOutput)
}

// Webhook configuration options (list maxitem: 1)
func (o ClusterAuthenticationPtrOutput) Webhook() ClusterAuthenticationWebhookPtrOutput {
	return o.ApplyT(func(v *ClusterAuthentication) *ClusterAuthenticationWebhook {
		if v == nil {
			return nil
		}
		return v.Webhook
	}).(ClusterAuthenticationWebhookPtrOutput)
}

type ClusterAuthenticationWebhook struct {
	// Controls how long to cache authentication decisions (string)
	CacheTimeout *string `pulumi:"cacheTimeout"`
	// Multiline string that represent a custom webhook config file (string)
	ConfigFile *string `pulumi:"configFile"`
}

// ClusterAuthenticationWebhookInput is an input type that accepts ClusterAuthenticationWebhookArgs and ClusterAuthenticationWebhookOutput values.
// You can construct a concrete instance of `ClusterAuthenticationWebhookInput` via:
//
//          ClusterAuthenticationWebhookArgs{...}
type ClusterAuthenticationWebhookInput interface {
	pulumi.Input

	ToClusterAuthenticationWebhookOutput() ClusterAuthenticationWebhookOutput
	ToClusterAuthenticationWebhookOutputWithContext(context.Context) ClusterAuthenticationWebhookOutput
}

type ClusterAuthenticationWebhookArgs struct {
	// Controls how long to cache authentication decisions (string)
	CacheTimeout pulumi.StringPtrInput `pulumi:"cacheTimeout"`
	// Multiline string that represent a custom webhook config file (string)
	ConfigFile pulumi.StringPtrInput `pulumi:"configFile"`
}

func (ClusterAuthenticationWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthenticationWebhook)(nil)).Elem()
}

func (i ClusterAuthenticationWebhookArgs) ToClusterAuthenticationWebhookOutput() ClusterAuthenticationWebhookOutput {
	return i.ToClusterAuthenticationWebhookOutputWithContext(context.Background())
}

func (i ClusterAuthenticationWebhookArgs) ToClusterAuthenticationWebhookOutputWithContext(ctx context.Context) ClusterAuthenticationWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticationWebhookOutput)
}

func (i ClusterAuthenticationWebhookArgs) ToClusterAuthenticationWebhookPtrOutput() ClusterAuthenticationWebhookPtrOutput {
	return i.ToClusterAuthenticationWebhookPtrOutputWithContext(context.Background())
}

func (i ClusterAuthenticationWebhookArgs) ToClusterAuthenticationWebhookPtrOutputWithContext(ctx context.Context) ClusterAuthenticationWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticationWebhookOutput).ToClusterAuthenticationWebhookPtrOutputWithContext(ctx)
}

// ClusterAuthenticationWebhookPtrInput is an input type that accepts ClusterAuthenticationWebhookArgs, ClusterAuthenticationWebhookPtr and ClusterAuthenticationWebhookPtrOutput values.
// You can construct a concrete instance of `ClusterAuthenticationWebhookPtrInput` via:
//
//          ClusterAuthenticationWebhookArgs{...}
//
//  or:
//
//          nil
type ClusterAuthenticationWebhookPtrInput interface {
	pulumi.Input

	ToClusterAuthenticationWebhookPtrOutput() ClusterAuthenticationWebhookPtrOutput
	ToClusterAuthenticationWebhookPtrOutputWithContext(context.Context) ClusterAuthenticationWebhookPtrOutput
}

type clusterAuthenticationWebhookPtrType ClusterAuthenticationWebhookArgs

func ClusterAuthenticationWebhookPtr(v *ClusterAuthenticationWebhookArgs) ClusterAuthenticationWebhookPtrInput {
	return (*clusterAuthenticationWebhookPtrType)(v)
}

func (*clusterAuthenticationWebhookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthenticationWebhook)(nil)).Elem()
}

func (i *clusterAuthenticationWebhookPtrType) ToClusterAuthenticationWebhookPtrOutput() ClusterAuthenticationWebhookPtrOutput {
	return i.ToClusterAuthenticationWebhookPtrOutputWithContext(context.Background())
}

func (i *clusterAuthenticationWebhookPtrType) ToClusterAuthenticationWebhookPtrOutputWithContext(ctx context.Context) ClusterAuthenticationWebhookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthenticationWebhookPtrOutput)
}

type ClusterAuthenticationWebhookOutput struct{ *pulumi.OutputState }

func (ClusterAuthenticationWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthenticationWebhook)(nil)).Elem()
}

func (o ClusterAuthenticationWebhookOutput) ToClusterAuthenticationWebhookOutput() ClusterAuthenticationWebhookOutput {
	return o
}

func (o ClusterAuthenticationWebhookOutput) ToClusterAuthenticationWebhookOutputWithContext(ctx context.Context) ClusterAuthenticationWebhookOutput {
	return o
}

func (o ClusterAuthenticationWebhookOutput) ToClusterAuthenticationWebhookPtrOutput() ClusterAuthenticationWebhookPtrOutput {
	return o.ToClusterAuthenticationWebhookPtrOutputWithContext(context.Background())
}

func (o ClusterAuthenticationWebhookOutput) ToClusterAuthenticationWebhookPtrOutputWithContext(ctx context.Context) ClusterAuthenticationWebhookPtrOutput {
	return o.ApplyT(func(v ClusterAuthenticationWebhook) *ClusterAuthenticationWebhook {
		return &v
	}).(ClusterAuthenticationWebhookPtrOutput)
}

// Controls how long to cache authentication decisions (string)
func (o ClusterAuthenticationWebhookOutput) CacheTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAuthenticationWebhook) *string { return v.CacheTimeout }).(pulumi.StringPtrOutput)
}

// Multiline string that represent a custom webhook config file (string)
func (o ClusterAuthenticationWebhookOutput) ConfigFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAuthenticationWebhook) *string { return v.ConfigFile }).(pulumi.StringPtrOutput)
}

type ClusterAuthenticationWebhookPtrOutput struct{ *pulumi.OutputState }

func (ClusterAuthenticationWebhookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthenticationWebhook)(nil)).Elem()
}

func (o ClusterAuthenticationWebhookPtrOutput) ToClusterAuthenticationWebhookPtrOutput() ClusterAuthenticationWebhookPtrOutput {
	return o
}

func (o ClusterAuthenticationWebhookPtrOutput) ToClusterAuthenticationWebhookPtrOutputWithContext(ctx context.Context) ClusterAuthenticationWebhookPtrOutput {
	return o
}

func (o ClusterAuthenticationWebhookPtrOutput) Elem() ClusterAuthenticationWebhookOutput {
	return o.ApplyT(func(v *ClusterAuthenticationWebhook) ClusterAuthenticationWebhook { return *v }).(ClusterAuthenticationWebhookOutput)
}

// Controls how long to cache authentication decisions (string)
func (o ClusterAuthenticationWebhookPtrOutput) CacheTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAuthenticationWebhook) *string {
		if v == nil {
			return nil
		}
		return v.CacheTimeout
	}).(pulumi.StringPtrOutput)
}

// Multiline string that represent a custom webhook config file (string)
func (o ClusterAuthenticationWebhookPtrOutput) ConfigFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAuthenticationWebhook) *string {
		if v == nil {
			return nil
		}
		return v.ConfigFile
	}).(pulumi.StringPtrOutput)
}

type ClusterAuthorization struct {
	// RKE mode for authorization. `rbac` and `none` modes are available. Default `rbac` (string)
	Mode *string `pulumi:"mode"`
	// Network provider options (map)
	Options map[string]interface{} `pulumi:"options"`
}

// ClusterAuthorizationInput is an input type that accepts ClusterAuthorizationArgs and ClusterAuthorizationOutput values.
// You can construct a concrete instance of `ClusterAuthorizationInput` via:
//
//          ClusterAuthorizationArgs{...}
type ClusterAuthorizationInput interface {
	pulumi.Input

	ToClusterAuthorizationOutput() ClusterAuthorizationOutput
	ToClusterAuthorizationOutputWithContext(context.Context) ClusterAuthorizationOutput
}

type ClusterAuthorizationArgs struct {
	// RKE mode for authorization. `rbac` and `none` modes are available. Default `rbac` (string)
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Network provider options (map)
	Options pulumi.MapInput `pulumi:"options"`
}

func (ClusterAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthorization)(nil)).Elem()
}

func (i ClusterAuthorizationArgs) ToClusterAuthorizationOutput() ClusterAuthorizationOutput {
	return i.ToClusterAuthorizationOutputWithContext(context.Background())
}

func (i ClusterAuthorizationArgs) ToClusterAuthorizationOutputWithContext(ctx context.Context) ClusterAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthorizationOutput)
}

func (i ClusterAuthorizationArgs) ToClusterAuthorizationPtrOutput() ClusterAuthorizationPtrOutput {
	return i.ToClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (i ClusterAuthorizationArgs) ToClusterAuthorizationPtrOutputWithContext(ctx context.Context) ClusterAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthorizationOutput).ToClusterAuthorizationPtrOutputWithContext(ctx)
}

// ClusterAuthorizationPtrInput is an input type that accepts ClusterAuthorizationArgs, ClusterAuthorizationPtr and ClusterAuthorizationPtrOutput values.
// You can construct a concrete instance of `ClusterAuthorizationPtrInput` via:
//
//          ClusterAuthorizationArgs{...}
//
//  or:
//
//          nil
type ClusterAuthorizationPtrInput interface {
	pulumi.Input

	ToClusterAuthorizationPtrOutput() ClusterAuthorizationPtrOutput
	ToClusterAuthorizationPtrOutputWithContext(context.Context) ClusterAuthorizationPtrOutput
}

type clusterAuthorizationPtrType ClusterAuthorizationArgs

func ClusterAuthorizationPtr(v *ClusterAuthorizationArgs) ClusterAuthorizationPtrInput {
	return (*clusterAuthorizationPtrType)(v)
}

func (*clusterAuthorizationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthorization)(nil)).Elem()
}

func (i *clusterAuthorizationPtrType) ToClusterAuthorizationPtrOutput() ClusterAuthorizationPtrOutput {
	return i.ToClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (i *clusterAuthorizationPtrType) ToClusterAuthorizationPtrOutputWithContext(ctx context.Context) ClusterAuthorizationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterAuthorizationPtrOutput)
}

type ClusterAuthorizationOutput struct{ *pulumi.OutputState }

func (ClusterAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterAuthorization)(nil)).Elem()
}

func (o ClusterAuthorizationOutput) ToClusterAuthorizationOutput() ClusterAuthorizationOutput {
	return o
}

func (o ClusterAuthorizationOutput) ToClusterAuthorizationOutputWithContext(ctx context.Context) ClusterAuthorizationOutput {
	return o
}

func (o ClusterAuthorizationOutput) ToClusterAuthorizationPtrOutput() ClusterAuthorizationPtrOutput {
	return o.ToClusterAuthorizationPtrOutputWithContext(context.Background())
}

func (o ClusterAuthorizationOutput) ToClusterAuthorizationPtrOutputWithContext(ctx context.Context) ClusterAuthorizationPtrOutput {
	return o.ApplyT(func(v ClusterAuthorization) *ClusterAuthorization {
		return &v
	}).(ClusterAuthorizationPtrOutput)
}

// RKE mode for authorization. `rbac` and `none` modes are available. Default `rbac` (string)
func (o ClusterAuthorizationOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterAuthorization) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Network provider options (map)
func (o ClusterAuthorizationOutput) Options() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterAuthorization) map[string]interface{} { return v.Options }).(pulumi.MapOutput)
}

type ClusterAuthorizationPtrOutput struct{ *pulumi.OutputState }

func (ClusterAuthorizationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterAuthorization)(nil)).Elem()
}

func (o ClusterAuthorizationPtrOutput) ToClusterAuthorizationPtrOutput() ClusterAuthorizationPtrOutput {
	return o
}

func (o ClusterAuthorizationPtrOutput) ToClusterAuthorizationPtrOutputWithContext(ctx context.Context) ClusterAuthorizationPtrOutput {
	return o
}

func (o ClusterAuthorizationPtrOutput) Elem() ClusterAuthorizationOutput {
	return o.ApplyT(func(v *ClusterAuthorization) ClusterAuthorization { return *v }).(ClusterAuthorizationOutput)
}

// RKE mode for authorization. `rbac` and `none` modes are available. Default `rbac` (string)
func (o ClusterAuthorizationPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterAuthorization) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Network provider options (map)
func (o ClusterAuthorizationPtrOutput) Options() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterAuthorization) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.MapOutput)
}

type ClusterBastionHost struct {
	// Address ip for node (string)
	Address string `pulumi:"address"`
	// Port used for SSH communication (string)
	Port *string `pulumi:"port"`
	// SSH Agent Auth enable (bool)
	SshAgentAuth *bool `pulumi:"sshAgentAuth"`
	// SSH Certificate (string)
	SshCert *string `pulumi:"sshCert"`
	// SSH Certificate path (string)
	SshCertPath *string `pulumi:"sshCertPath"`
	// SSH Private Key (string)
	SshKey *string `pulumi:"sshKey"`
	// SSH Private Key path (string)
	SshKeyPath *string `pulumi:"sshKeyPath"`
	// Registry user (string)
	User string `pulumi:"user"`
}

// ClusterBastionHostInput is an input type that accepts ClusterBastionHostArgs and ClusterBastionHostOutput values.
// You can construct a concrete instance of `ClusterBastionHostInput` via:
//
//          ClusterBastionHostArgs{...}
type ClusterBastionHostInput interface {
	pulumi.Input

	ToClusterBastionHostOutput() ClusterBastionHostOutput
	ToClusterBastionHostOutputWithContext(context.Context) ClusterBastionHostOutput
}

type ClusterBastionHostArgs struct {
	// Address ip for node (string)
	Address pulumi.StringInput `pulumi:"address"`
	// Port used for SSH communication (string)
	Port pulumi.StringPtrInput `pulumi:"port"`
	// SSH Agent Auth enable (bool)
	SshAgentAuth pulumi.BoolPtrInput `pulumi:"sshAgentAuth"`
	// SSH Certificate (string)
	SshCert pulumi.StringPtrInput `pulumi:"sshCert"`
	// SSH Certificate path (string)
	SshCertPath pulumi.StringPtrInput `pulumi:"sshCertPath"`
	// SSH Private Key (string)
	SshKey pulumi.StringPtrInput `pulumi:"sshKey"`
	// SSH Private Key path (string)
	SshKeyPath pulumi.StringPtrInput `pulumi:"sshKeyPath"`
	// Registry user (string)
	User pulumi.StringInput `pulumi:"user"`
}

func (ClusterBastionHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBastionHost)(nil)).Elem()
}

func (i ClusterBastionHostArgs) ToClusterBastionHostOutput() ClusterBastionHostOutput {
	return i.ToClusterBastionHostOutputWithContext(context.Background())
}

func (i ClusterBastionHostArgs) ToClusterBastionHostOutputWithContext(ctx context.Context) ClusterBastionHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBastionHostOutput)
}

func (i ClusterBastionHostArgs) ToClusterBastionHostPtrOutput() ClusterBastionHostPtrOutput {
	return i.ToClusterBastionHostPtrOutputWithContext(context.Background())
}

func (i ClusterBastionHostArgs) ToClusterBastionHostPtrOutputWithContext(ctx context.Context) ClusterBastionHostPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBastionHostOutput).ToClusterBastionHostPtrOutputWithContext(ctx)
}

// ClusterBastionHostPtrInput is an input type that accepts ClusterBastionHostArgs, ClusterBastionHostPtr and ClusterBastionHostPtrOutput values.
// You can construct a concrete instance of `ClusterBastionHostPtrInput` via:
//
//          ClusterBastionHostArgs{...}
//
//  or:
//
//          nil
type ClusterBastionHostPtrInput interface {
	pulumi.Input

	ToClusterBastionHostPtrOutput() ClusterBastionHostPtrOutput
	ToClusterBastionHostPtrOutputWithContext(context.Context) ClusterBastionHostPtrOutput
}

type clusterBastionHostPtrType ClusterBastionHostArgs

func ClusterBastionHostPtr(v *ClusterBastionHostArgs) ClusterBastionHostPtrInput {
	return (*clusterBastionHostPtrType)(v)
}

func (*clusterBastionHostPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBastionHost)(nil)).Elem()
}

func (i *clusterBastionHostPtrType) ToClusterBastionHostPtrOutput() ClusterBastionHostPtrOutput {
	return i.ToClusterBastionHostPtrOutputWithContext(context.Background())
}

func (i *clusterBastionHostPtrType) ToClusterBastionHostPtrOutputWithContext(ctx context.Context) ClusterBastionHostPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBastionHostPtrOutput)
}

type ClusterBastionHostOutput struct{ *pulumi.OutputState }

func (ClusterBastionHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBastionHost)(nil)).Elem()
}

func (o ClusterBastionHostOutput) ToClusterBastionHostOutput() ClusterBastionHostOutput {
	return o
}

func (o ClusterBastionHostOutput) ToClusterBastionHostOutputWithContext(ctx context.Context) ClusterBastionHostOutput {
	return o
}

func (o ClusterBastionHostOutput) ToClusterBastionHostPtrOutput() ClusterBastionHostPtrOutput {
	return o.ToClusterBastionHostPtrOutputWithContext(context.Background())
}

func (o ClusterBastionHostOutput) ToClusterBastionHostPtrOutputWithContext(ctx context.Context) ClusterBastionHostPtrOutput {
	return o.ApplyT(func(v ClusterBastionHost) *ClusterBastionHost {
		return &v
	}).(ClusterBastionHostPtrOutput)
}

// Address ip for node (string)
func (o ClusterBastionHostOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBastionHost) string { return v.Address }).(pulumi.StringOutput)
}

// Port used for SSH communication (string)
func (o ClusterBastionHostOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBastionHost) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// SSH Agent Auth enable (bool)
func (o ClusterBastionHostOutput) SshAgentAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBastionHost) *bool { return v.SshAgentAuth }).(pulumi.BoolPtrOutput)
}

// SSH Certificate (string)
func (o ClusterBastionHostOutput) SshCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBastionHost) *string { return v.SshCert }).(pulumi.StringPtrOutput)
}

// SSH Certificate path (string)
func (o ClusterBastionHostOutput) SshCertPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBastionHost) *string { return v.SshCertPath }).(pulumi.StringPtrOutput)
}

// SSH Private Key (string)
func (o ClusterBastionHostOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBastionHost) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

// SSH Private Key path (string)
func (o ClusterBastionHostOutput) SshKeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBastionHost) *string { return v.SshKeyPath }).(pulumi.StringPtrOutput)
}

// Registry user (string)
func (o ClusterBastionHostOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBastionHost) string { return v.User }).(pulumi.StringOutput)
}

type ClusterBastionHostPtrOutput struct{ *pulumi.OutputState }

func (ClusterBastionHostPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBastionHost)(nil)).Elem()
}

func (o ClusterBastionHostPtrOutput) ToClusterBastionHostPtrOutput() ClusterBastionHostPtrOutput {
	return o
}

func (o ClusterBastionHostPtrOutput) ToClusterBastionHostPtrOutputWithContext(ctx context.Context) ClusterBastionHostPtrOutput {
	return o
}

func (o ClusterBastionHostPtrOutput) Elem() ClusterBastionHostOutput {
	return o.ApplyT(func(v *ClusterBastionHost) ClusterBastionHost { return *v }).(ClusterBastionHostOutput)
}

// Address ip for node (string)
func (o ClusterBastionHostPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBastionHost) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

// Port used for SSH communication (string)
func (o ClusterBastionHostPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBastionHost) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// SSH Agent Auth enable (bool)
func (o ClusterBastionHostPtrOutput) SshAgentAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBastionHost) *bool {
		if v == nil {
			return nil
		}
		return v.SshAgentAuth
	}).(pulumi.BoolPtrOutput)
}

// SSH Certificate (string)
func (o ClusterBastionHostPtrOutput) SshCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBastionHost) *string {
		if v == nil {
			return nil
		}
		return v.SshCert
	}).(pulumi.StringPtrOutput)
}

// SSH Certificate path (string)
func (o ClusterBastionHostPtrOutput) SshCertPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBastionHost) *string {
		if v == nil {
			return nil
		}
		return v.SshCertPath
	}).(pulumi.StringPtrOutput)
}

// SSH Private Key (string)
func (o ClusterBastionHostPtrOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBastionHost) *string {
		if v == nil {
			return nil
		}
		return v.SshKey
	}).(pulumi.StringPtrOutput)
}

// SSH Private Key path (string)
func (o ClusterBastionHostPtrOutput) SshKeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBastionHost) *string {
		if v == nil {
			return nil
		}
		return v.SshKeyPath
	}).(pulumi.StringPtrOutput)
}

// Registry user (string)
func (o ClusterBastionHostPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBastionHost) *string {
		if v == nil {
			return nil
		}
		return &v.User
	}).(pulumi.StringPtrOutput)
}

type ClusterCertificate struct {
	Certificate   *string `pulumi:"certificate"`
	CommonName    *string `pulumi:"commonName"`
	Config        *string `pulumi:"config"`
	ConfigEnvName *string `pulumi:"configEnvName"`
	ConfigPath    *string `pulumi:"configPath"`
	EnvName       *string `pulumi:"envName"`
	// (Computed) The ID of the resource (string)
	Id *string `pulumi:"id"`
	// TLS key for etcd service (string)
	Key        *string `pulumi:"key"`
	KeyEnvName *string `pulumi:"keyEnvName"`
	KeyPath    *string `pulumi:"keyPath"`
	// Name of virtualcenter config for Vsphere Cloud Provider config (string)
	Name   *string `pulumi:"name"`
	OuName *string `pulumi:"ouName"`
	// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
	Path *string `pulumi:"path"`
}

// ClusterCertificateInput is an input type that accepts ClusterCertificateArgs and ClusterCertificateOutput values.
// You can construct a concrete instance of `ClusterCertificateInput` via:
//
//          ClusterCertificateArgs{...}
type ClusterCertificateInput interface {
	pulumi.Input

	ToClusterCertificateOutput() ClusterCertificateOutput
	ToClusterCertificateOutputWithContext(context.Context) ClusterCertificateOutput
}

type ClusterCertificateArgs struct {
	Certificate   pulumi.StringPtrInput `pulumi:"certificate"`
	CommonName    pulumi.StringPtrInput `pulumi:"commonName"`
	Config        pulumi.StringPtrInput `pulumi:"config"`
	ConfigEnvName pulumi.StringPtrInput `pulumi:"configEnvName"`
	ConfigPath    pulumi.StringPtrInput `pulumi:"configPath"`
	EnvName       pulumi.StringPtrInput `pulumi:"envName"`
	// (Computed) The ID of the resource (string)
	Id pulumi.StringPtrInput `pulumi:"id"`
	// TLS key for etcd service (string)
	Key        pulumi.StringPtrInput `pulumi:"key"`
	KeyEnvName pulumi.StringPtrInput `pulumi:"keyEnvName"`
	KeyPath    pulumi.StringPtrInput `pulumi:"keyPath"`
	// Name of virtualcenter config for Vsphere Cloud Provider config (string)
	Name   pulumi.StringPtrInput `pulumi:"name"`
	OuName pulumi.StringPtrInput `pulumi:"ouName"`
	// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ClusterCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCertificate)(nil)).Elem()
}

func (i ClusterCertificateArgs) ToClusterCertificateOutput() ClusterCertificateOutput {
	return i.ToClusterCertificateOutputWithContext(context.Background())
}

func (i ClusterCertificateArgs) ToClusterCertificateOutputWithContext(ctx context.Context) ClusterCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCertificateOutput)
}

// ClusterCertificateArrayInput is an input type that accepts ClusterCertificateArray and ClusterCertificateArrayOutput values.
// You can construct a concrete instance of `ClusterCertificateArrayInput` via:
//
//          ClusterCertificateArray{ ClusterCertificateArgs{...} }
type ClusterCertificateArrayInput interface {
	pulumi.Input

	ToClusterCertificateArrayOutput() ClusterCertificateArrayOutput
	ToClusterCertificateArrayOutputWithContext(context.Context) ClusterCertificateArrayOutput
}

type ClusterCertificateArray []ClusterCertificateInput

func (ClusterCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCertificate)(nil)).Elem()
}

func (i ClusterCertificateArray) ToClusterCertificateArrayOutput() ClusterCertificateArrayOutput {
	return i.ToClusterCertificateArrayOutputWithContext(context.Background())
}

func (i ClusterCertificateArray) ToClusterCertificateArrayOutputWithContext(ctx context.Context) ClusterCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCertificateArrayOutput)
}

type ClusterCertificateOutput struct{ *pulumi.OutputState }

func (ClusterCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCertificate)(nil)).Elem()
}

func (o ClusterCertificateOutput) ToClusterCertificateOutput() ClusterCertificateOutput {
	return o
}

func (o ClusterCertificateOutput) ToClusterCertificateOutputWithContext(ctx context.Context) ClusterCertificateOutput {
	return o
}

func (o ClusterCertificateOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCertificate) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

func (o ClusterCertificateOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCertificate) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

func (o ClusterCertificateOutput) Config() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCertificate) *string { return v.Config }).(pulumi.StringPtrOutput)
}

func (o ClusterCertificateOutput) ConfigEnvName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCertificate) *string { return v.ConfigEnvName }).(pulumi.StringPtrOutput)
}

func (o ClusterCertificateOutput) ConfigPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCertificate) *string { return v.ConfigPath }).(pulumi.StringPtrOutput)
}

func (o ClusterCertificateOutput) EnvName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCertificate) *string { return v.EnvName }).(pulumi.StringPtrOutput)
}

// (Computed) The ID of the resource (string)
func (o ClusterCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// TLS key for etcd service (string)
func (o ClusterCertificateOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCertificate) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ClusterCertificateOutput) KeyEnvName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCertificate) *string { return v.KeyEnvName }).(pulumi.StringPtrOutput)
}

func (o ClusterCertificateOutput) KeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCertificate) *string { return v.KeyPath }).(pulumi.StringPtrOutput)
}

// Name of virtualcenter config for Vsphere Cloud Provider config (string)
func (o ClusterCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ClusterCertificateOutput) OuName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCertificate) *string { return v.OuName }).(pulumi.StringPtrOutput)
}

// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
func (o ClusterCertificateOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCertificate) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ClusterCertificateArrayOutput struct{ *pulumi.OutputState }

func (ClusterCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCertificate)(nil)).Elem()
}

func (o ClusterCertificateArrayOutput) ToClusterCertificateArrayOutput() ClusterCertificateArrayOutput {
	return o
}

func (o ClusterCertificateArrayOutput) ToClusterCertificateArrayOutputWithContext(ctx context.Context) ClusterCertificateArrayOutput {
	return o
}

func (o ClusterCertificateArrayOutput) Index(i pulumi.IntInput) ClusterCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCertificate {
		return vs[0].([]ClusterCertificate)[vs[1].(int)]
	}).(ClusterCertificateOutput)
}

type ClusterCloudProvider struct {
	// Use awsCloudProvider instead
	//
	// Deprecated: Use aws_cloud_provider instead
	AwsCloudConfig *ClusterCloudProviderAwsCloudConfig `pulumi:"awsCloudConfig"`
	// AWS Cloud Provider config [rke-aws-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/aws/) (list maxitems:1)
	AwsCloudProvider *ClusterCloudProviderAwsCloudProvider `pulumi:"awsCloudProvider"`
	// Use azureCloudProvider instead
	//
	// Deprecated: Use azure_cloud_provider instead
	AzureCloudConfig *ClusterCloudProviderAzureCloudConfig `pulumi:"azureCloudConfig"`
	// Azure Cloud Provider config [rke-azure-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/azure/) (list maxitems:1)
	AzureCloudProvider *ClusterCloudProviderAzureCloudProvider `pulumi:"azureCloudProvider"`
	// Use customCloudProvider instead
	//
	// Deprecated: Use custom_cloud_provider instead
	CustomCloudConfig *string `pulumi:"customCloudConfig"`
	// Custom Cloud Provider config (string)
	CustomCloudProvider *string `pulumi:"customCloudProvider"`
	// Name of virtualcenter config for Vsphere Cloud Provider config (string)
	Name string `pulumi:"name"`
	// Use openstackCloudProvider instead
	//
	// Deprecated: Use openstack_cloud_provider instead
	OpenstackCloudConfig *ClusterCloudProviderOpenstackCloudConfig `pulumi:"openstackCloudConfig"`
	// Openstack Cloud Provider config [rke-openstack-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/openstack/) (list maxitems:1)
	OpenstackCloudProvider *ClusterCloudProviderOpenstackCloudProvider `pulumi:"openstackCloudProvider"`
	// Use vsphereCloudProvider instead
	//
	// Deprecated: Use vsphere_cloud_provider instead
	VsphereCloudConfig *ClusterCloudProviderVsphereCloudConfig `pulumi:"vsphereCloudConfig"`
	// Vsphere Cloud Provider config [rke-vsphere-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/vsphere/) Extra argument `name` is required on `virtualCenter` configuration. (list maxitems:1)
	VsphereCloudProvider *ClusterCloudProviderVsphereCloudProvider `pulumi:"vsphereCloudProvider"`
}

// ClusterCloudProviderInput is an input type that accepts ClusterCloudProviderArgs and ClusterCloudProviderOutput values.
// You can construct a concrete instance of `ClusterCloudProviderInput` via:
//
//          ClusterCloudProviderArgs{...}
type ClusterCloudProviderInput interface {
	pulumi.Input

	ToClusterCloudProviderOutput() ClusterCloudProviderOutput
	ToClusterCloudProviderOutputWithContext(context.Context) ClusterCloudProviderOutput
}

type ClusterCloudProviderArgs struct {
	// Use awsCloudProvider instead
	//
	// Deprecated: Use aws_cloud_provider instead
	AwsCloudConfig ClusterCloudProviderAwsCloudConfigPtrInput `pulumi:"awsCloudConfig"`
	// AWS Cloud Provider config [rke-aws-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/aws/) (list maxitems:1)
	AwsCloudProvider ClusterCloudProviderAwsCloudProviderPtrInput `pulumi:"awsCloudProvider"`
	// Use azureCloudProvider instead
	//
	// Deprecated: Use azure_cloud_provider instead
	AzureCloudConfig ClusterCloudProviderAzureCloudConfigPtrInput `pulumi:"azureCloudConfig"`
	// Azure Cloud Provider config [rke-azure-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/azure/) (list maxitems:1)
	AzureCloudProvider ClusterCloudProviderAzureCloudProviderPtrInput `pulumi:"azureCloudProvider"`
	// Use customCloudProvider instead
	//
	// Deprecated: Use custom_cloud_provider instead
	CustomCloudConfig pulumi.StringPtrInput `pulumi:"customCloudConfig"`
	// Custom Cloud Provider config (string)
	CustomCloudProvider pulumi.StringPtrInput `pulumi:"customCloudProvider"`
	// Name of virtualcenter config for Vsphere Cloud Provider config (string)
	Name pulumi.StringInput `pulumi:"name"`
	// Use openstackCloudProvider instead
	//
	// Deprecated: Use openstack_cloud_provider instead
	OpenstackCloudConfig ClusterCloudProviderOpenstackCloudConfigPtrInput `pulumi:"openstackCloudConfig"`
	// Openstack Cloud Provider config [rke-openstack-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/openstack/) (list maxitems:1)
	OpenstackCloudProvider ClusterCloudProviderOpenstackCloudProviderPtrInput `pulumi:"openstackCloudProvider"`
	// Use vsphereCloudProvider instead
	//
	// Deprecated: Use vsphere_cloud_provider instead
	VsphereCloudConfig ClusterCloudProviderVsphereCloudConfigPtrInput `pulumi:"vsphereCloudConfig"`
	// Vsphere Cloud Provider config [rke-vsphere-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/vsphere/) Extra argument `name` is required on `virtualCenter` configuration. (list maxitems:1)
	VsphereCloudProvider ClusterCloudProviderVsphereCloudProviderPtrInput `pulumi:"vsphereCloudProvider"`
}

func (ClusterCloudProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProvider)(nil)).Elem()
}

func (i ClusterCloudProviderArgs) ToClusterCloudProviderOutput() ClusterCloudProviderOutput {
	return i.ToClusterCloudProviderOutputWithContext(context.Background())
}

func (i ClusterCloudProviderArgs) ToClusterCloudProviderOutputWithContext(ctx context.Context) ClusterCloudProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOutput)
}

func (i ClusterCloudProviderArgs) ToClusterCloudProviderPtrOutput() ClusterCloudProviderPtrOutput {
	return i.ToClusterCloudProviderPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderArgs) ToClusterCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOutput).ToClusterCloudProviderPtrOutputWithContext(ctx)
}

// ClusterCloudProviderPtrInput is an input type that accepts ClusterCloudProviderArgs, ClusterCloudProviderPtr and ClusterCloudProviderPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderPtrInput` via:
//
//          ClusterCloudProviderArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderPtrOutput() ClusterCloudProviderPtrOutput
	ToClusterCloudProviderPtrOutputWithContext(context.Context) ClusterCloudProviderPtrOutput
}

type clusterCloudProviderPtrType ClusterCloudProviderArgs

func ClusterCloudProviderPtr(v *ClusterCloudProviderArgs) ClusterCloudProviderPtrInput {
	return (*clusterCloudProviderPtrType)(v)
}

func (*clusterCloudProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProvider)(nil)).Elem()
}

func (i *clusterCloudProviderPtrType) ToClusterCloudProviderPtrOutput() ClusterCloudProviderPtrOutput {
	return i.ToClusterCloudProviderPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderPtrType) ToClusterCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderPtrOutput)
}

type ClusterCloudProviderOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProvider)(nil)).Elem()
}

func (o ClusterCloudProviderOutput) ToClusterCloudProviderOutput() ClusterCloudProviderOutput {
	return o
}

func (o ClusterCloudProviderOutput) ToClusterCloudProviderOutputWithContext(ctx context.Context) ClusterCloudProviderOutput {
	return o
}

func (o ClusterCloudProviderOutput) ToClusterCloudProviderPtrOutput() ClusterCloudProviderPtrOutput {
	return o.ToClusterCloudProviderPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderOutput) ToClusterCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderPtrOutput {
	return o.ApplyT(func(v ClusterCloudProvider) *ClusterCloudProvider {
		return &v
	}).(ClusterCloudProviderPtrOutput)
}

// Use awsCloudProvider instead
//
// Deprecated: Use aws_cloud_provider instead
func (o ClusterCloudProviderOutput) AwsCloudConfig() ClusterCloudProviderAwsCloudConfigPtrOutput {
	return o.ApplyT(func(v ClusterCloudProvider) *ClusterCloudProviderAwsCloudConfig { return v.AwsCloudConfig }).(ClusterCloudProviderAwsCloudConfigPtrOutput)
}

// AWS Cloud Provider config [rke-aws-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/aws/) (list maxitems:1)
func (o ClusterCloudProviderOutput) AwsCloudProvider() ClusterCloudProviderAwsCloudProviderPtrOutput {
	return o.ApplyT(func(v ClusterCloudProvider) *ClusterCloudProviderAwsCloudProvider { return v.AwsCloudProvider }).(ClusterCloudProviderAwsCloudProviderPtrOutput)
}

// Use azureCloudProvider instead
//
// Deprecated: Use azure_cloud_provider instead
func (o ClusterCloudProviderOutput) AzureCloudConfig() ClusterCloudProviderAzureCloudConfigPtrOutput {
	return o.ApplyT(func(v ClusterCloudProvider) *ClusterCloudProviderAzureCloudConfig { return v.AzureCloudConfig }).(ClusterCloudProviderAzureCloudConfigPtrOutput)
}

// Azure Cloud Provider config [rke-azure-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/azure/) (list maxitems:1)
func (o ClusterCloudProviderOutput) AzureCloudProvider() ClusterCloudProviderAzureCloudProviderPtrOutput {
	return o.ApplyT(func(v ClusterCloudProvider) *ClusterCloudProviderAzureCloudProvider { return v.AzureCloudProvider }).(ClusterCloudProviderAzureCloudProviderPtrOutput)
}

// Use customCloudProvider instead
//
// Deprecated: Use custom_cloud_provider instead
func (o ClusterCloudProviderOutput) CustomCloudConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProvider) *string { return v.CustomCloudConfig }).(pulumi.StringPtrOutput)
}

// Custom Cloud Provider config (string)
func (o ClusterCloudProviderOutput) CustomCloudProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProvider) *string { return v.CustomCloudProvider }).(pulumi.StringPtrOutput)
}

// Name of virtualcenter config for Vsphere Cloud Provider config (string)
func (o ClusterCloudProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProvider) string { return v.Name }).(pulumi.StringOutput)
}

// Use openstackCloudProvider instead
//
// Deprecated: Use openstack_cloud_provider instead
func (o ClusterCloudProviderOutput) OpenstackCloudConfig() ClusterCloudProviderOpenstackCloudConfigPtrOutput {
	return o.ApplyT(func(v ClusterCloudProvider) *ClusterCloudProviderOpenstackCloudConfig { return v.OpenstackCloudConfig }).(ClusterCloudProviderOpenstackCloudConfigPtrOutput)
}

// Openstack Cloud Provider config [rke-openstack-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/openstack/) (list maxitems:1)
func (o ClusterCloudProviderOutput) OpenstackCloudProvider() ClusterCloudProviderOpenstackCloudProviderPtrOutput {
	return o.ApplyT(func(v ClusterCloudProvider) *ClusterCloudProviderOpenstackCloudProvider {
		return v.OpenstackCloudProvider
	}).(ClusterCloudProviderOpenstackCloudProviderPtrOutput)
}

// Use vsphereCloudProvider instead
//
// Deprecated: Use vsphere_cloud_provider instead
func (o ClusterCloudProviderOutput) VsphereCloudConfig() ClusterCloudProviderVsphereCloudConfigPtrOutput {
	return o.ApplyT(func(v ClusterCloudProvider) *ClusterCloudProviderVsphereCloudConfig { return v.VsphereCloudConfig }).(ClusterCloudProviderVsphereCloudConfigPtrOutput)
}

// Vsphere Cloud Provider config [rke-vsphere-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/vsphere/) Extra argument `name` is required on `virtualCenter` configuration. (list maxitems:1)
func (o ClusterCloudProviderOutput) VsphereCloudProvider() ClusterCloudProviderVsphereCloudProviderPtrOutput {
	return o.ApplyT(func(v ClusterCloudProvider) *ClusterCloudProviderVsphereCloudProvider { return v.VsphereCloudProvider }).(ClusterCloudProviderVsphereCloudProviderPtrOutput)
}

type ClusterCloudProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProvider)(nil)).Elem()
}

func (o ClusterCloudProviderPtrOutput) ToClusterCloudProviderPtrOutput() ClusterCloudProviderPtrOutput {
	return o
}

func (o ClusterCloudProviderPtrOutput) ToClusterCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderPtrOutput {
	return o
}

func (o ClusterCloudProviderPtrOutput) Elem() ClusterCloudProviderOutput {
	return o.ApplyT(func(v *ClusterCloudProvider) ClusterCloudProvider { return *v }).(ClusterCloudProviderOutput)
}

// Use awsCloudProvider instead
//
// Deprecated: Use aws_cloud_provider instead
func (o ClusterCloudProviderPtrOutput) AwsCloudConfig() ClusterCloudProviderAwsCloudConfigPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProvider) *ClusterCloudProviderAwsCloudConfig {
		if v == nil {
			return nil
		}
		return v.AwsCloudConfig
	}).(ClusterCloudProviderAwsCloudConfigPtrOutput)
}

// AWS Cloud Provider config [rke-aws-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/aws/) (list maxitems:1)
func (o ClusterCloudProviderPtrOutput) AwsCloudProvider() ClusterCloudProviderAwsCloudProviderPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProvider) *ClusterCloudProviderAwsCloudProvider {
		if v == nil {
			return nil
		}
		return v.AwsCloudProvider
	}).(ClusterCloudProviderAwsCloudProviderPtrOutput)
}

// Use azureCloudProvider instead
//
// Deprecated: Use azure_cloud_provider instead
func (o ClusterCloudProviderPtrOutput) AzureCloudConfig() ClusterCloudProviderAzureCloudConfigPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProvider) *ClusterCloudProviderAzureCloudConfig {
		if v == nil {
			return nil
		}
		return v.AzureCloudConfig
	}).(ClusterCloudProviderAzureCloudConfigPtrOutput)
}

// Azure Cloud Provider config [rke-azure-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/azure/) (list maxitems:1)
func (o ClusterCloudProviderPtrOutput) AzureCloudProvider() ClusterCloudProviderAzureCloudProviderPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProvider) *ClusterCloudProviderAzureCloudProvider {
		if v == nil {
			return nil
		}
		return v.AzureCloudProvider
	}).(ClusterCloudProviderAzureCloudProviderPtrOutput)
}

// Use customCloudProvider instead
//
// Deprecated: Use custom_cloud_provider instead
func (o ClusterCloudProviderPtrOutput) CustomCloudConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProvider) *string {
		if v == nil {
			return nil
		}
		return v.CustomCloudConfig
	}).(pulumi.StringPtrOutput)
}

// Custom Cloud Provider config (string)
func (o ClusterCloudProviderPtrOutput) CustomCloudProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProvider) *string {
		if v == nil {
			return nil
		}
		return v.CustomCloudProvider
	}).(pulumi.StringPtrOutput)
}

// Name of virtualcenter config for Vsphere Cloud Provider config (string)
func (o ClusterCloudProviderPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Use openstackCloudProvider instead
//
// Deprecated: Use openstack_cloud_provider instead
func (o ClusterCloudProviderPtrOutput) OpenstackCloudConfig() ClusterCloudProviderOpenstackCloudConfigPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProvider) *ClusterCloudProviderOpenstackCloudConfig {
		if v == nil {
			return nil
		}
		return v.OpenstackCloudConfig
	}).(ClusterCloudProviderOpenstackCloudConfigPtrOutput)
}

// Openstack Cloud Provider config [rke-openstack-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/openstack/) (list maxitems:1)
func (o ClusterCloudProviderPtrOutput) OpenstackCloudProvider() ClusterCloudProviderOpenstackCloudProviderPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProvider) *ClusterCloudProviderOpenstackCloudProvider {
		if v == nil {
			return nil
		}
		return v.OpenstackCloudProvider
	}).(ClusterCloudProviderOpenstackCloudProviderPtrOutput)
}

// Use vsphereCloudProvider instead
//
// Deprecated: Use vsphere_cloud_provider instead
func (o ClusterCloudProviderPtrOutput) VsphereCloudConfig() ClusterCloudProviderVsphereCloudConfigPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProvider) *ClusterCloudProviderVsphereCloudConfig {
		if v == nil {
			return nil
		}
		return v.VsphereCloudConfig
	}).(ClusterCloudProviderVsphereCloudConfigPtrOutput)
}

// Vsphere Cloud Provider config [rke-vsphere-cloud-provider](https://rancher.com/docs/rke/latest/en/config-options/cloud-providers/vsphere/) Extra argument `name` is required on `virtualCenter` configuration. (list maxitems:1)
func (o ClusterCloudProviderPtrOutput) VsphereCloudProvider() ClusterCloudProviderVsphereCloudProviderPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProvider) *ClusterCloudProviderVsphereCloudProvider {
		if v == nil {
			return nil
		}
		return v.VsphereCloudProvider
	}).(ClusterCloudProviderVsphereCloudProviderPtrOutput)
}

type ClusterCloudProviderAwsCloudConfig struct {
	// (list maxitems:1)
	Global *ClusterCloudProviderAwsCloudConfigGlobal `pulumi:"global"`
	// (list)
	ServiceOverrides []ClusterCloudProviderAwsCloudConfigServiceOverride `pulumi:"serviceOverrides"`
}

// ClusterCloudProviderAwsCloudConfigInput is an input type that accepts ClusterCloudProviderAwsCloudConfigArgs and ClusterCloudProviderAwsCloudConfigOutput values.
// You can construct a concrete instance of `ClusterCloudProviderAwsCloudConfigInput` via:
//
//          ClusterCloudProviderAwsCloudConfigArgs{...}
type ClusterCloudProviderAwsCloudConfigInput interface {
	pulumi.Input

	ToClusterCloudProviderAwsCloudConfigOutput() ClusterCloudProviderAwsCloudConfigOutput
	ToClusterCloudProviderAwsCloudConfigOutputWithContext(context.Context) ClusterCloudProviderAwsCloudConfigOutput
}

type ClusterCloudProviderAwsCloudConfigArgs struct {
	// (list maxitems:1)
	Global ClusterCloudProviderAwsCloudConfigGlobalPtrInput `pulumi:"global"`
	// (list)
	ServiceOverrides ClusterCloudProviderAwsCloudConfigServiceOverrideArrayInput `pulumi:"serviceOverrides"`
}

func (ClusterCloudProviderAwsCloudConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderAwsCloudConfig)(nil)).Elem()
}

func (i ClusterCloudProviderAwsCloudConfigArgs) ToClusterCloudProviderAwsCloudConfigOutput() ClusterCloudProviderAwsCloudConfigOutput {
	return i.ToClusterCloudProviderAwsCloudConfigOutputWithContext(context.Background())
}

func (i ClusterCloudProviderAwsCloudConfigArgs) ToClusterCloudProviderAwsCloudConfigOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAwsCloudConfigOutput)
}

func (i ClusterCloudProviderAwsCloudConfigArgs) ToClusterCloudProviderAwsCloudConfigPtrOutput() ClusterCloudProviderAwsCloudConfigPtrOutput {
	return i.ToClusterCloudProviderAwsCloudConfigPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderAwsCloudConfigArgs) ToClusterCloudProviderAwsCloudConfigPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAwsCloudConfigOutput).ToClusterCloudProviderAwsCloudConfigPtrOutputWithContext(ctx)
}

// ClusterCloudProviderAwsCloudConfigPtrInput is an input type that accepts ClusterCloudProviderAwsCloudConfigArgs, ClusterCloudProviderAwsCloudConfigPtr and ClusterCloudProviderAwsCloudConfigPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderAwsCloudConfigPtrInput` via:
//
//          ClusterCloudProviderAwsCloudConfigArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderAwsCloudConfigPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderAwsCloudConfigPtrOutput() ClusterCloudProviderAwsCloudConfigPtrOutput
	ToClusterCloudProviderAwsCloudConfigPtrOutputWithContext(context.Context) ClusterCloudProviderAwsCloudConfigPtrOutput
}

type clusterCloudProviderAwsCloudConfigPtrType ClusterCloudProviderAwsCloudConfigArgs

func ClusterCloudProviderAwsCloudConfigPtr(v *ClusterCloudProviderAwsCloudConfigArgs) ClusterCloudProviderAwsCloudConfigPtrInput {
	return (*clusterCloudProviderAwsCloudConfigPtrType)(v)
}

func (*clusterCloudProviderAwsCloudConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderAwsCloudConfig)(nil)).Elem()
}

func (i *clusterCloudProviderAwsCloudConfigPtrType) ToClusterCloudProviderAwsCloudConfigPtrOutput() ClusterCloudProviderAwsCloudConfigPtrOutput {
	return i.ToClusterCloudProviderAwsCloudConfigPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderAwsCloudConfigPtrType) ToClusterCloudProviderAwsCloudConfigPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAwsCloudConfigPtrOutput)
}

type ClusterCloudProviderAwsCloudConfigOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderAwsCloudConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderAwsCloudConfig)(nil)).Elem()
}

func (o ClusterCloudProviderAwsCloudConfigOutput) ToClusterCloudProviderAwsCloudConfigOutput() ClusterCloudProviderAwsCloudConfigOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudConfigOutput) ToClusterCloudProviderAwsCloudConfigOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudConfigOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudConfigOutput) ToClusterCloudProviderAwsCloudConfigPtrOutput() ClusterCloudProviderAwsCloudConfigPtrOutput {
	return o.ToClusterCloudProviderAwsCloudConfigPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderAwsCloudConfigOutput) ToClusterCloudProviderAwsCloudConfigPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudConfigPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfig) *ClusterCloudProviderAwsCloudConfig {
		return &v
	}).(ClusterCloudProviderAwsCloudConfigPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderAwsCloudConfigOutput) Global() ClusterCloudProviderAwsCloudConfigGlobalPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfig) *ClusterCloudProviderAwsCloudConfigGlobal { return v.Global }).(ClusterCloudProviderAwsCloudConfigGlobalPtrOutput)
}

// (list)
func (o ClusterCloudProviderAwsCloudConfigOutput) ServiceOverrides() ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfig) []ClusterCloudProviderAwsCloudConfigServiceOverride {
		return v.ServiceOverrides
	}).(ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput)
}

type ClusterCloudProviderAwsCloudConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderAwsCloudConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderAwsCloudConfig)(nil)).Elem()
}

func (o ClusterCloudProviderAwsCloudConfigPtrOutput) ToClusterCloudProviderAwsCloudConfigPtrOutput() ClusterCloudProviderAwsCloudConfigPtrOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudConfigPtrOutput) ToClusterCloudProviderAwsCloudConfigPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudConfigPtrOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudConfigPtrOutput) Elem() ClusterCloudProviderAwsCloudConfigOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudConfig) ClusterCloudProviderAwsCloudConfig { return *v }).(ClusterCloudProviderAwsCloudConfigOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderAwsCloudConfigPtrOutput) Global() ClusterCloudProviderAwsCloudConfigGlobalPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudConfig) *ClusterCloudProviderAwsCloudConfigGlobal {
		if v == nil {
			return nil
		}
		return v.Global
	}).(ClusterCloudProviderAwsCloudConfigGlobalPtrOutput)
}

// (list)
func (o ClusterCloudProviderAwsCloudConfigPtrOutput) ServiceOverrides() ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudConfig) []ClusterCloudProviderAwsCloudConfigServiceOverride {
		if v == nil {
			return nil
		}
		return v.ServiceOverrides
	}).(ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput)
}

type ClusterCloudProviderAwsCloudConfigGlobal struct {
	// Disables the automatic ingress creation. Default `false` (bool)
	DisableSecurityGroupIngress *bool `pulumi:"disableSecurityGroupIngress"`
	// Setting this to true will disable the check and provide a warning that the check was skipped. Default `false` (bool)
	DisableStrictZoneCheck *bool `pulumi:"disableStrictZoneCheck"`
	// Use these ELB security groups instead create new (string)
	ElbSecurityGroup *string `pulumi:"elbSecurityGroup"`
	// The cluster id we'll use to identify our cluster resources (string)
	KubernetesClusterId *string `pulumi:"kubernetesClusterId"`
	// Legacy cluster id we'll use to identify our cluster resources (string)
	KubernetesClusterTag *string `pulumi:"kubernetesClusterTag"`
	// IAM role to assume when interaction with AWS APIs (string)
	RoleArn *string `pulumi:"roleArn"`
	// Enables using a specific RouteTable (string)
	RouteTableId *string `pulumi:"routeTableId"`
	// (string)
	SubnetId *string `pulumi:"subnetId"`
	// The AWS VPC flag enables the possibility to run the master components on a different aws account, on a different cloud provider or on-premises. If the flag is set also the KubernetesClusterTag must be provided (string)
	Vpc *string `pulumi:"vpc"`
	// The AWS zone (string)
	Zone *string `pulumi:"zone"`
}

// ClusterCloudProviderAwsCloudConfigGlobalInput is an input type that accepts ClusterCloudProviderAwsCloudConfigGlobalArgs and ClusterCloudProviderAwsCloudConfigGlobalOutput values.
// You can construct a concrete instance of `ClusterCloudProviderAwsCloudConfigGlobalInput` via:
//
//          ClusterCloudProviderAwsCloudConfigGlobalArgs{...}
type ClusterCloudProviderAwsCloudConfigGlobalInput interface {
	pulumi.Input

	ToClusterCloudProviderAwsCloudConfigGlobalOutput() ClusterCloudProviderAwsCloudConfigGlobalOutput
	ToClusterCloudProviderAwsCloudConfigGlobalOutputWithContext(context.Context) ClusterCloudProviderAwsCloudConfigGlobalOutput
}

type ClusterCloudProviderAwsCloudConfigGlobalArgs struct {
	// Disables the automatic ingress creation. Default `false` (bool)
	DisableSecurityGroupIngress pulumi.BoolPtrInput `pulumi:"disableSecurityGroupIngress"`
	// Setting this to true will disable the check and provide a warning that the check was skipped. Default `false` (bool)
	DisableStrictZoneCheck pulumi.BoolPtrInput `pulumi:"disableStrictZoneCheck"`
	// Use these ELB security groups instead create new (string)
	ElbSecurityGroup pulumi.StringPtrInput `pulumi:"elbSecurityGroup"`
	// The cluster id we'll use to identify our cluster resources (string)
	KubernetesClusterId pulumi.StringPtrInput `pulumi:"kubernetesClusterId"`
	// Legacy cluster id we'll use to identify our cluster resources (string)
	KubernetesClusterTag pulumi.StringPtrInput `pulumi:"kubernetesClusterTag"`
	// IAM role to assume when interaction with AWS APIs (string)
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Enables using a specific RouteTable (string)
	RouteTableId pulumi.StringPtrInput `pulumi:"routeTableId"`
	// (string)
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The AWS VPC flag enables the possibility to run the master components on a different aws account, on a different cloud provider or on-premises. If the flag is set also the KubernetesClusterTag must be provided (string)
	Vpc pulumi.StringPtrInput `pulumi:"vpc"`
	// The AWS zone (string)
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (ClusterCloudProviderAwsCloudConfigGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderAwsCloudConfigGlobal)(nil)).Elem()
}

func (i ClusterCloudProviderAwsCloudConfigGlobalArgs) ToClusterCloudProviderAwsCloudConfigGlobalOutput() ClusterCloudProviderAwsCloudConfigGlobalOutput {
	return i.ToClusterCloudProviderAwsCloudConfigGlobalOutputWithContext(context.Background())
}

func (i ClusterCloudProviderAwsCloudConfigGlobalArgs) ToClusterCloudProviderAwsCloudConfigGlobalOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudConfigGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAwsCloudConfigGlobalOutput)
}

func (i ClusterCloudProviderAwsCloudConfigGlobalArgs) ToClusterCloudProviderAwsCloudConfigGlobalPtrOutput() ClusterCloudProviderAwsCloudConfigGlobalPtrOutput {
	return i.ToClusterCloudProviderAwsCloudConfigGlobalPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderAwsCloudConfigGlobalArgs) ToClusterCloudProviderAwsCloudConfigGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudConfigGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAwsCloudConfigGlobalOutput).ToClusterCloudProviderAwsCloudConfigGlobalPtrOutputWithContext(ctx)
}

// ClusterCloudProviderAwsCloudConfigGlobalPtrInput is an input type that accepts ClusterCloudProviderAwsCloudConfigGlobalArgs, ClusterCloudProviderAwsCloudConfigGlobalPtr and ClusterCloudProviderAwsCloudConfigGlobalPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderAwsCloudConfigGlobalPtrInput` via:
//
//          ClusterCloudProviderAwsCloudConfigGlobalArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderAwsCloudConfigGlobalPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderAwsCloudConfigGlobalPtrOutput() ClusterCloudProviderAwsCloudConfigGlobalPtrOutput
	ToClusterCloudProviderAwsCloudConfigGlobalPtrOutputWithContext(context.Context) ClusterCloudProviderAwsCloudConfigGlobalPtrOutput
}

type clusterCloudProviderAwsCloudConfigGlobalPtrType ClusterCloudProviderAwsCloudConfigGlobalArgs

func ClusterCloudProviderAwsCloudConfigGlobalPtr(v *ClusterCloudProviderAwsCloudConfigGlobalArgs) ClusterCloudProviderAwsCloudConfigGlobalPtrInput {
	return (*clusterCloudProviderAwsCloudConfigGlobalPtrType)(v)
}

func (*clusterCloudProviderAwsCloudConfigGlobalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderAwsCloudConfigGlobal)(nil)).Elem()
}

func (i *clusterCloudProviderAwsCloudConfigGlobalPtrType) ToClusterCloudProviderAwsCloudConfigGlobalPtrOutput() ClusterCloudProviderAwsCloudConfigGlobalPtrOutput {
	return i.ToClusterCloudProviderAwsCloudConfigGlobalPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderAwsCloudConfigGlobalPtrType) ToClusterCloudProviderAwsCloudConfigGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudConfigGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAwsCloudConfigGlobalPtrOutput)
}

type ClusterCloudProviderAwsCloudConfigGlobalOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderAwsCloudConfigGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderAwsCloudConfigGlobal)(nil)).Elem()
}

func (o ClusterCloudProviderAwsCloudConfigGlobalOutput) ToClusterCloudProviderAwsCloudConfigGlobalOutput() ClusterCloudProviderAwsCloudConfigGlobalOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudConfigGlobalOutput) ToClusterCloudProviderAwsCloudConfigGlobalOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudConfigGlobalOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudConfigGlobalOutput) ToClusterCloudProviderAwsCloudConfigGlobalPtrOutput() ClusterCloudProviderAwsCloudConfigGlobalPtrOutput {
	return o.ToClusterCloudProviderAwsCloudConfigGlobalPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderAwsCloudConfigGlobalOutput) ToClusterCloudProviderAwsCloudConfigGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudConfigGlobalPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigGlobal) *ClusterCloudProviderAwsCloudConfigGlobal {
		return &v
	}).(ClusterCloudProviderAwsCloudConfigGlobalPtrOutput)
}

// Disables the automatic ingress creation. Default `false` (bool)
func (o ClusterCloudProviderAwsCloudConfigGlobalOutput) DisableSecurityGroupIngress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigGlobal) *bool { return v.DisableSecurityGroupIngress }).(pulumi.BoolPtrOutput)
}

// Setting this to true will disable the check and provide a warning that the check was skipped. Default `false` (bool)
func (o ClusterCloudProviderAwsCloudConfigGlobalOutput) DisableStrictZoneCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigGlobal) *bool { return v.DisableStrictZoneCheck }).(pulumi.BoolPtrOutput)
}

// Use these ELB security groups instead create new (string)
func (o ClusterCloudProviderAwsCloudConfigGlobalOutput) ElbSecurityGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigGlobal) *string { return v.ElbSecurityGroup }).(pulumi.StringPtrOutput)
}

// The cluster id we'll use to identify our cluster resources (string)
func (o ClusterCloudProviderAwsCloudConfigGlobalOutput) KubernetesClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigGlobal) *string { return v.KubernetesClusterId }).(pulumi.StringPtrOutput)
}

// Legacy cluster id we'll use to identify our cluster resources (string)
func (o ClusterCloudProviderAwsCloudConfigGlobalOutput) KubernetesClusterTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigGlobal) *string { return v.KubernetesClusterTag }).(pulumi.StringPtrOutput)
}

// IAM role to assume when interaction with AWS APIs (string)
func (o ClusterCloudProviderAwsCloudConfigGlobalOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigGlobal) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Enables using a specific RouteTable (string)
func (o ClusterCloudProviderAwsCloudConfigGlobalOutput) RouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigGlobal) *string { return v.RouteTableId }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAwsCloudConfigGlobalOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigGlobal) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The AWS VPC flag enables the possibility to run the master components on a different aws account, on a different cloud provider or on-premises. If the flag is set also the KubernetesClusterTag must be provided (string)
func (o ClusterCloudProviderAwsCloudConfigGlobalOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigGlobal) *string { return v.Vpc }).(pulumi.StringPtrOutput)
}

// The AWS zone (string)
func (o ClusterCloudProviderAwsCloudConfigGlobalOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigGlobal) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderAwsCloudConfigGlobalPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderAwsCloudConfigGlobalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderAwsCloudConfigGlobal)(nil)).Elem()
}

func (o ClusterCloudProviderAwsCloudConfigGlobalPtrOutput) ToClusterCloudProviderAwsCloudConfigGlobalPtrOutput() ClusterCloudProviderAwsCloudConfigGlobalPtrOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudConfigGlobalPtrOutput) ToClusterCloudProviderAwsCloudConfigGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudConfigGlobalPtrOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudConfigGlobalPtrOutput) Elem() ClusterCloudProviderAwsCloudConfigGlobalOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudConfigGlobal) ClusterCloudProviderAwsCloudConfigGlobal { return *v }).(ClusterCloudProviderAwsCloudConfigGlobalOutput)
}

// Disables the automatic ingress creation. Default `false` (bool)
func (o ClusterCloudProviderAwsCloudConfigGlobalPtrOutput) DisableSecurityGroupIngress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudConfigGlobal) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecurityGroupIngress
	}).(pulumi.BoolPtrOutput)
}

// Setting this to true will disable the check and provide a warning that the check was skipped. Default `false` (bool)
func (o ClusterCloudProviderAwsCloudConfigGlobalPtrOutput) DisableStrictZoneCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudConfigGlobal) *bool {
		if v == nil {
			return nil
		}
		return v.DisableStrictZoneCheck
	}).(pulumi.BoolPtrOutput)
}

// Use these ELB security groups instead create new (string)
func (o ClusterCloudProviderAwsCloudConfigGlobalPtrOutput) ElbSecurityGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.ElbSecurityGroup
	}).(pulumi.StringPtrOutput)
}

// The cluster id we'll use to identify our cluster resources (string)
func (o ClusterCloudProviderAwsCloudConfigGlobalPtrOutput) KubernetesClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.KubernetesClusterId
	}).(pulumi.StringPtrOutput)
}

// Legacy cluster id we'll use to identify our cluster resources (string)
func (o ClusterCloudProviderAwsCloudConfigGlobalPtrOutput) KubernetesClusterTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.KubernetesClusterTag
	}).(pulumi.StringPtrOutput)
}

// IAM role to assume when interaction with AWS APIs (string)
func (o ClusterCloudProviderAwsCloudConfigGlobalPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Enables using a specific RouteTable (string)
func (o ClusterCloudProviderAwsCloudConfigGlobalPtrOutput) RouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.RouteTableId
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAwsCloudConfigGlobalPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// The AWS VPC flag enables the possibility to run the master components on a different aws account, on a different cloud provider or on-premises. If the flag is set also the KubernetesClusterTag must be provided (string)
func (o ClusterCloudProviderAwsCloudConfigGlobalPtrOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Vpc
	}).(pulumi.StringPtrOutput)
}

// The AWS zone (string)
func (o ClusterCloudProviderAwsCloudConfigGlobalPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderAwsCloudConfigServiceOverride struct {
	// TLS key for etcd service (string)
	//
	// Deprecated: Use service instead
	Key *string `pulumi:"key"`
	// Region for S3 service (string)
	Region *string `pulumi:"region"`
	// (string)
	Service string `pulumi:"service"`
	// (string)
	SigningMethod *string `pulumi:"signingMethod"`
	// (string)
	SigningName *string `pulumi:"signingName"`
	// (string)
	SigningRegion *string `pulumi:"signingRegion"`
	// Registry URL (string)
	Url *string `pulumi:"url"`
}

// ClusterCloudProviderAwsCloudConfigServiceOverrideInput is an input type that accepts ClusterCloudProviderAwsCloudConfigServiceOverrideArgs and ClusterCloudProviderAwsCloudConfigServiceOverrideOutput values.
// You can construct a concrete instance of `ClusterCloudProviderAwsCloudConfigServiceOverrideInput` via:
//
//          ClusterCloudProviderAwsCloudConfigServiceOverrideArgs{...}
type ClusterCloudProviderAwsCloudConfigServiceOverrideInput interface {
	pulumi.Input

	ToClusterCloudProviderAwsCloudConfigServiceOverrideOutput() ClusterCloudProviderAwsCloudConfigServiceOverrideOutput
	ToClusterCloudProviderAwsCloudConfigServiceOverrideOutputWithContext(context.Context) ClusterCloudProviderAwsCloudConfigServiceOverrideOutput
}

type ClusterCloudProviderAwsCloudConfigServiceOverrideArgs struct {
	// TLS key for etcd service (string)
	//
	// Deprecated: Use service instead
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Region for S3 service (string)
	Region pulumi.StringPtrInput `pulumi:"region"`
	// (string)
	Service pulumi.StringInput `pulumi:"service"`
	// (string)
	SigningMethod pulumi.StringPtrInput `pulumi:"signingMethod"`
	// (string)
	SigningName pulumi.StringPtrInput `pulumi:"signingName"`
	// (string)
	SigningRegion pulumi.StringPtrInput `pulumi:"signingRegion"`
	// Registry URL (string)
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ClusterCloudProviderAwsCloudConfigServiceOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderAwsCloudConfigServiceOverride)(nil)).Elem()
}

func (i ClusterCloudProviderAwsCloudConfigServiceOverrideArgs) ToClusterCloudProviderAwsCloudConfigServiceOverrideOutput() ClusterCloudProviderAwsCloudConfigServiceOverrideOutput {
	return i.ToClusterCloudProviderAwsCloudConfigServiceOverrideOutputWithContext(context.Background())
}

func (i ClusterCloudProviderAwsCloudConfigServiceOverrideArgs) ToClusterCloudProviderAwsCloudConfigServiceOverrideOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudConfigServiceOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAwsCloudConfigServiceOverrideOutput)
}

// ClusterCloudProviderAwsCloudConfigServiceOverrideArrayInput is an input type that accepts ClusterCloudProviderAwsCloudConfigServiceOverrideArray and ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput values.
// You can construct a concrete instance of `ClusterCloudProviderAwsCloudConfigServiceOverrideArrayInput` via:
//
//          ClusterCloudProviderAwsCloudConfigServiceOverrideArray{ ClusterCloudProviderAwsCloudConfigServiceOverrideArgs{...} }
type ClusterCloudProviderAwsCloudConfigServiceOverrideArrayInput interface {
	pulumi.Input

	ToClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput() ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput
	ToClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutputWithContext(context.Context) ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput
}

type ClusterCloudProviderAwsCloudConfigServiceOverrideArray []ClusterCloudProviderAwsCloudConfigServiceOverrideInput

func (ClusterCloudProviderAwsCloudConfigServiceOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCloudProviderAwsCloudConfigServiceOverride)(nil)).Elem()
}

func (i ClusterCloudProviderAwsCloudConfigServiceOverrideArray) ToClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput() ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput {
	return i.ToClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutputWithContext(context.Background())
}

func (i ClusterCloudProviderAwsCloudConfigServiceOverrideArray) ToClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput)
}

type ClusterCloudProviderAwsCloudConfigServiceOverrideOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderAwsCloudConfigServiceOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderAwsCloudConfigServiceOverride)(nil)).Elem()
}

func (o ClusterCloudProviderAwsCloudConfigServiceOverrideOutput) ToClusterCloudProviderAwsCloudConfigServiceOverrideOutput() ClusterCloudProviderAwsCloudConfigServiceOverrideOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudConfigServiceOverrideOutput) ToClusterCloudProviderAwsCloudConfigServiceOverrideOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudConfigServiceOverrideOutput {
	return o
}

// TLS key for etcd service (string)
//
// Deprecated: Use service instead
func (o ClusterCloudProviderAwsCloudConfigServiceOverrideOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigServiceOverride) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Region for S3 service (string)
func (o ClusterCloudProviderAwsCloudConfigServiceOverrideOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigServiceOverride) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAwsCloudConfigServiceOverrideOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigServiceOverride) string { return v.Service }).(pulumi.StringOutput)
}

// (string)
func (o ClusterCloudProviderAwsCloudConfigServiceOverrideOutput) SigningMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigServiceOverride) *string { return v.SigningMethod }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAwsCloudConfigServiceOverrideOutput) SigningName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigServiceOverride) *string { return v.SigningName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAwsCloudConfigServiceOverrideOutput) SigningRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigServiceOverride) *string { return v.SigningRegion }).(pulumi.StringPtrOutput)
}

// Registry URL (string)
func (o ClusterCloudProviderAwsCloudConfigServiceOverrideOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudConfigServiceOverride) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCloudProviderAwsCloudConfigServiceOverride)(nil)).Elem()
}

func (o ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput) ToClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput() ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput) ToClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput) Index(i pulumi.IntInput) ClusterCloudProviderAwsCloudConfigServiceOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCloudProviderAwsCloudConfigServiceOverride {
		return vs[0].([]ClusterCloudProviderAwsCloudConfigServiceOverride)[vs[1].(int)]
	}).(ClusterCloudProviderAwsCloudConfigServiceOverrideOutput)
}

type ClusterCloudProviderAwsCloudProvider struct {
	// (list maxitems:1)
	Global *ClusterCloudProviderAwsCloudProviderGlobal `pulumi:"global"`
	// (list)
	ServiceOverrides []ClusterCloudProviderAwsCloudProviderServiceOverride `pulumi:"serviceOverrides"`
}

// ClusterCloudProviderAwsCloudProviderInput is an input type that accepts ClusterCloudProviderAwsCloudProviderArgs and ClusterCloudProviderAwsCloudProviderOutput values.
// You can construct a concrete instance of `ClusterCloudProviderAwsCloudProviderInput` via:
//
//          ClusterCloudProviderAwsCloudProviderArgs{...}
type ClusterCloudProviderAwsCloudProviderInput interface {
	pulumi.Input

	ToClusterCloudProviderAwsCloudProviderOutput() ClusterCloudProviderAwsCloudProviderOutput
	ToClusterCloudProviderAwsCloudProviderOutputWithContext(context.Context) ClusterCloudProviderAwsCloudProviderOutput
}

type ClusterCloudProviderAwsCloudProviderArgs struct {
	// (list maxitems:1)
	Global ClusterCloudProviderAwsCloudProviderGlobalPtrInput `pulumi:"global"`
	// (list)
	ServiceOverrides ClusterCloudProviderAwsCloudProviderServiceOverrideArrayInput `pulumi:"serviceOverrides"`
}

func (ClusterCloudProviderAwsCloudProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderAwsCloudProvider)(nil)).Elem()
}

func (i ClusterCloudProviderAwsCloudProviderArgs) ToClusterCloudProviderAwsCloudProviderOutput() ClusterCloudProviderAwsCloudProviderOutput {
	return i.ToClusterCloudProviderAwsCloudProviderOutputWithContext(context.Background())
}

func (i ClusterCloudProviderAwsCloudProviderArgs) ToClusterCloudProviderAwsCloudProviderOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAwsCloudProviderOutput)
}

func (i ClusterCloudProviderAwsCloudProviderArgs) ToClusterCloudProviderAwsCloudProviderPtrOutput() ClusterCloudProviderAwsCloudProviderPtrOutput {
	return i.ToClusterCloudProviderAwsCloudProviderPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderAwsCloudProviderArgs) ToClusterCloudProviderAwsCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAwsCloudProviderOutput).ToClusterCloudProviderAwsCloudProviderPtrOutputWithContext(ctx)
}

// ClusterCloudProviderAwsCloudProviderPtrInput is an input type that accepts ClusterCloudProviderAwsCloudProviderArgs, ClusterCloudProviderAwsCloudProviderPtr and ClusterCloudProviderAwsCloudProviderPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderAwsCloudProviderPtrInput` via:
//
//          ClusterCloudProviderAwsCloudProviderArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderAwsCloudProviderPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderAwsCloudProviderPtrOutput() ClusterCloudProviderAwsCloudProviderPtrOutput
	ToClusterCloudProviderAwsCloudProviderPtrOutputWithContext(context.Context) ClusterCloudProviderAwsCloudProviderPtrOutput
}

type clusterCloudProviderAwsCloudProviderPtrType ClusterCloudProviderAwsCloudProviderArgs

func ClusterCloudProviderAwsCloudProviderPtr(v *ClusterCloudProviderAwsCloudProviderArgs) ClusterCloudProviderAwsCloudProviderPtrInput {
	return (*clusterCloudProviderAwsCloudProviderPtrType)(v)
}

func (*clusterCloudProviderAwsCloudProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderAwsCloudProvider)(nil)).Elem()
}

func (i *clusterCloudProviderAwsCloudProviderPtrType) ToClusterCloudProviderAwsCloudProviderPtrOutput() ClusterCloudProviderAwsCloudProviderPtrOutput {
	return i.ToClusterCloudProviderAwsCloudProviderPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderAwsCloudProviderPtrType) ToClusterCloudProviderAwsCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAwsCloudProviderPtrOutput)
}

type ClusterCloudProviderAwsCloudProviderOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderAwsCloudProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderAwsCloudProvider)(nil)).Elem()
}

func (o ClusterCloudProviderAwsCloudProviderOutput) ToClusterCloudProviderAwsCloudProviderOutput() ClusterCloudProviderAwsCloudProviderOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudProviderOutput) ToClusterCloudProviderAwsCloudProviderOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudProviderOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudProviderOutput) ToClusterCloudProviderAwsCloudProviderPtrOutput() ClusterCloudProviderAwsCloudProviderPtrOutput {
	return o.ToClusterCloudProviderAwsCloudProviderPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderAwsCloudProviderOutput) ToClusterCloudProviderAwsCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudProviderPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProvider) *ClusterCloudProviderAwsCloudProvider {
		return &v
	}).(ClusterCloudProviderAwsCloudProviderPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderAwsCloudProviderOutput) Global() ClusterCloudProviderAwsCloudProviderGlobalPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProvider) *ClusterCloudProviderAwsCloudProviderGlobal {
		return v.Global
	}).(ClusterCloudProviderAwsCloudProviderGlobalPtrOutput)
}

// (list)
func (o ClusterCloudProviderAwsCloudProviderOutput) ServiceOverrides() ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProvider) []ClusterCloudProviderAwsCloudProviderServiceOverride {
		return v.ServiceOverrides
	}).(ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput)
}

type ClusterCloudProviderAwsCloudProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderAwsCloudProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderAwsCloudProvider)(nil)).Elem()
}

func (o ClusterCloudProviderAwsCloudProviderPtrOutput) ToClusterCloudProviderAwsCloudProviderPtrOutput() ClusterCloudProviderAwsCloudProviderPtrOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudProviderPtrOutput) ToClusterCloudProviderAwsCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudProviderPtrOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudProviderPtrOutput) Elem() ClusterCloudProviderAwsCloudProviderOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudProvider) ClusterCloudProviderAwsCloudProvider { return *v }).(ClusterCloudProviderAwsCloudProviderOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderAwsCloudProviderPtrOutput) Global() ClusterCloudProviderAwsCloudProviderGlobalPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudProvider) *ClusterCloudProviderAwsCloudProviderGlobal {
		if v == nil {
			return nil
		}
		return v.Global
	}).(ClusterCloudProviderAwsCloudProviderGlobalPtrOutput)
}

// (list)
func (o ClusterCloudProviderAwsCloudProviderPtrOutput) ServiceOverrides() ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudProvider) []ClusterCloudProviderAwsCloudProviderServiceOverride {
		if v == nil {
			return nil
		}
		return v.ServiceOverrides
	}).(ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput)
}

type ClusterCloudProviderAwsCloudProviderGlobal struct {
	// Disables the automatic ingress creation. Default `false` (bool)
	DisableSecurityGroupIngress *bool `pulumi:"disableSecurityGroupIngress"`
	// Setting this to true will disable the check and provide a warning that the check was skipped. Default `false` (bool)
	DisableStrictZoneCheck *bool `pulumi:"disableStrictZoneCheck"`
	// Use these ELB security groups instead create new (string)
	ElbSecurityGroup *string `pulumi:"elbSecurityGroup"`
	// The cluster id we'll use to identify our cluster resources (string)
	KubernetesClusterId *string `pulumi:"kubernetesClusterId"`
	// Legacy cluster id we'll use to identify our cluster resources (string)
	KubernetesClusterTag *string `pulumi:"kubernetesClusterTag"`
	// IAM role to assume when interaction with AWS APIs (string)
	RoleArn *string `pulumi:"roleArn"`
	// Enables using a specific RouteTable (string)
	RouteTableId *string `pulumi:"routeTableId"`
	// (string)
	SubnetId *string `pulumi:"subnetId"`
	// The AWS VPC flag enables the possibility to run the master components on a different aws account, on a different cloud provider or on-premises. If the flag is set also the KubernetesClusterTag must be provided (string)
	Vpc *string `pulumi:"vpc"`
	// The AWS zone (string)
	Zone *string `pulumi:"zone"`
}

// ClusterCloudProviderAwsCloudProviderGlobalInput is an input type that accepts ClusterCloudProviderAwsCloudProviderGlobalArgs and ClusterCloudProviderAwsCloudProviderGlobalOutput values.
// You can construct a concrete instance of `ClusterCloudProviderAwsCloudProviderGlobalInput` via:
//
//          ClusterCloudProviderAwsCloudProviderGlobalArgs{...}
type ClusterCloudProviderAwsCloudProviderGlobalInput interface {
	pulumi.Input

	ToClusterCloudProviderAwsCloudProviderGlobalOutput() ClusterCloudProviderAwsCloudProviderGlobalOutput
	ToClusterCloudProviderAwsCloudProviderGlobalOutputWithContext(context.Context) ClusterCloudProviderAwsCloudProviderGlobalOutput
}

type ClusterCloudProviderAwsCloudProviderGlobalArgs struct {
	// Disables the automatic ingress creation. Default `false` (bool)
	DisableSecurityGroupIngress pulumi.BoolPtrInput `pulumi:"disableSecurityGroupIngress"`
	// Setting this to true will disable the check and provide a warning that the check was skipped. Default `false` (bool)
	DisableStrictZoneCheck pulumi.BoolPtrInput `pulumi:"disableStrictZoneCheck"`
	// Use these ELB security groups instead create new (string)
	ElbSecurityGroup pulumi.StringPtrInput `pulumi:"elbSecurityGroup"`
	// The cluster id we'll use to identify our cluster resources (string)
	KubernetesClusterId pulumi.StringPtrInput `pulumi:"kubernetesClusterId"`
	// Legacy cluster id we'll use to identify our cluster resources (string)
	KubernetesClusterTag pulumi.StringPtrInput `pulumi:"kubernetesClusterTag"`
	// IAM role to assume when interaction with AWS APIs (string)
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Enables using a specific RouteTable (string)
	RouteTableId pulumi.StringPtrInput `pulumi:"routeTableId"`
	// (string)
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// The AWS VPC flag enables the possibility to run the master components on a different aws account, on a different cloud provider or on-premises. If the flag is set also the KubernetesClusterTag must be provided (string)
	Vpc pulumi.StringPtrInput `pulumi:"vpc"`
	// The AWS zone (string)
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (ClusterCloudProviderAwsCloudProviderGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderAwsCloudProviderGlobal)(nil)).Elem()
}

func (i ClusterCloudProviderAwsCloudProviderGlobalArgs) ToClusterCloudProviderAwsCloudProviderGlobalOutput() ClusterCloudProviderAwsCloudProviderGlobalOutput {
	return i.ToClusterCloudProviderAwsCloudProviderGlobalOutputWithContext(context.Background())
}

func (i ClusterCloudProviderAwsCloudProviderGlobalArgs) ToClusterCloudProviderAwsCloudProviderGlobalOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudProviderGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAwsCloudProviderGlobalOutput)
}

func (i ClusterCloudProviderAwsCloudProviderGlobalArgs) ToClusterCloudProviderAwsCloudProviderGlobalPtrOutput() ClusterCloudProviderAwsCloudProviderGlobalPtrOutput {
	return i.ToClusterCloudProviderAwsCloudProviderGlobalPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderAwsCloudProviderGlobalArgs) ToClusterCloudProviderAwsCloudProviderGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudProviderGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAwsCloudProviderGlobalOutput).ToClusterCloudProviderAwsCloudProviderGlobalPtrOutputWithContext(ctx)
}

// ClusterCloudProviderAwsCloudProviderGlobalPtrInput is an input type that accepts ClusterCloudProviderAwsCloudProviderGlobalArgs, ClusterCloudProviderAwsCloudProviderGlobalPtr and ClusterCloudProviderAwsCloudProviderGlobalPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderAwsCloudProviderGlobalPtrInput` via:
//
//          ClusterCloudProviderAwsCloudProviderGlobalArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderAwsCloudProviderGlobalPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderAwsCloudProviderGlobalPtrOutput() ClusterCloudProviderAwsCloudProviderGlobalPtrOutput
	ToClusterCloudProviderAwsCloudProviderGlobalPtrOutputWithContext(context.Context) ClusterCloudProviderAwsCloudProviderGlobalPtrOutput
}

type clusterCloudProviderAwsCloudProviderGlobalPtrType ClusterCloudProviderAwsCloudProviderGlobalArgs

func ClusterCloudProviderAwsCloudProviderGlobalPtr(v *ClusterCloudProviderAwsCloudProviderGlobalArgs) ClusterCloudProviderAwsCloudProviderGlobalPtrInput {
	return (*clusterCloudProviderAwsCloudProviderGlobalPtrType)(v)
}

func (*clusterCloudProviderAwsCloudProviderGlobalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderAwsCloudProviderGlobal)(nil)).Elem()
}

func (i *clusterCloudProviderAwsCloudProviderGlobalPtrType) ToClusterCloudProviderAwsCloudProviderGlobalPtrOutput() ClusterCloudProviderAwsCloudProviderGlobalPtrOutput {
	return i.ToClusterCloudProviderAwsCloudProviderGlobalPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderAwsCloudProviderGlobalPtrType) ToClusterCloudProviderAwsCloudProviderGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudProviderGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAwsCloudProviderGlobalPtrOutput)
}

type ClusterCloudProviderAwsCloudProviderGlobalOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderAwsCloudProviderGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderAwsCloudProviderGlobal)(nil)).Elem()
}

func (o ClusterCloudProviderAwsCloudProviderGlobalOutput) ToClusterCloudProviderAwsCloudProviderGlobalOutput() ClusterCloudProviderAwsCloudProviderGlobalOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudProviderGlobalOutput) ToClusterCloudProviderAwsCloudProviderGlobalOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudProviderGlobalOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudProviderGlobalOutput) ToClusterCloudProviderAwsCloudProviderGlobalPtrOutput() ClusterCloudProviderAwsCloudProviderGlobalPtrOutput {
	return o.ToClusterCloudProviderAwsCloudProviderGlobalPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderAwsCloudProviderGlobalOutput) ToClusterCloudProviderAwsCloudProviderGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudProviderGlobalPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderGlobal) *ClusterCloudProviderAwsCloudProviderGlobal {
		return &v
	}).(ClusterCloudProviderAwsCloudProviderGlobalPtrOutput)
}

// Disables the automatic ingress creation. Default `false` (bool)
func (o ClusterCloudProviderAwsCloudProviderGlobalOutput) DisableSecurityGroupIngress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderGlobal) *bool { return v.DisableSecurityGroupIngress }).(pulumi.BoolPtrOutput)
}

// Setting this to true will disable the check and provide a warning that the check was skipped. Default `false` (bool)
func (o ClusterCloudProviderAwsCloudProviderGlobalOutput) DisableStrictZoneCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderGlobal) *bool { return v.DisableStrictZoneCheck }).(pulumi.BoolPtrOutput)
}

// Use these ELB security groups instead create new (string)
func (o ClusterCloudProviderAwsCloudProviderGlobalOutput) ElbSecurityGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderGlobal) *string { return v.ElbSecurityGroup }).(pulumi.StringPtrOutput)
}

// The cluster id we'll use to identify our cluster resources (string)
func (o ClusterCloudProviderAwsCloudProviderGlobalOutput) KubernetesClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderGlobal) *string { return v.KubernetesClusterId }).(pulumi.StringPtrOutput)
}

// Legacy cluster id we'll use to identify our cluster resources (string)
func (o ClusterCloudProviderAwsCloudProviderGlobalOutput) KubernetesClusterTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderGlobal) *string { return v.KubernetesClusterTag }).(pulumi.StringPtrOutput)
}

// IAM role to assume when interaction with AWS APIs (string)
func (o ClusterCloudProviderAwsCloudProviderGlobalOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderGlobal) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Enables using a specific RouteTable (string)
func (o ClusterCloudProviderAwsCloudProviderGlobalOutput) RouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderGlobal) *string { return v.RouteTableId }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAwsCloudProviderGlobalOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderGlobal) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The AWS VPC flag enables the possibility to run the master components on a different aws account, on a different cloud provider or on-premises. If the flag is set also the KubernetesClusterTag must be provided (string)
func (o ClusterCloudProviderAwsCloudProviderGlobalOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderGlobal) *string { return v.Vpc }).(pulumi.StringPtrOutput)
}

// The AWS zone (string)
func (o ClusterCloudProviderAwsCloudProviderGlobalOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderGlobal) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderAwsCloudProviderGlobalPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderAwsCloudProviderGlobalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderAwsCloudProviderGlobal)(nil)).Elem()
}

func (o ClusterCloudProviderAwsCloudProviderGlobalPtrOutput) ToClusterCloudProviderAwsCloudProviderGlobalPtrOutput() ClusterCloudProviderAwsCloudProviderGlobalPtrOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudProviderGlobalPtrOutput) ToClusterCloudProviderAwsCloudProviderGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudProviderGlobalPtrOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudProviderGlobalPtrOutput) Elem() ClusterCloudProviderAwsCloudProviderGlobalOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudProviderGlobal) ClusterCloudProviderAwsCloudProviderGlobal {
		return *v
	}).(ClusterCloudProviderAwsCloudProviderGlobalOutput)
}

// Disables the automatic ingress creation. Default `false` (bool)
func (o ClusterCloudProviderAwsCloudProviderGlobalPtrOutput) DisableSecurityGroupIngress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudProviderGlobal) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSecurityGroupIngress
	}).(pulumi.BoolPtrOutput)
}

// Setting this to true will disable the check and provide a warning that the check was skipped. Default `false` (bool)
func (o ClusterCloudProviderAwsCloudProviderGlobalPtrOutput) DisableStrictZoneCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudProviderGlobal) *bool {
		if v == nil {
			return nil
		}
		return v.DisableStrictZoneCheck
	}).(pulumi.BoolPtrOutput)
}

// Use these ELB security groups instead create new (string)
func (o ClusterCloudProviderAwsCloudProviderGlobalPtrOutput) ElbSecurityGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.ElbSecurityGroup
	}).(pulumi.StringPtrOutput)
}

// The cluster id we'll use to identify our cluster resources (string)
func (o ClusterCloudProviderAwsCloudProviderGlobalPtrOutput) KubernetesClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.KubernetesClusterId
	}).(pulumi.StringPtrOutput)
}

// Legacy cluster id we'll use to identify our cluster resources (string)
func (o ClusterCloudProviderAwsCloudProviderGlobalPtrOutput) KubernetesClusterTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.KubernetesClusterTag
	}).(pulumi.StringPtrOutput)
}

// IAM role to assume when interaction with AWS APIs (string)
func (o ClusterCloudProviderAwsCloudProviderGlobalPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Enables using a specific RouteTable (string)
func (o ClusterCloudProviderAwsCloudProviderGlobalPtrOutput) RouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.RouteTableId
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAwsCloudProviderGlobalPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// The AWS VPC flag enables the possibility to run the master components on a different aws account, on a different cloud provider or on-premises. If the flag is set also the KubernetesClusterTag must be provided (string)
func (o ClusterCloudProviderAwsCloudProviderGlobalPtrOutput) Vpc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Vpc
	}).(pulumi.StringPtrOutput)
}

// The AWS zone (string)
func (o ClusterCloudProviderAwsCloudProviderGlobalPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAwsCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderAwsCloudProviderServiceOverride struct {
	// TLS key for etcd service (string)
	//
	// Deprecated: Use service instead
	Key *string `pulumi:"key"`
	// Region for S3 service (string)
	Region *string `pulumi:"region"`
	// (string)
	Service string `pulumi:"service"`
	// (string)
	SigningMethod *string `pulumi:"signingMethod"`
	// (string)
	SigningName *string `pulumi:"signingName"`
	// (string)
	SigningRegion *string `pulumi:"signingRegion"`
	// Registry URL (string)
	Url *string `pulumi:"url"`
}

// ClusterCloudProviderAwsCloudProviderServiceOverrideInput is an input type that accepts ClusterCloudProviderAwsCloudProviderServiceOverrideArgs and ClusterCloudProviderAwsCloudProviderServiceOverrideOutput values.
// You can construct a concrete instance of `ClusterCloudProviderAwsCloudProviderServiceOverrideInput` via:
//
//          ClusterCloudProviderAwsCloudProviderServiceOverrideArgs{...}
type ClusterCloudProviderAwsCloudProviderServiceOverrideInput interface {
	pulumi.Input

	ToClusterCloudProviderAwsCloudProviderServiceOverrideOutput() ClusterCloudProviderAwsCloudProviderServiceOverrideOutput
	ToClusterCloudProviderAwsCloudProviderServiceOverrideOutputWithContext(context.Context) ClusterCloudProviderAwsCloudProviderServiceOverrideOutput
}

type ClusterCloudProviderAwsCloudProviderServiceOverrideArgs struct {
	// TLS key for etcd service (string)
	//
	// Deprecated: Use service instead
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Region for S3 service (string)
	Region pulumi.StringPtrInput `pulumi:"region"`
	// (string)
	Service pulumi.StringInput `pulumi:"service"`
	// (string)
	SigningMethod pulumi.StringPtrInput `pulumi:"signingMethod"`
	// (string)
	SigningName pulumi.StringPtrInput `pulumi:"signingName"`
	// (string)
	SigningRegion pulumi.StringPtrInput `pulumi:"signingRegion"`
	// Registry URL (string)
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ClusterCloudProviderAwsCloudProviderServiceOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderAwsCloudProviderServiceOverride)(nil)).Elem()
}

func (i ClusterCloudProviderAwsCloudProviderServiceOverrideArgs) ToClusterCloudProviderAwsCloudProviderServiceOverrideOutput() ClusterCloudProviderAwsCloudProviderServiceOverrideOutput {
	return i.ToClusterCloudProviderAwsCloudProviderServiceOverrideOutputWithContext(context.Background())
}

func (i ClusterCloudProviderAwsCloudProviderServiceOverrideArgs) ToClusterCloudProviderAwsCloudProviderServiceOverrideOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudProviderServiceOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAwsCloudProviderServiceOverrideOutput)
}

// ClusterCloudProviderAwsCloudProviderServiceOverrideArrayInput is an input type that accepts ClusterCloudProviderAwsCloudProviderServiceOverrideArray and ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput values.
// You can construct a concrete instance of `ClusterCloudProviderAwsCloudProviderServiceOverrideArrayInput` via:
//
//          ClusterCloudProviderAwsCloudProviderServiceOverrideArray{ ClusterCloudProviderAwsCloudProviderServiceOverrideArgs{...} }
type ClusterCloudProviderAwsCloudProviderServiceOverrideArrayInput interface {
	pulumi.Input

	ToClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput() ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput
	ToClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutputWithContext(context.Context) ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput
}

type ClusterCloudProviderAwsCloudProviderServiceOverrideArray []ClusterCloudProviderAwsCloudProviderServiceOverrideInput

func (ClusterCloudProviderAwsCloudProviderServiceOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCloudProviderAwsCloudProviderServiceOverride)(nil)).Elem()
}

func (i ClusterCloudProviderAwsCloudProviderServiceOverrideArray) ToClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput() ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput {
	return i.ToClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutputWithContext(context.Background())
}

func (i ClusterCloudProviderAwsCloudProviderServiceOverrideArray) ToClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput)
}

type ClusterCloudProviderAwsCloudProviderServiceOverrideOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderAwsCloudProviderServiceOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderAwsCloudProviderServiceOverride)(nil)).Elem()
}

func (o ClusterCloudProviderAwsCloudProviderServiceOverrideOutput) ToClusterCloudProviderAwsCloudProviderServiceOverrideOutput() ClusterCloudProviderAwsCloudProviderServiceOverrideOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudProviderServiceOverrideOutput) ToClusterCloudProviderAwsCloudProviderServiceOverrideOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudProviderServiceOverrideOutput {
	return o
}

// TLS key for etcd service (string)
//
// Deprecated: Use service instead
func (o ClusterCloudProviderAwsCloudProviderServiceOverrideOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderServiceOverride) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Region for S3 service (string)
func (o ClusterCloudProviderAwsCloudProviderServiceOverrideOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderServiceOverride) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAwsCloudProviderServiceOverrideOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderServiceOverride) string { return v.Service }).(pulumi.StringOutput)
}

// (string)
func (o ClusterCloudProviderAwsCloudProviderServiceOverrideOutput) SigningMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderServiceOverride) *string { return v.SigningMethod }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAwsCloudProviderServiceOverrideOutput) SigningName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderServiceOverride) *string { return v.SigningName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAwsCloudProviderServiceOverrideOutput) SigningRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderServiceOverride) *string { return v.SigningRegion }).(pulumi.StringPtrOutput)
}

// Registry URL (string)
func (o ClusterCloudProviderAwsCloudProviderServiceOverrideOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAwsCloudProviderServiceOverride) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCloudProviderAwsCloudProviderServiceOverride)(nil)).Elem()
}

func (o ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput) ToClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput() ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput) ToClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutputWithContext(ctx context.Context) ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput {
	return o
}

func (o ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput) Index(i pulumi.IntInput) ClusterCloudProviderAwsCloudProviderServiceOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCloudProviderAwsCloudProviderServiceOverride {
		return vs[0].([]ClusterCloudProviderAwsCloudProviderServiceOverride)[vs[1].(int)]
	}).(ClusterCloudProviderAwsCloudProviderServiceOverrideOutput)
}

type ClusterCloudProviderAzureCloudConfig struct {
	// (string)
	AadClientCertPassword *string `pulumi:"aadClientCertPassword"`
	// (string)
	AadClientCertPath *string `pulumi:"aadClientCertPath"`
	// (string)
	AadClientId string `pulumi:"aadClientId"`
	// (string)
	AadClientSecret string `pulumi:"aadClientSecret"`
	// (string)
	Cloud *string `pulumi:"cloud"`
	// (bool)
	CloudProviderBackoff *bool `pulumi:"cloudProviderBackoff"`
	// (int)
	CloudProviderBackoffDuration *int `pulumi:"cloudProviderBackoffDuration"`
	// (int)
	CloudProviderBackoffExponent *int `pulumi:"cloudProviderBackoffExponent"`
	// (int)
	CloudProviderBackoffJitter *int `pulumi:"cloudProviderBackoffJitter"`
	// (int)
	CloudProviderBackoffRetries *int `pulumi:"cloudProviderBackoffRetries"`
	// (bool)
	CloudProviderRateLimit *bool `pulumi:"cloudProviderRateLimit"`
	// (int)
	CloudProviderRateLimitBucket *int `pulumi:"cloudProviderRateLimitBucket"`
	// (int)
	CloudProviderRateLimitQps *int    `pulumi:"cloudProviderRateLimitQps"`
	LoadBalancerSku           *string `pulumi:"loadBalancerSku"`
	// (string)
	Location *string `pulumi:"location"`
	// (int)
	MaximumLoadBalancerRuleCount *int `pulumi:"maximumLoadBalancerRuleCount"`
	// (string)
	PrimaryAvailabilitySetName *string `pulumi:"primaryAvailabilitySetName"`
	// (string)
	PrimaryScaleSetName *string `pulumi:"primaryScaleSetName"`
	// (string)
	ResourceGroup *string `pulumi:"resourceGroup"`
	// (string)
	RouteTableName *string `pulumi:"routeTableName"`
	// (string)
	SecurityGroupName *string `pulumi:"securityGroupName"`
	// (string)
	SubnetName *string `pulumi:"subnetName"`
	// (string)
	SubscriptionId string `pulumi:"subscriptionId"`
	// Required if `tenantName` not provided. (string)
	TenantId string `pulumi:"tenantId"`
	// (bool)
	UseInstanceMetadata *bool `pulumi:"useInstanceMetadata"`
	// (bool)
	UseManagedIdentityExtension *bool `pulumi:"useManagedIdentityExtension"`
	// (string)
	VmType *string `pulumi:"vmType"`
	// (string)
	VnetName *string `pulumi:"vnetName"`
	// (string)
	VnetResourceGroup *string `pulumi:"vnetResourceGroup"`
}

// ClusterCloudProviderAzureCloudConfigInput is an input type that accepts ClusterCloudProviderAzureCloudConfigArgs and ClusterCloudProviderAzureCloudConfigOutput values.
// You can construct a concrete instance of `ClusterCloudProviderAzureCloudConfigInput` via:
//
//          ClusterCloudProviderAzureCloudConfigArgs{...}
type ClusterCloudProviderAzureCloudConfigInput interface {
	pulumi.Input

	ToClusterCloudProviderAzureCloudConfigOutput() ClusterCloudProviderAzureCloudConfigOutput
	ToClusterCloudProviderAzureCloudConfigOutputWithContext(context.Context) ClusterCloudProviderAzureCloudConfigOutput
}

type ClusterCloudProviderAzureCloudConfigArgs struct {
	// (string)
	AadClientCertPassword pulumi.StringPtrInput `pulumi:"aadClientCertPassword"`
	// (string)
	AadClientCertPath pulumi.StringPtrInput `pulumi:"aadClientCertPath"`
	// (string)
	AadClientId pulumi.StringInput `pulumi:"aadClientId"`
	// (string)
	AadClientSecret pulumi.StringInput `pulumi:"aadClientSecret"`
	// (string)
	Cloud pulumi.StringPtrInput `pulumi:"cloud"`
	// (bool)
	CloudProviderBackoff pulumi.BoolPtrInput `pulumi:"cloudProviderBackoff"`
	// (int)
	CloudProviderBackoffDuration pulumi.IntPtrInput `pulumi:"cloudProviderBackoffDuration"`
	// (int)
	CloudProviderBackoffExponent pulumi.IntPtrInput `pulumi:"cloudProviderBackoffExponent"`
	// (int)
	CloudProviderBackoffJitter pulumi.IntPtrInput `pulumi:"cloudProviderBackoffJitter"`
	// (int)
	CloudProviderBackoffRetries pulumi.IntPtrInput `pulumi:"cloudProviderBackoffRetries"`
	// (bool)
	CloudProviderRateLimit pulumi.BoolPtrInput `pulumi:"cloudProviderRateLimit"`
	// (int)
	CloudProviderRateLimitBucket pulumi.IntPtrInput `pulumi:"cloudProviderRateLimitBucket"`
	// (int)
	CloudProviderRateLimitQps pulumi.IntPtrInput    `pulumi:"cloudProviderRateLimitQps"`
	LoadBalancerSku           pulumi.StringPtrInput `pulumi:"loadBalancerSku"`
	// (string)
	Location pulumi.StringPtrInput `pulumi:"location"`
	// (int)
	MaximumLoadBalancerRuleCount pulumi.IntPtrInput `pulumi:"maximumLoadBalancerRuleCount"`
	// (string)
	PrimaryAvailabilitySetName pulumi.StringPtrInput `pulumi:"primaryAvailabilitySetName"`
	// (string)
	PrimaryScaleSetName pulumi.StringPtrInput `pulumi:"primaryScaleSetName"`
	// (string)
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// (string)
	RouteTableName pulumi.StringPtrInput `pulumi:"routeTableName"`
	// (string)
	SecurityGroupName pulumi.StringPtrInput `pulumi:"securityGroupName"`
	// (string)
	SubnetName pulumi.StringPtrInput `pulumi:"subnetName"`
	// (string)
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// Required if `tenantName` not provided. (string)
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// (bool)
	UseInstanceMetadata pulumi.BoolPtrInput `pulumi:"useInstanceMetadata"`
	// (bool)
	UseManagedIdentityExtension pulumi.BoolPtrInput `pulumi:"useManagedIdentityExtension"`
	// (string)
	VmType pulumi.StringPtrInput `pulumi:"vmType"`
	// (string)
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
	// (string)
	VnetResourceGroup pulumi.StringPtrInput `pulumi:"vnetResourceGroup"`
}

func (ClusterCloudProviderAzureCloudConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderAzureCloudConfig)(nil)).Elem()
}

func (i ClusterCloudProviderAzureCloudConfigArgs) ToClusterCloudProviderAzureCloudConfigOutput() ClusterCloudProviderAzureCloudConfigOutput {
	return i.ToClusterCloudProviderAzureCloudConfigOutputWithContext(context.Background())
}

func (i ClusterCloudProviderAzureCloudConfigArgs) ToClusterCloudProviderAzureCloudConfigOutputWithContext(ctx context.Context) ClusterCloudProviderAzureCloudConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAzureCloudConfigOutput)
}

func (i ClusterCloudProviderAzureCloudConfigArgs) ToClusterCloudProviderAzureCloudConfigPtrOutput() ClusterCloudProviderAzureCloudConfigPtrOutput {
	return i.ToClusterCloudProviderAzureCloudConfigPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderAzureCloudConfigArgs) ToClusterCloudProviderAzureCloudConfigPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAzureCloudConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAzureCloudConfigOutput).ToClusterCloudProviderAzureCloudConfigPtrOutputWithContext(ctx)
}

// ClusterCloudProviderAzureCloudConfigPtrInput is an input type that accepts ClusterCloudProviderAzureCloudConfigArgs, ClusterCloudProviderAzureCloudConfigPtr and ClusterCloudProviderAzureCloudConfigPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderAzureCloudConfigPtrInput` via:
//
//          ClusterCloudProviderAzureCloudConfigArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderAzureCloudConfigPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderAzureCloudConfigPtrOutput() ClusterCloudProviderAzureCloudConfigPtrOutput
	ToClusterCloudProviderAzureCloudConfigPtrOutputWithContext(context.Context) ClusterCloudProviderAzureCloudConfigPtrOutput
}

type clusterCloudProviderAzureCloudConfigPtrType ClusterCloudProviderAzureCloudConfigArgs

func ClusterCloudProviderAzureCloudConfigPtr(v *ClusterCloudProviderAzureCloudConfigArgs) ClusterCloudProviderAzureCloudConfigPtrInput {
	return (*clusterCloudProviderAzureCloudConfigPtrType)(v)
}

func (*clusterCloudProviderAzureCloudConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderAzureCloudConfig)(nil)).Elem()
}

func (i *clusterCloudProviderAzureCloudConfigPtrType) ToClusterCloudProviderAzureCloudConfigPtrOutput() ClusterCloudProviderAzureCloudConfigPtrOutput {
	return i.ToClusterCloudProviderAzureCloudConfigPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderAzureCloudConfigPtrType) ToClusterCloudProviderAzureCloudConfigPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAzureCloudConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAzureCloudConfigPtrOutput)
}

type ClusterCloudProviderAzureCloudConfigOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderAzureCloudConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderAzureCloudConfig)(nil)).Elem()
}

func (o ClusterCloudProviderAzureCloudConfigOutput) ToClusterCloudProviderAzureCloudConfigOutput() ClusterCloudProviderAzureCloudConfigOutput {
	return o
}

func (o ClusterCloudProviderAzureCloudConfigOutput) ToClusterCloudProviderAzureCloudConfigOutputWithContext(ctx context.Context) ClusterCloudProviderAzureCloudConfigOutput {
	return o
}

func (o ClusterCloudProviderAzureCloudConfigOutput) ToClusterCloudProviderAzureCloudConfigPtrOutput() ClusterCloudProviderAzureCloudConfigPtrOutput {
	return o.ToClusterCloudProviderAzureCloudConfigPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderAzureCloudConfigOutput) ToClusterCloudProviderAzureCloudConfigPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAzureCloudConfigPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *ClusterCloudProviderAzureCloudConfig {
		return &v
	}).(ClusterCloudProviderAzureCloudConfigPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) AadClientCertPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *string { return v.AadClientCertPassword }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) AadClientCertPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *string { return v.AadClientCertPath }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) AadClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) string { return v.AadClientId }).(pulumi.StringOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) AadClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) string { return v.AadClientSecret }).(pulumi.StringOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) Cloud() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *string { return v.Cloud }).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderAzureCloudConfigOutput) CloudProviderBackoff() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *bool { return v.CloudProviderBackoff }).(pulumi.BoolPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudConfigOutput) CloudProviderBackoffDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *int { return v.CloudProviderBackoffDuration }).(pulumi.IntPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudConfigOutput) CloudProviderBackoffExponent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *int { return v.CloudProviderBackoffExponent }).(pulumi.IntPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudConfigOutput) CloudProviderBackoffJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *int { return v.CloudProviderBackoffJitter }).(pulumi.IntPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudConfigOutput) CloudProviderBackoffRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *int { return v.CloudProviderBackoffRetries }).(pulumi.IntPtrOutput)
}

// (bool)
func (o ClusterCloudProviderAzureCloudConfigOutput) CloudProviderRateLimit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *bool { return v.CloudProviderRateLimit }).(pulumi.BoolPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudConfigOutput) CloudProviderRateLimitBucket() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *int { return v.CloudProviderRateLimitBucket }).(pulumi.IntPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudConfigOutput) CloudProviderRateLimitQps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *int { return v.CloudProviderRateLimitQps }).(pulumi.IntPtrOutput)
}

func (o ClusterCloudProviderAzureCloudConfigOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *string { return v.LoadBalancerSku }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudConfigOutput) MaximumLoadBalancerRuleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *int { return v.MaximumLoadBalancerRuleCount }).(pulumi.IntPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) PrimaryAvailabilitySetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *string { return v.PrimaryAvailabilitySetName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) PrimaryScaleSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *string { return v.PrimaryScaleSetName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) RouteTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *string { return v.RouteTableName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *string { return v.SecurityGroupName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *string { return v.SubnetName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// Required if `tenantName` not provided. (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) string { return v.TenantId }).(pulumi.StringOutput)
}

// (bool)
func (o ClusterCloudProviderAzureCloudConfigOutput) UseInstanceMetadata() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *bool { return v.UseInstanceMetadata }).(pulumi.BoolPtrOutput)
}

// (bool)
func (o ClusterCloudProviderAzureCloudConfigOutput) UseManagedIdentityExtension() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *bool { return v.UseManagedIdentityExtension }).(pulumi.BoolPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) VmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *string { return v.VmType }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigOutput) VnetResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudConfig) *string { return v.VnetResourceGroup }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderAzureCloudConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderAzureCloudConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderAzureCloudConfig)(nil)).Elem()
}

func (o ClusterCloudProviderAzureCloudConfigPtrOutput) ToClusterCloudProviderAzureCloudConfigPtrOutput() ClusterCloudProviderAzureCloudConfigPtrOutput {
	return o
}

func (o ClusterCloudProviderAzureCloudConfigPtrOutput) ToClusterCloudProviderAzureCloudConfigPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAzureCloudConfigPtrOutput {
	return o
}

func (o ClusterCloudProviderAzureCloudConfigPtrOutput) Elem() ClusterCloudProviderAzureCloudConfigOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) ClusterCloudProviderAzureCloudConfig { return *v }).(ClusterCloudProviderAzureCloudConfigOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) AadClientCertPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return v.AadClientCertPassword
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) AadClientCertPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return v.AadClientCertPath
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) AadClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AadClientId
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) AadClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AadClientSecret
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) Cloud() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return v.Cloud
	}).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) CloudProviderBackoff() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CloudProviderBackoff
	}).(pulumi.BoolPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) CloudProviderBackoffDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *int {
		if v == nil {
			return nil
		}
		return v.CloudProviderBackoffDuration
	}).(pulumi.IntPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) CloudProviderBackoffExponent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *int {
		if v == nil {
			return nil
		}
		return v.CloudProviderBackoffExponent
	}).(pulumi.IntPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) CloudProviderBackoffJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *int {
		if v == nil {
			return nil
		}
		return v.CloudProviderBackoffJitter
	}).(pulumi.IntPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) CloudProviderBackoffRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *int {
		if v == nil {
			return nil
		}
		return v.CloudProviderBackoffRetries
	}).(pulumi.IntPtrOutput)
}

// (bool)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) CloudProviderRateLimit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CloudProviderRateLimit
	}).(pulumi.BoolPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) CloudProviderRateLimitBucket() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *int {
		if v == nil {
			return nil
		}
		return v.CloudProviderRateLimitBucket
	}).(pulumi.IntPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) CloudProviderRateLimitQps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *int {
		if v == nil {
			return nil
		}
		return v.CloudProviderRateLimitQps
	}).(pulumi.IntPtrOutput)
}

func (o ClusterCloudProviderAzureCloudConfigPtrOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSku
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) MaximumLoadBalancerRuleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaximumLoadBalancerRuleCount
	}).(pulumi.IntPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) PrimaryAvailabilitySetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryAvailabilitySetName
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) PrimaryScaleSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryScaleSetName
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) RouteTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return v.RouteTableName
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupName
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return v.SubnetName
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// Required if `tenantName` not provided. (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) UseInstanceMetadata() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UseInstanceMetadata
	}).(pulumi.BoolPtrOutput)
}

// (bool)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) UseManagedIdentityExtension() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UseManagedIdentityExtension
	}).(pulumi.BoolPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) VmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return v.VmType
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudConfigPtrOutput) VnetResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudConfig) *string {
		if v == nil {
			return nil
		}
		return v.VnetResourceGroup
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderAzureCloudProvider struct {
	// (string)
	AadClientCertPassword *string `pulumi:"aadClientCertPassword"`
	// (string)
	AadClientCertPath *string `pulumi:"aadClientCertPath"`
	// (string)
	AadClientId string `pulumi:"aadClientId"`
	// (string)
	AadClientSecret string `pulumi:"aadClientSecret"`
	// (string)
	Cloud *string `pulumi:"cloud"`
	// (bool)
	CloudProviderBackoff *bool `pulumi:"cloudProviderBackoff"`
	// (int)
	CloudProviderBackoffDuration *int `pulumi:"cloudProviderBackoffDuration"`
	// (int)
	CloudProviderBackoffExponent *int `pulumi:"cloudProviderBackoffExponent"`
	// (int)
	CloudProviderBackoffJitter *int `pulumi:"cloudProviderBackoffJitter"`
	// (int)
	CloudProviderBackoffRetries *int `pulumi:"cloudProviderBackoffRetries"`
	// (bool)
	CloudProviderRateLimit *bool `pulumi:"cloudProviderRateLimit"`
	// (int)
	CloudProviderRateLimitBucket *int `pulumi:"cloudProviderRateLimitBucket"`
	// (int)
	CloudProviderRateLimitQps *int    `pulumi:"cloudProviderRateLimitQps"`
	LoadBalancerSku           *string `pulumi:"loadBalancerSku"`
	// (string)
	Location *string `pulumi:"location"`
	// (int)
	MaximumLoadBalancerRuleCount *int `pulumi:"maximumLoadBalancerRuleCount"`
	// (string)
	PrimaryAvailabilitySetName *string `pulumi:"primaryAvailabilitySetName"`
	// (string)
	PrimaryScaleSetName *string `pulumi:"primaryScaleSetName"`
	// (string)
	ResourceGroup *string `pulumi:"resourceGroup"`
	// (string)
	RouteTableName *string `pulumi:"routeTableName"`
	// (string)
	SecurityGroupName *string `pulumi:"securityGroupName"`
	// (string)
	SubnetName *string `pulumi:"subnetName"`
	// (string)
	SubscriptionId string `pulumi:"subscriptionId"`
	// Required if `tenantName` not provided. (string)
	TenantId string `pulumi:"tenantId"`
	// (bool)
	UseInstanceMetadata *bool `pulumi:"useInstanceMetadata"`
	// (bool)
	UseManagedIdentityExtension *bool `pulumi:"useManagedIdentityExtension"`
	// (string)
	VmType *string `pulumi:"vmType"`
	// (string)
	VnetName *string `pulumi:"vnetName"`
	// (string)
	VnetResourceGroup *string `pulumi:"vnetResourceGroup"`
}

// ClusterCloudProviderAzureCloudProviderInput is an input type that accepts ClusterCloudProviderAzureCloudProviderArgs and ClusterCloudProviderAzureCloudProviderOutput values.
// You can construct a concrete instance of `ClusterCloudProviderAzureCloudProviderInput` via:
//
//          ClusterCloudProviderAzureCloudProviderArgs{...}
type ClusterCloudProviderAzureCloudProviderInput interface {
	pulumi.Input

	ToClusterCloudProviderAzureCloudProviderOutput() ClusterCloudProviderAzureCloudProviderOutput
	ToClusterCloudProviderAzureCloudProviderOutputWithContext(context.Context) ClusterCloudProviderAzureCloudProviderOutput
}

type ClusterCloudProviderAzureCloudProviderArgs struct {
	// (string)
	AadClientCertPassword pulumi.StringPtrInput `pulumi:"aadClientCertPassword"`
	// (string)
	AadClientCertPath pulumi.StringPtrInput `pulumi:"aadClientCertPath"`
	// (string)
	AadClientId pulumi.StringInput `pulumi:"aadClientId"`
	// (string)
	AadClientSecret pulumi.StringInput `pulumi:"aadClientSecret"`
	// (string)
	Cloud pulumi.StringPtrInput `pulumi:"cloud"`
	// (bool)
	CloudProviderBackoff pulumi.BoolPtrInput `pulumi:"cloudProviderBackoff"`
	// (int)
	CloudProviderBackoffDuration pulumi.IntPtrInput `pulumi:"cloudProviderBackoffDuration"`
	// (int)
	CloudProviderBackoffExponent pulumi.IntPtrInput `pulumi:"cloudProviderBackoffExponent"`
	// (int)
	CloudProviderBackoffJitter pulumi.IntPtrInput `pulumi:"cloudProviderBackoffJitter"`
	// (int)
	CloudProviderBackoffRetries pulumi.IntPtrInput `pulumi:"cloudProviderBackoffRetries"`
	// (bool)
	CloudProviderRateLimit pulumi.BoolPtrInput `pulumi:"cloudProviderRateLimit"`
	// (int)
	CloudProviderRateLimitBucket pulumi.IntPtrInput `pulumi:"cloudProviderRateLimitBucket"`
	// (int)
	CloudProviderRateLimitQps pulumi.IntPtrInput    `pulumi:"cloudProviderRateLimitQps"`
	LoadBalancerSku           pulumi.StringPtrInput `pulumi:"loadBalancerSku"`
	// (string)
	Location pulumi.StringPtrInput `pulumi:"location"`
	// (int)
	MaximumLoadBalancerRuleCount pulumi.IntPtrInput `pulumi:"maximumLoadBalancerRuleCount"`
	// (string)
	PrimaryAvailabilitySetName pulumi.StringPtrInput `pulumi:"primaryAvailabilitySetName"`
	// (string)
	PrimaryScaleSetName pulumi.StringPtrInput `pulumi:"primaryScaleSetName"`
	// (string)
	ResourceGroup pulumi.StringPtrInput `pulumi:"resourceGroup"`
	// (string)
	RouteTableName pulumi.StringPtrInput `pulumi:"routeTableName"`
	// (string)
	SecurityGroupName pulumi.StringPtrInput `pulumi:"securityGroupName"`
	// (string)
	SubnetName pulumi.StringPtrInput `pulumi:"subnetName"`
	// (string)
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// Required if `tenantName` not provided. (string)
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// (bool)
	UseInstanceMetadata pulumi.BoolPtrInput `pulumi:"useInstanceMetadata"`
	// (bool)
	UseManagedIdentityExtension pulumi.BoolPtrInput `pulumi:"useManagedIdentityExtension"`
	// (string)
	VmType pulumi.StringPtrInput `pulumi:"vmType"`
	// (string)
	VnetName pulumi.StringPtrInput `pulumi:"vnetName"`
	// (string)
	VnetResourceGroup pulumi.StringPtrInput `pulumi:"vnetResourceGroup"`
}

func (ClusterCloudProviderAzureCloudProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderAzureCloudProvider)(nil)).Elem()
}

func (i ClusterCloudProviderAzureCloudProviderArgs) ToClusterCloudProviderAzureCloudProviderOutput() ClusterCloudProviderAzureCloudProviderOutput {
	return i.ToClusterCloudProviderAzureCloudProviderOutputWithContext(context.Background())
}

func (i ClusterCloudProviderAzureCloudProviderArgs) ToClusterCloudProviderAzureCloudProviderOutputWithContext(ctx context.Context) ClusterCloudProviderAzureCloudProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAzureCloudProviderOutput)
}

func (i ClusterCloudProviderAzureCloudProviderArgs) ToClusterCloudProviderAzureCloudProviderPtrOutput() ClusterCloudProviderAzureCloudProviderPtrOutput {
	return i.ToClusterCloudProviderAzureCloudProviderPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderAzureCloudProviderArgs) ToClusterCloudProviderAzureCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAzureCloudProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAzureCloudProviderOutput).ToClusterCloudProviderAzureCloudProviderPtrOutputWithContext(ctx)
}

// ClusterCloudProviderAzureCloudProviderPtrInput is an input type that accepts ClusterCloudProviderAzureCloudProviderArgs, ClusterCloudProviderAzureCloudProviderPtr and ClusterCloudProviderAzureCloudProviderPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderAzureCloudProviderPtrInput` via:
//
//          ClusterCloudProviderAzureCloudProviderArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderAzureCloudProviderPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderAzureCloudProviderPtrOutput() ClusterCloudProviderAzureCloudProviderPtrOutput
	ToClusterCloudProviderAzureCloudProviderPtrOutputWithContext(context.Context) ClusterCloudProviderAzureCloudProviderPtrOutput
}

type clusterCloudProviderAzureCloudProviderPtrType ClusterCloudProviderAzureCloudProviderArgs

func ClusterCloudProviderAzureCloudProviderPtr(v *ClusterCloudProviderAzureCloudProviderArgs) ClusterCloudProviderAzureCloudProviderPtrInput {
	return (*clusterCloudProviderAzureCloudProviderPtrType)(v)
}

func (*clusterCloudProviderAzureCloudProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderAzureCloudProvider)(nil)).Elem()
}

func (i *clusterCloudProviderAzureCloudProviderPtrType) ToClusterCloudProviderAzureCloudProviderPtrOutput() ClusterCloudProviderAzureCloudProviderPtrOutput {
	return i.ToClusterCloudProviderAzureCloudProviderPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderAzureCloudProviderPtrType) ToClusterCloudProviderAzureCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAzureCloudProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderAzureCloudProviderPtrOutput)
}

type ClusterCloudProviderAzureCloudProviderOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderAzureCloudProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderAzureCloudProvider)(nil)).Elem()
}

func (o ClusterCloudProviderAzureCloudProviderOutput) ToClusterCloudProviderAzureCloudProviderOutput() ClusterCloudProviderAzureCloudProviderOutput {
	return o
}

func (o ClusterCloudProviderAzureCloudProviderOutput) ToClusterCloudProviderAzureCloudProviderOutputWithContext(ctx context.Context) ClusterCloudProviderAzureCloudProviderOutput {
	return o
}

func (o ClusterCloudProviderAzureCloudProviderOutput) ToClusterCloudProviderAzureCloudProviderPtrOutput() ClusterCloudProviderAzureCloudProviderPtrOutput {
	return o.ToClusterCloudProviderAzureCloudProviderPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderAzureCloudProviderOutput) ToClusterCloudProviderAzureCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAzureCloudProviderPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *ClusterCloudProviderAzureCloudProvider {
		return &v
	}).(ClusterCloudProviderAzureCloudProviderPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) AadClientCertPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *string { return v.AadClientCertPassword }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) AadClientCertPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *string { return v.AadClientCertPath }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) AadClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) string { return v.AadClientId }).(pulumi.StringOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) AadClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) string { return v.AadClientSecret }).(pulumi.StringOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) Cloud() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *string { return v.Cloud }).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderAzureCloudProviderOutput) CloudProviderBackoff() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *bool { return v.CloudProviderBackoff }).(pulumi.BoolPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudProviderOutput) CloudProviderBackoffDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *int { return v.CloudProviderBackoffDuration }).(pulumi.IntPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudProviderOutput) CloudProviderBackoffExponent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *int { return v.CloudProviderBackoffExponent }).(pulumi.IntPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudProviderOutput) CloudProviderBackoffJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *int { return v.CloudProviderBackoffJitter }).(pulumi.IntPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudProviderOutput) CloudProviderBackoffRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *int { return v.CloudProviderBackoffRetries }).(pulumi.IntPtrOutput)
}

// (bool)
func (o ClusterCloudProviderAzureCloudProviderOutput) CloudProviderRateLimit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *bool { return v.CloudProviderRateLimit }).(pulumi.BoolPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudProviderOutput) CloudProviderRateLimitBucket() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *int { return v.CloudProviderRateLimitBucket }).(pulumi.IntPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudProviderOutput) CloudProviderRateLimitQps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *int { return v.CloudProviderRateLimitQps }).(pulumi.IntPtrOutput)
}

func (o ClusterCloudProviderAzureCloudProviderOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *string { return v.LoadBalancerSku }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudProviderOutput) MaximumLoadBalancerRuleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *int { return v.MaximumLoadBalancerRuleCount }).(pulumi.IntPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) PrimaryAvailabilitySetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *string { return v.PrimaryAvailabilitySetName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) PrimaryScaleSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *string { return v.PrimaryScaleSetName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *string { return v.ResourceGroup }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) RouteTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *string { return v.RouteTableName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *string { return v.SecurityGroupName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *string { return v.SubnetName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// Required if `tenantName` not provided. (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) string { return v.TenantId }).(pulumi.StringOutput)
}

// (bool)
func (o ClusterCloudProviderAzureCloudProviderOutput) UseInstanceMetadata() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *bool { return v.UseInstanceMetadata }).(pulumi.BoolPtrOutput)
}

// (bool)
func (o ClusterCloudProviderAzureCloudProviderOutput) UseManagedIdentityExtension() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *bool { return v.UseManagedIdentityExtension }).(pulumi.BoolPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) VmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *string { return v.VmType }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *string { return v.VnetName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderOutput) VnetResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderAzureCloudProvider) *string { return v.VnetResourceGroup }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderAzureCloudProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderAzureCloudProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderAzureCloudProvider)(nil)).Elem()
}

func (o ClusterCloudProviderAzureCloudProviderPtrOutput) ToClusterCloudProviderAzureCloudProviderPtrOutput() ClusterCloudProviderAzureCloudProviderPtrOutput {
	return o
}

func (o ClusterCloudProviderAzureCloudProviderPtrOutput) ToClusterCloudProviderAzureCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderAzureCloudProviderPtrOutput {
	return o
}

func (o ClusterCloudProviderAzureCloudProviderPtrOutput) Elem() ClusterCloudProviderAzureCloudProviderOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) ClusterCloudProviderAzureCloudProvider { return *v }).(ClusterCloudProviderAzureCloudProviderOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) AadClientCertPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return v.AadClientCertPassword
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) AadClientCertPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return v.AadClientCertPath
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) AadClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return &v.AadClientId
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) AadClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return &v.AadClientSecret
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) Cloud() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return v.Cloud
	}).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) CloudProviderBackoff() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *bool {
		if v == nil {
			return nil
		}
		return v.CloudProviderBackoff
	}).(pulumi.BoolPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) CloudProviderBackoffDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *int {
		if v == nil {
			return nil
		}
		return v.CloudProviderBackoffDuration
	}).(pulumi.IntPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) CloudProviderBackoffExponent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *int {
		if v == nil {
			return nil
		}
		return v.CloudProviderBackoffExponent
	}).(pulumi.IntPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) CloudProviderBackoffJitter() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *int {
		if v == nil {
			return nil
		}
		return v.CloudProviderBackoffJitter
	}).(pulumi.IntPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) CloudProviderBackoffRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *int {
		if v == nil {
			return nil
		}
		return v.CloudProviderBackoffRetries
	}).(pulumi.IntPtrOutput)
}

// (bool)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) CloudProviderRateLimit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *bool {
		if v == nil {
			return nil
		}
		return v.CloudProviderRateLimit
	}).(pulumi.BoolPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) CloudProviderRateLimitBucket() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *int {
		if v == nil {
			return nil
		}
		return v.CloudProviderRateLimitBucket
	}).(pulumi.IntPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) CloudProviderRateLimitQps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *int {
		if v == nil {
			return nil
		}
		return v.CloudProviderRateLimitQps
	}).(pulumi.IntPtrOutput)
}

func (o ClusterCloudProviderAzureCloudProviderPtrOutput) LoadBalancerSku() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return v.LoadBalancerSku
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// (int)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) MaximumLoadBalancerRuleCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *int {
		if v == nil {
			return nil
		}
		return v.MaximumLoadBalancerRuleCount
	}).(pulumi.IntPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) PrimaryAvailabilitySetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryAvailabilitySetName
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) PrimaryScaleSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryScaleSetName
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) ResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGroup
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) RouteTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return v.RouteTableName
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) SecurityGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupName
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) SubnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return v.SubnetName
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) SubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return &v.SubscriptionId
	}).(pulumi.StringPtrOutput)
}

// Required if `tenantName` not provided. (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) UseInstanceMetadata() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *bool {
		if v == nil {
			return nil
		}
		return v.UseInstanceMetadata
	}).(pulumi.BoolPtrOutput)
}

// (bool)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) UseManagedIdentityExtension() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *bool {
		if v == nil {
			return nil
		}
		return v.UseManagedIdentityExtension
	}).(pulumi.BoolPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) VmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return v.VmType
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) VnetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return v.VnetName
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderAzureCloudProviderPtrOutput) VnetResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderAzureCloudProvider) *string {
		if v == nil {
			return nil
		}
		return v.VnetResourceGroup
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfig struct {
	// (list maxitems:1)
	BlockStorage *ClusterCloudProviderOpenstackCloudConfigBlockStorage `pulumi:"blockStorage"`
	// (list maxitems:1)
	Global ClusterCloudProviderOpenstackCloudConfigGlobal `pulumi:"global"`
	// (list maxitems:1)
	LoadBalancer *ClusterCloudProviderOpenstackCloudConfigLoadBalancer `pulumi:"loadBalancer"`
	// (list maxitems:1)
	Metadata *ClusterCloudProviderOpenstackCloudConfigMetadata `pulumi:"metadata"`
	// (list maxitems:1)
	Route *ClusterCloudProviderOpenstackCloudConfigRoute `pulumi:"route"`
}

// ClusterCloudProviderOpenstackCloudConfigInput is an input type that accepts ClusterCloudProviderOpenstackCloudConfigArgs and ClusterCloudProviderOpenstackCloudConfigOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudConfigInput` via:
//
//          ClusterCloudProviderOpenstackCloudConfigArgs{...}
type ClusterCloudProviderOpenstackCloudConfigInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudConfigOutput() ClusterCloudProviderOpenstackCloudConfigOutput
	ToClusterCloudProviderOpenstackCloudConfigOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudConfigOutput
}

type ClusterCloudProviderOpenstackCloudConfigArgs struct {
	// (list maxitems:1)
	BlockStorage ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrInput `pulumi:"blockStorage"`
	// (list maxitems:1)
	Global ClusterCloudProviderOpenstackCloudConfigGlobalInput `pulumi:"global"`
	// (list maxitems:1)
	LoadBalancer ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrInput `pulumi:"loadBalancer"`
	// (list maxitems:1)
	Metadata ClusterCloudProviderOpenstackCloudConfigMetadataPtrInput `pulumi:"metadata"`
	// (list maxitems:1)
	Route ClusterCloudProviderOpenstackCloudConfigRoutePtrInput `pulumi:"route"`
}

func (ClusterCloudProviderOpenstackCloudConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudConfig)(nil)).Elem()
}

func (i ClusterCloudProviderOpenstackCloudConfigArgs) ToClusterCloudProviderOpenstackCloudConfigOutput() ClusterCloudProviderOpenstackCloudConfigOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudConfigArgs) ToClusterCloudProviderOpenstackCloudConfigOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigOutput)
}

func (i ClusterCloudProviderOpenstackCloudConfigArgs) ToClusterCloudProviderOpenstackCloudConfigPtrOutput() ClusterCloudProviderOpenstackCloudConfigPtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudConfigArgs) ToClusterCloudProviderOpenstackCloudConfigPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigOutput).ToClusterCloudProviderOpenstackCloudConfigPtrOutputWithContext(ctx)
}

// ClusterCloudProviderOpenstackCloudConfigPtrInput is an input type that accepts ClusterCloudProviderOpenstackCloudConfigArgs, ClusterCloudProviderOpenstackCloudConfigPtr and ClusterCloudProviderOpenstackCloudConfigPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudConfigPtrInput` via:
//
//          ClusterCloudProviderOpenstackCloudConfigArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderOpenstackCloudConfigPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudConfigPtrOutput() ClusterCloudProviderOpenstackCloudConfigPtrOutput
	ToClusterCloudProviderOpenstackCloudConfigPtrOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudConfigPtrOutput
}

type clusterCloudProviderOpenstackCloudConfigPtrType ClusterCloudProviderOpenstackCloudConfigArgs

func ClusterCloudProviderOpenstackCloudConfigPtr(v *ClusterCloudProviderOpenstackCloudConfigArgs) ClusterCloudProviderOpenstackCloudConfigPtrInput {
	return (*clusterCloudProviderOpenstackCloudConfigPtrType)(v)
}

func (*clusterCloudProviderOpenstackCloudConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudConfig)(nil)).Elem()
}

func (i *clusterCloudProviderOpenstackCloudConfigPtrType) ToClusterCloudProviderOpenstackCloudConfigPtrOutput() ClusterCloudProviderOpenstackCloudConfigPtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderOpenstackCloudConfigPtrType) ToClusterCloudProviderOpenstackCloudConfigPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigPtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudConfig)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudConfigOutput) ToClusterCloudProviderOpenstackCloudConfigOutput() ClusterCloudProviderOpenstackCloudConfigOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigOutput) ToClusterCloudProviderOpenstackCloudConfigOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigOutput) ToClusterCloudProviderOpenstackCloudConfigPtrOutput() ClusterCloudProviderOpenstackCloudConfigPtrOutput {
	return o.ToClusterCloudProviderOpenstackCloudConfigPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderOpenstackCloudConfigOutput) ToClusterCloudProviderOpenstackCloudConfigPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfig) *ClusterCloudProviderOpenstackCloudConfig {
		return &v
	}).(ClusterCloudProviderOpenstackCloudConfigPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudConfigOutput) BlockStorage() ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfig) *ClusterCloudProviderOpenstackCloudConfigBlockStorage {
		return v.BlockStorage
	}).(ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudConfigOutput) Global() ClusterCloudProviderOpenstackCloudConfigGlobalOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfig) ClusterCloudProviderOpenstackCloudConfigGlobal {
		return v.Global
	}).(ClusterCloudProviderOpenstackCloudConfigGlobalOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudConfigOutput) LoadBalancer() ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfig) *ClusterCloudProviderOpenstackCloudConfigLoadBalancer {
		return v.LoadBalancer
	}).(ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudConfigOutput) Metadata() ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfig) *ClusterCloudProviderOpenstackCloudConfigMetadata {
		return v.Metadata
	}).(ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudConfigOutput) Route() ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfig) *ClusterCloudProviderOpenstackCloudConfigRoute {
		return v.Route
	}).(ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudConfig)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudConfigPtrOutput) ToClusterCloudProviderOpenstackCloudConfigPtrOutput() ClusterCloudProviderOpenstackCloudConfigPtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigPtrOutput) ToClusterCloudProviderOpenstackCloudConfigPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigPtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigPtrOutput) Elem() ClusterCloudProviderOpenstackCloudConfigOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfig) ClusterCloudProviderOpenstackCloudConfig { return *v }).(ClusterCloudProviderOpenstackCloudConfigOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudConfigPtrOutput) BlockStorage() ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfig) *ClusterCloudProviderOpenstackCloudConfigBlockStorage {
		if v == nil {
			return nil
		}
		return v.BlockStorage
	}).(ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudConfigPtrOutput) Global() ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfig) *ClusterCloudProviderOpenstackCloudConfigGlobal {
		if v == nil {
			return nil
		}
		return &v.Global
	}).(ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudConfigPtrOutput) LoadBalancer() ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfig) *ClusterCloudProviderOpenstackCloudConfigLoadBalancer {
		if v == nil {
			return nil
		}
		return v.LoadBalancer
	}).(ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudConfigPtrOutput) Metadata() ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfig) *ClusterCloudProviderOpenstackCloudConfigMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudConfigPtrOutput) Route() ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfig) *ClusterCloudProviderOpenstackCloudConfigRoute {
		if v == nil {
			return nil
		}
		return v.Route
	}).(ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigBlockStorage struct {
	// (string)
	BsVersion *string `pulumi:"bsVersion"`
	// (string)
	IgnoreVolumeAz *bool `pulumi:"ignoreVolumeAz"`
	// (string)
	TrustDevicePath *bool `pulumi:"trustDevicePath"`
}

// ClusterCloudProviderOpenstackCloudConfigBlockStorageInput is an input type that accepts ClusterCloudProviderOpenstackCloudConfigBlockStorageArgs and ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudConfigBlockStorageInput` via:
//
//          ClusterCloudProviderOpenstackCloudConfigBlockStorageArgs{...}
type ClusterCloudProviderOpenstackCloudConfigBlockStorageInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudConfigBlockStorageOutput() ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput
	ToClusterCloudProviderOpenstackCloudConfigBlockStorageOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput
}

type ClusterCloudProviderOpenstackCloudConfigBlockStorageArgs struct {
	// (string)
	BsVersion pulumi.StringPtrInput `pulumi:"bsVersion"`
	// (string)
	IgnoreVolumeAz pulumi.BoolPtrInput `pulumi:"ignoreVolumeAz"`
	// (string)
	TrustDevicePath pulumi.BoolPtrInput `pulumi:"trustDevicePath"`
}

func (ClusterCloudProviderOpenstackCloudConfigBlockStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudConfigBlockStorage)(nil)).Elem()
}

func (i ClusterCloudProviderOpenstackCloudConfigBlockStorageArgs) ToClusterCloudProviderOpenstackCloudConfigBlockStorageOutput() ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigBlockStorageOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudConfigBlockStorageArgs) ToClusterCloudProviderOpenstackCloudConfigBlockStorageOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput)
}

func (i ClusterCloudProviderOpenstackCloudConfigBlockStorageArgs) ToClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput() ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudConfigBlockStorageArgs) ToClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput).ToClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutputWithContext(ctx)
}

// ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrInput is an input type that accepts ClusterCloudProviderOpenstackCloudConfigBlockStorageArgs, ClusterCloudProviderOpenstackCloudConfigBlockStoragePtr and ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrInput` via:
//
//          ClusterCloudProviderOpenstackCloudConfigBlockStorageArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput() ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput
	ToClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput
}

type clusterCloudProviderOpenstackCloudConfigBlockStoragePtrType ClusterCloudProviderOpenstackCloudConfigBlockStorageArgs

func ClusterCloudProviderOpenstackCloudConfigBlockStoragePtr(v *ClusterCloudProviderOpenstackCloudConfigBlockStorageArgs) ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrInput {
	return (*clusterCloudProviderOpenstackCloudConfigBlockStoragePtrType)(v)
}

func (*clusterCloudProviderOpenstackCloudConfigBlockStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudConfigBlockStorage)(nil)).Elem()
}

func (i *clusterCloudProviderOpenstackCloudConfigBlockStoragePtrType) ToClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput() ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderOpenstackCloudConfigBlockStoragePtrType) ToClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudConfigBlockStorage)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput) ToClusterCloudProviderOpenstackCloudConfigBlockStorageOutput() ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput) ToClusterCloudProviderOpenstackCloudConfigBlockStorageOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput) ToClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput() ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput {
	return o.ToClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput) ToClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigBlockStorage) *ClusterCloudProviderOpenstackCloudConfigBlockStorage {
		return &v
	}).(ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput) BsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigBlockStorage) *string { return v.BsVersion }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput) IgnoreVolumeAz() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigBlockStorage) *bool { return v.IgnoreVolumeAz }).(pulumi.BoolPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput) TrustDevicePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigBlockStorage) *bool { return v.TrustDevicePath }).(pulumi.BoolPtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudConfigBlockStorage)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput) ToClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput() ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput) ToClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput) Elem() ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigBlockStorage) ClusterCloudProviderOpenstackCloudConfigBlockStorage {
		return *v
	}).(ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput) BsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigBlockStorage) *string {
		if v == nil {
			return nil
		}
		return v.BsVersion
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput) IgnoreVolumeAz() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigBlockStorage) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreVolumeAz
	}).(pulumi.BoolPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput) TrustDevicePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigBlockStorage) *bool {
		if v == nil {
			return nil
		}
		return v.TrustDevicePath
	}).(pulumi.BoolPtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigGlobal struct {
	// (string)
	AuthUrl string `pulumi:"authUrl"`
	// (string)
	CaFile *string `pulumi:"caFile"`
	// Required if `domainName` not provided. (string)
	DomainId *string `pulumi:"domainId"`
	// Required if `domainId` not provided. (string)
	DomainName *string `pulumi:"domainName"`
	// Registry password (string)
	Password string `pulumi:"password"`
	// Region for S3 service (string)
	Region *string `pulumi:"region"`
	// Required if `tenantName` not provided. (string)
	TenantId *string `pulumi:"tenantId"`
	// Required if `tenantId` not provided. (string)
	TenantName *string `pulumi:"tenantName"`
	// (string)
	TrustId *string `pulumi:"trustId"`
	// Required if `username` not provided. (string)
	UserId *string `pulumi:"userId"`
	// Required if `userId` not provided. (string)
	Username *string `pulumi:"username"`
}

// ClusterCloudProviderOpenstackCloudConfigGlobalInput is an input type that accepts ClusterCloudProviderOpenstackCloudConfigGlobalArgs and ClusterCloudProviderOpenstackCloudConfigGlobalOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudConfigGlobalInput` via:
//
//          ClusterCloudProviderOpenstackCloudConfigGlobalArgs{...}
type ClusterCloudProviderOpenstackCloudConfigGlobalInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudConfigGlobalOutput() ClusterCloudProviderOpenstackCloudConfigGlobalOutput
	ToClusterCloudProviderOpenstackCloudConfigGlobalOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudConfigGlobalOutput
}

type ClusterCloudProviderOpenstackCloudConfigGlobalArgs struct {
	// (string)
	AuthUrl pulumi.StringInput `pulumi:"authUrl"`
	// (string)
	CaFile pulumi.StringPtrInput `pulumi:"caFile"`
	// Required if `domainName` not provided. (string)
	DomainId pulumi.StringPtrInput `pulumi:"domainId"`
	// Required if `domainId` not provided. (string)
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// Registry password (string)
	Password pulumi.StringInput `pulumi:"password"`
	// Region for S3 service (string)
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Required if `tenantName` not provided. (string)
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Required if `tenantId` not provided. (string)
	TenantName pulumi.StringPtrInput `pulumi:"tenantName"`
	// (string)
	TrustId pulumi.StringPtrInput `pulumi:"trustId"`
	// Required if `username` not provided. (string)
	UserId pulumi.StringPtrInput `pulumi:"userId"`
	// Required if `userId` not provided. (string)
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ClusterCloudProviderOpenstackCloudConfigGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudConfigGlobal)(nil)).Elem()
}

func (i ClusterCloudProviderOpenstackCloudConfigGlobalArgs) ToClusterCloudProviderOpenstackCloudConfigGlobalOutput() ClusterCloudProviderOpenstackCloudConfigGlobalOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigGlobalOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudConfigGlobalArgs) ToClusterCloudProviderOpenstackCloudConfigGlobalOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigGlobalOutput)
}

func (i ClusterCloudProviderOpenstackCloudConfigGlobalArgs) ToClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput() ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigGlobalPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudConfigGlobalArgs) ToClusterCloudProviderOpenstackCloudConfigGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigGlobalOutput).ToClusterCloudProviderOpenstackCloudConfigGlobalPtrOutputWithContext(ctx)
}

// ClusterCloudProviderOpenstackCloudConfigGlobalPtrInput is an input type that accepts ClusterCloudProviderOpenstackCloudConfigGlobalArgs, ClusterCloudProviderOpenstackCloudConfigGlobalPtr and ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudConfigGlobalPtrInput` via:
//
//          ClusterCloudProviderOpenstackCloudConfigGlobalArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderOpenstackCloudConfigGlobalPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput() ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput
	ToClusterCloudProviderOpenstackCloudConfigGlobalPtrOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput
}

type clusterCloudProviderOpenstackCloudConfigGlobalPtrType ClusterCloudProviderOpenstackCloudConfigGlobalArgs

func ClusterCloudProviderOpenstackCloudConfigGlobalPtr(v *ClusterCloudProviderOpenstackCloudConfigGlobalArgs) ClusterCloudProviderOpenstackCloudConfigGlobalPtrInput {
	return (*clusterCloudProviderOpenstackCloudConfigGlobalPtrType)(v)
}

func (*clusterCloudProviderOpenstackCloudConfigGlobalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudConfigGlobal)(nil)).Elem()
}

func (i *clusterCloudProviderOpenstackCloudConfigGlobalPtrType) ToClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput() ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigGlobalPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderOpenstackCloudConfigGlobalPtrType) ToClusterCloudProviderOpenstackCloudConfigGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigGlobalOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudConfigGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudConfigGlobal)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudConfigGlobalOutput) ToClusterCloudProviderOpenstackCloudConfigGlobalOutput() ClusterCloudProviderOpenstackCloudConfigGlobalOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigGlobalOutput) ToClusterCloudProviderOpenstackCloudConfigGlobalOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigGlobalOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigGlobalOutput) ToClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput() ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput {
	return o.ToClusterCloudProviderOpenstackCloudConfigGlobalPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderOpenstackCloudConfigGlobalOutput) ToClusterCloudProviderOpenstackCloudConfigGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigGlobal) *ClusterCloudProviderOpenstackCloudConfigGlobal {
		return &v
	}).(ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalOutput) AuthUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigGlobal) string { return v.AuthUrl }).(pulumi.StringOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigGlobal) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

// Required if `domainName` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigGlobal) *string { return v.DomainId }).(pulumi.StringPtrOutput)
}

// Required if `domainId` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigGlobal) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// Registry password (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigGlobal) string { return v.Password }).(pulumi.StringOutput)
}

// Region for S3 service (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigGlobal) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Required if `tenantName` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigGlobal) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Required if `tenantId` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalOutput) TenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigGlobal) *string { return v.TenantName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalOutput) TrustId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigGlobal) *string { return v.TrustId }).(pulumi.StringPtrOutput)
}

// Required if `username` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigGlobal) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

// Required if `userId` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigGlobal) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudConfigGlobal)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput) ToClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput() ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput) ToClusterCloudProviderOpenstackCloudConfigGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput) Elem() ClusterCloudProviderOpenstackCloudConfigGlobalOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigGlobal) ClusterCloudProviderOpenstackCloudConfigGlobal {
		return *v
	}).(ClusterCloudProviderOpenstackCloudConfigGlobalOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return &v.AuthUrl
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

// Required if `domainName` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.DomainId
	}).(pulumi.StringPtrOutput)
}

// Required if `domainId` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.DomainName
	}).(pulumi.StringPtrOutput)
}

// Registry password (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Region for S3 service (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Required if `tenantName` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Required if `tenantId` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput) TenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.TenantName
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput) TrustId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.TrustId
	}).(pulumi.StringPtrOutput)
}

// Required if `username` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.UserId
	}).(pulumi.StringPtrOutput)
}

// Required if `userId` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigLoadBalancer struct {
	// (bool)
	CreateMonitor *bool `pulumi:"createMonitor"`
	// (string)
	FloatingNetworkId *string `pulumi:"floatingNetworkId"`
	// (string)
	LbMethod *string `pulumi:"lbMethod"`
	// (string)
	LbProvider *string `pulumi:"lbProvider"`
	// (string)
	LbVersion *string `pulumi:"lbVersion"`
	// (bool)
	ManageSecurityGroups *bool `pulumi:"manageSecurityGroups"`
	// (string)
	MonitorDelay *string `pulumi:"monitorDelay"`
	// (int)
	MonitorMaxRetries *int `pulumi:"monitorMaxRetries"`
	// (string)
	MonitorTimeout *string `pulumi:"monitorTimeout"`
	// (string)
	SubnetId *string `pulumi:"subnetId"`
	// (bool)
	UseOctavia *bool `pulumi:"useOctavia"`
}

// ClusterCloudProviderOpenstackCloudConfigLoadBalancerInput is an input type that accepts ClusterCloudProviderOpenstackCloudConfigLoadBalancerArgs and ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudConfigLoadBalancerInput` via:
//
//          ClusterCloudProviderOpenstackCloudConfigLoadBalancerArgs{...}
type ClusterCloudProviderOpenstackCloudConfigLoadBalancerInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput() ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput
	ToClusterCloudProviderOpenstackCloudConfigLoadBalancerOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput
}

type ClusterCloudProviderOpenstackCloudConfigLoadBalancerArgs struct {
	// (bool)
	CreateMonitor pulumi.BoolPtrInput `pulumi:"createMonitor"`
	// (string)
	FloatingNetworkId pulumi.StringPtrInput `pulumi:"floatingNetworkId"`
	// (string)
	LbMethod pulumi.StringPtrInput `pulumi:"lbMethod"`
	// (string)
	LbProvider pulumi.StringPtrInput `pulumi:"lbProvider"`
	// (string)
	LbVersion pulumi.StringPtrInput `pulumi:"lbVersion"`
	// (bool)
	ManageSecurityGroups pulumi.BoolPtrInput `pulumi:"manageSecurityGroups"`
	// (string)
	MonitorDelay pulumi.StringPtrInput `pulumi:"monitorDelay"`
	// (int)
	MonitorMaxRetries pulumi.IntPtrInput `pulumi:"monitorMaxRetries"`
	// (string)
	MonitorTimeout pulumi.StringPtrInput `pulumi:"monitorTimeout"`
	// (string)
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// (bool)
	UseOctavia pulumi.BoolPtrInput `pulumi:"useOctavia"`
}

func (ClusterCloudProviderOpenstackCloudConfigLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudConfigLoadBalancer)(nil)).Elem()
}

func (i ClusterCloudProviderOpenstackCloudConfigLoadBalancerArgs) ToClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput() ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigLoadBalancerOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudConfigLoadBalancerArgs) ToClusterCloudProviderOpenstackCloudConfigLoadBalancerOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput)
}

func (i ClusterCloudProviderOpenstackCloudConfigLoadBalancerArgs) ToClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput() ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudConfigLoadBalancerArgs) ToClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput).ToClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutputWithContext(ctx)
}

// ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrInput is an input type that accepts ClusterCloudProviderOpenstackCloudConfigLoadBalancerArgs, ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtr and ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrInput` via:
//
//          ClusterCloudProviderOpenstackCloudConfigLoadBalancerArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput() ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput
	ToClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput
}

type clusterCloudProviderOpenstackCloudConfigLoadBalancerPtrType ClusterCloudProviderOpenstackCloudConfigLoadBalancerArgs

func ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtr(v *ClusterCloudProviderOpenstackCloudConfigLoadBalancerArgs) ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrInput {
	return (*clusterCloudProviderOpenstackCloudConfigLoadBalancerPtrType)(v)
}

func (*clusterCloudProviderOpenstackCloudConfigLoadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudConfigLoadBalancer)(nil)).Elem()
}

func (i *clusterCloudProviderOpenstackCloudConfigLoadBalancerPtrType) ToClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput() ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderOpenstackCloudConfigLoadBalancerPtrType) ToClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudConfigLoadBalancer)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput) ToClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput() ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput) ToClusterCloudProviderOpenstackCloudConfigLoadBalancerOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput) ToClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput() ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput {
	return o.ToClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput) ToClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *ClusterCloudProviderOpenstackCloudConfigLoadBalancer {
		return &v
	}).(ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput)
}

// (bool)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput) CreateMonitor() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *bool { return v.CreateMonitor }).(pulumi.BoolPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput) FloatingNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *string { return v.FloatingNetworkId }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput) LbMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *string { return v.LbMethod }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput) LbProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *string { return v.LbProvider }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput) LbVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *string { return v.LbVersion }).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput) ManageSecurityGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *bool { return v.ManageSecurityGroups }).(pulumi.BoolPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput) MonitorDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *string { return v.MonitorDelay }).(pulumi.StringPtrOutput)
}

// (int)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput) MonitorMaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *int { return v.MonitorMaxRetries }).(pulumi.IntPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput) MonitorTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *string { return v.MonitorTimeout }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput) UseOctavia() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *bool { return v.UseOctavia }).(pulumi.BoolPtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudConfigLoadBalancer)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput) ToClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput() ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput) ToClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput) Elem() ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigLoadBalancer) ClusterCloudProviderOpenstackCloudConfigLoadBalancer {
		return *v
	}).(ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput)
}

// (bool)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput) CreateMonitor() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *bool {
		if v == nil {
			return nil
		}
		return v.CreateMonitor
	}).(pulumi.BoolPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput) FloatingNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.FloatingNetworkId
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput) LbMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.LbMethod
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput) LbProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.LbProvider
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput) LbVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.LbVersion
	}).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput) ManageSecurityGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *bool {
		if v == nil {
			return nil
		}
		return v.ManageSecurityGroups
	}).(pulumi.BoolPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput) MonitorDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.MonitorDelay
	}).(pulumi.StringPtrOutput)
}

// (int)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput) MonitorMaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *int {
		if v == nil {
			return nil
		}
		return v.MonitorMaxRetries
	}).(pulumi.IntPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput) MonitorTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.MonitorTimeout
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput) UseOctavia() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigLoadBalancer) *bool {
		if v == nil {
			return nil
		}
		return v.UseOctavia
	}).(pulumi.BoolPtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigMetadata struct {
	// (int)
	RequestTimeout *int `pulumi:"requestTimeout"`
	// (string)
	SearchOrder *string `pulumi:"searchOrder"`
}

// ClusterCloudProviderOpenstackCloudConfigMetadataInput is an input type that accepts ClusterCloudProviderOpenstackCloudConfigMetadataArgs and ClusterCloudProviderOpenstackCloudConfigMetadataOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudConfigMetadataInput` via:
//
//          ClusterCloudProviderOpenstackCloudConfigMetadataArgs{...}
type ClusterCloudProviderOpenstackCloudConfigMetadataInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudConfigMetadataOutput() ClusterCloudProviderOpenstackCloudConfigMetadataOutput
	ToClusterCloudProviderOpenstackCloudConfigMetadataOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudConfigMetadataOutput
}

type ClusterCloudProviderOpenstackCloudConfigMetadataArgs struct {
	// (int)
	RequestTimeout pulumi.IntPtrInput `pulumi:"requestTimeout"`
	// (string)
	SearchOrder pulumi.StringPtrInput `pulumi:"searchOrder"`
}

func (ClusterCloudProviderOpenstackCloudConfigMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudConfigMetadata)(nil)).Elem()
}

func (i ClusterCloudProviderOpenstackCloudConfigMetadataArgs) ToClusterCloudProviderOpenstackCloudConfigMetadataOutput() ClusterCloudProviderOpenstackCloudConfigMetadataOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigMetadataOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudConfigMetadataArgs) ToClusterCloudProviderOpenstackCloudConfigMetadataOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigMetadataOutput)
}

func (i ClusterCloudProviderOpenstackCloudConfigMetadataArgs) ToClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput() ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigMetadataPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudConfigMetadataArgs) ToClusterCloudProviderOpenstackCloudConfigMetadataPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigMetadataOutput).ToClusterCloudProviderOpenstackCloudConfigMetadataPtrOutputWithContext(ctx)
}

// ClusterCloudProviderOpenstackCloudConfigMetadataPtrInput is an input type that accepts ClusterCloudProviderOpenstackCloudConfigMetadataArgs, ClusterCloudProviderOpenstackCloudConfigMetadataPtr and ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudConfigMetadataPtrInput` via:
//
//          ClusterCloudProviderOpenstackCloudConfigMetadataArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderOpenstackCloudConfigMetadataPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput() ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput
	ToClusterCloudProviderOpenstackCloudConfigMetadataPtrOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput
}

type clusterCloudProviderOpenstackCloudConfigMetadataPtrType ClusterCloudProviderOpenstackCloudConfigMetadataArgs

func ClusterCloudProviderOpenstackCloudConfigMetadataPtr(v *ClusterCloudProviderOpenstackCloudConfigMetadataArgs) ClusterCloudProviderOpenstackCloudConfigMetadataPtrInput {
	return (*clusterCloudProviderOpenstackCloudConfigMetadataPtrType)(v)
}

func (*clusterCloudProviderOpenstackCloudConfigMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudConfigMetadata)(nil)).Elem()
}

func (i *clusterCloudProviderOpenstackCloudConfigMetadataPtrType) ToClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput() ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigMetadataPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderOpenstackCloudConfigMetadataPtrType) ToClusterCloudProviderOpenstackCloudConfigMetadataPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigMetadataOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudConfigMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudConfigMetadata)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudConfigMetadataOutput) ToClusterCloudProviderOpenstackCloudConfigMetadataOutput() ClusterCloudProviderOpenstackCloudConfigMetadataOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigMetadataOutput) ToClusterCloudProviderOpenstackCloudConfigMetadataOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigMetadataOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigMetadataOutput) ToClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput() ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput {
	return o.ToClusterCloudProviderOpenstackCloudConfigMetadataPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderOpenstackCloudConfigMetadataOutput) ToClusterCloudProviderOpenstackCloudConfigMetadataPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigMetadata) *ClusterCloudProviderOpenstackCloudConfigMetadata {
		return &v
	}).(ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput)
}

// (int)
func (o ClusterCloudProviderOpenstackCloudConfigMetadataOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigMetadata) *int { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigMetadataOutput) SearchOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigMetadata) *string { return v.SearchOrder }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudConfigMetadata)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput) ToClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput() ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput) ToClusterCloudProviderOpenstackCloudConfigMetadataPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput) Elem() ClusterCloudProviderOpenstackCloudConfigMetadataOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigMetadata) ClusterCloudProviderOpenstackCloudConfigMetadata {
		return *v
	}).(ClusterCloudProviderOpenstackCloudConfigMetadataOutput)
}

// (int)
func (o ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigMetadata) *int {
		if v == nil {
			return nil
		}
		return v.RequestTimeout
	}).(pulumi.IntPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput) SearchOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigMetadata) *string {
		if v == nil {
			return nil
		}
		return v.SearchOrder
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigRoute struct {
	// (string)
	RouterId *string `pulumi:"routerId"`
}

// ClusterCloudProviderOpenstackCloudConfigRouteInput is an input type that accepts ClusterCloudProviderOpenstackCloudConfigRouteArgs and ClusterCloudProviderOpenstackCloudConfigRouteOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudConfigRouteInput` via:
//
//          ClusterCloudProviderOpenstackCloudConfigRouteArgs{...}
type ClusterCloudProviderOpenstackCloudConfigRouteInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudConfigRouteOutput() ClusterCloudProviderOpenstackCloudConfigRouteOutput
	ToClusterCloudProviderOpenstackCloudConfigRouteOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudConfigRouteOutput
}

type ClusterCloudProviderOpenstackCloudConfigRouteArgs struct {
	// (string)
	RouterId pulumi.StringPtrInput `pulumi:"routerId"`
}

func (ClusterCloudProviderOpenstackCloudConfigRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudConfigRoute)(nil)).Elem()
}

func (i ClusterCloudProviderOpenstackCloudConfigRouteArgs) ToClusterCloudProviderOpenstackCloudConfigRouteOutput() ClusterCloudProviderOpenstackCloudConfigRouteOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigRouteOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudConfigRouteArgs) ToClusterCloudProviderOpenstackCloudConfigRouteOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigRouteOutput)
}

func (i ClusterCloudProviderOpenstackCloudConfigRouteArgs) ToClusterCloudProviderOpenstackCloudConfigRoutePtrOutput() ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigRoutePtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudConfigRouteArgs) ToClusterCloudProviderOpenstackCloudConfigRoutePtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigRouteOutput).ToClusterCloudProviderOpenstackCloudConfigRoutePtrOutputWithContext(ctx)
}

// ClusterCloudProviderOpenstackCloudConfigRoutePtrInput is an input type that accepts ClusterCloudProviderOpenstackCloudConfigRouteArgs, ClusterCloudProviderOpenstackCloudConfigRoutePtr and ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudConfigRoutePtrInput` via:
//
//          ClusterCloudProviderOpenstackCloudConfigRouteArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderOpenstackCloudConfigRoutePtrInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudConfigRoutePtrOutput() ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput
	ToClusterCloudProviderOpenstackCloudConfigRoutePtrOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput
}

type clusterCloudProviderOpenstackCloudConfigRoutePtrType ClusterCloudProviderOpenstackCloudConfigRouteArgs

func ClusterCloudProviderOpenstackCloudConfigRoutePtr(v *ClusterCloudProviderOpenstackCloudConfigRouteArgs) ClusterCloudProviderOpenstackCloudConfigRoutePtrInput {
	return (*clusterCloudProviderOpenstackCloudConfigRoutePtrType)(v)
}

func (*clusterCloudProviderOpenstackCloudConfigRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudConfigRoute)(nil)).Elem()
}

func (i *clusterCloudProviderOpenstackCloudConfigRoutePtrType) ToClusterCloudProviderOpenstackCloudConfigRoutePtrOutput() ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudConfigRoutePtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderOpenstackCloudConfigRoutePtrType) ToClusterCloudProviderOpenstackCloudConfigRoutePtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigRouteOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudConfigRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudConfigRoute)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudConfigRouteOutput) ToClusterCloudProviderOpenstackCloudConfigRouteOutput() ClusterCloudProviderOpenstackCloudConfigRouteOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigRouteOutput) ToClusterCloudProviderOpenstackCloudConfigRouteOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigRouteOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigRouteOutput) ToClusterCloudProviderOpenstackCloudConfigRoutePtrOutput() ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput {
	return o.ToClusterCloudProviderOpenstackCloudConfigRoutePtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderOpenstackCloudConfigRouteOutput) ToClusterCloudProviderOpenstackCloudConfigRoutePtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigRoute) *ClusterCloudProviderOpenstackCloudConfigRoute {
		return &v
	}).(ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigRouteOutput) RouterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudConfigRoute) *string { return v.RouterId }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudConfigRoute)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput) ToClusterCloudProviderOpenstackCloudConfigRoutePtrOutput() ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput) ToClusterCloudProviderOpenstackCloudConfigRoutePtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput) Elem() ClusterCloudProviderOpenstackCloudConfigRouteOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigRoute) ClusterCloudProviderOpenstackCloudConfigRoute {
		return *v
	}).(ClusterCloudProviderOpenstackCloudConfigRouteOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput) RouterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudConfigRoute) *string {
		if v == nil {
			return nil
		}
		return v.RouterId
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderOpenstackCloudProvider struct {
	// (list maxitems:1)
	BlockStorage *ClusterCloudProviderOpenstackCloudProviderBlockStorage `pulumi:"blockStorage"`
	// (list maxitems:1)
	Global ClusterCloudProviderOpenstackCloudProviderGlobal `pulumi:"global"`
	// (list maxitems:1)
	LoadBalancer *ClusterCloudProviderOpenstackCloudProviderLoadBalancer `pulumi:"loadBalancer"`
	// (list maxitems:1)
	Metadata *ClusterCloudProviderOpenstackCloudProviderMetadata `pulumi:"metadata"`
	// (list maxitems:1)
	Route *ClusterCloudProviderOpenstackCloudProviderRoute `pulumi:"route"`
}

// ClusterCloudProviderOpenstackCloudProviderInput is an input type that accepts ClusterCloudProviderOpenstackCloudProviderArgs and ClusterCloudProviderOpenstackCloudProviderOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudProviderInput` via:
//
//          ClusterCloudProviderOpenstackCloudProviderArgs{...}
type ClusterCloudProviderOpenstackCloudProviderInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudProviderOutput() ClusterCloudProviderOpenstackCloudProviderOutput
	ToClusterCloudProviderOpenstackCloudProviderOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudProviderOutput
}

type ClusterCloudProviderOpenstackCloudProviderArgs struct {
	// (list maxitems:1)
	BlockStorage ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrInput `pulumi:"blockStorage"`
	// (list maxitems:1)
	Global ClusterCloudProviderOpenstackCloudProviderGlobalInput `pulumi:"global"`
	// (list maxitems:1)
	LoadBalancer ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrInput `pulumi:"loadBalancer"`
	// (list maxitems:1)
	Metadata ClusterCloudProviderOpenstackCloudProviderMetadataPtrInput `pulumi:"metadata"`
	// (list maxitems:1)
	Route ClusterCloudProviderOpenstackCloudProviderRoutePtrInput `pulumi:"route"`
}

func (ClusterCloudProviderOpenstackCloudProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudProvider)(nil)).Elem()
}

func (i ClusterCloudProviderOpenstackCloudProviderArgs) ToClusterCloudProviderOpenstackCloudProviderOutput() ClusterCloudProviderOpenstackCloudProviderOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudProviderArgs) ToClusterCloudProviderOpenstackCloudProviderOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderOutput)
}

func (i ClusterCloudProviderOpenstackCloudProviderArgs) ToClusterCloudProviderOpenstackCloudProviderPtrOutput() ClusterCloudProviderOpenstackCloudProviderPtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudProviderArgs) ToClusterCloudProviderOpenstackCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderOutput).ToClusterCloudProviderOpenstackCloudProviderPtrOutputWithContext(ctx)
}

// ClusterCloudProviderOpenstackCloudProviderPtrInput is an input type that accepts ClusterCloudProviderOpenstackCloudProviderArgs, ClusterCloudProviderOpenstackCloudProviderPtr and ClusterCloudProviderOpenstackCloudProviderPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudProviderPtrInput` via:
//
//          ClusterCloudProviderOpenstackCloudProviderArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderOpenstackCloudProviderPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudProviderPtrOutput() ClusterCloudProviderOpenstackCloudProviderPtrOutput
	ToClusterCloudProviderOpenstackCloudProviderPtrOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudProviderPtrOutput
}

type clusterCloudProviderOpenstackCloudProviderPtrType ClusterCloudProviderOpenstackCloudProviderArgs

func ClusterCloudProviderOpenstackCloudProviderPtr(v *ClusterCloudProviderOpenstackCloudProviderArgs) ClusterCloudProviderOpenstackCloudProviderPtrInput {
	return (*clusterCloudProviderOpenstackCloudProviderPtrType)(v)
}

func (*clusterCloudProviderOpenstackCloudProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudProvider)(nil)).Elem()
}

func (i *clusterCloudProviderOpenstackCloudProviderPtrType) ToClusterCloudProviderOpenstackCloudProviderPtrOutput() ClusterCloudProviderOpenstackCloudProviderPtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderOpenstackCloudProviderPtrType) ToClusterCloudProviderOpenstackCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderPtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudProvider)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudProviderOutput) ToClusterCloudProviderOpenstackCloudProviderOutput() ClusterCloudProviderOpenstackCloudProviderOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderOutput) ToClusterCloudProviderOpenstackCloudProviderOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderOutput) ToClusterCloudProviderOpenstackCloudProviderPtrOutput() ClusterCloudProviderOpenstackCloudProviderPtrOutput {
	return o.ToClusterCloudProviderOpenstackCloudProviderPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderOpenstackCloudProviderOutput) ToClusterCloudProviderOpenstackCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProvider) *ClusterCloudProviderOpenstackCloudProvider {
		return &v
	}).(ClusterCloudProviderOpenstackCloudProviderPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudProviderOutput) BlockStorage() ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProvider) *ClusterCloudProviderOpenstackCloudProviderBlockStorage {
		return v.BlockStorage
	}).(ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudProviderOutput) Global() ClusterCloudProviderOpenstackCloudProviderGlobalOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProvider) ClusterCloudProviderOpenstackCloudProviderGlobal {
		return v.Global
	}).(ClusterCloudProviderOpenstackCloudProviderGlobalOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudProviderOutput) LoadBalancer() ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProvider) *ClusterCloudProviderOpenstackCloudProviderLoadBalancer {
		return v.LoadBalancer
	}).(ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudProviderOutput) Metadata() ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProvider) *ClusterCloudProviderOpenstackCloudProviderMetadata {
		return v.Metadata
	}).(ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudProviderOutput) Route() ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProvider) *ClusterCloudProviderOpenstackCloudProviderRoute {
		return v.Route
	}).(ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudProvider)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudProviderPtrOutput) ToClusterCloudProviderOpenstackCloudProviderPtrOutput() ClusterCloudProviderOpenstackCloudProviderPtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderPtrOutput) ToClusterCloudProviderOpenstackCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderPtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderPtrOutput) Elem() ClusterCloudProviderOpenstackCloudProviderOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProvider) ClusterCloudProviderOpenstackCloudProvider {
		return *v
	}).(ClusterCloudProviderOpenstackCloudProviderOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudProviderPtrOutput) BlockStorage() ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProvider) *ClusterCloudProviderOpenstackCloudProviderBlockStorage {
		if v == nil {
			return nil
		}
		return v.BlockStorage
	}).(ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudProviderPtrOutput) Global() ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProvider) *ClusterCloudProviderOpenstackCloudProviderGlobal {
		if v == nil {
			return nil
		}
		return &v.Global
	}).(ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudProviderPtrOutput) LoadBalancer() ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProvider) *ClusterCloudProviderOpenstackCloudProviderLoadBalancer {
		if v == nil {
			return nil
		}
		return v.LoadBalancer
	}).(ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudProviderPtrOutput) Metadata() ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProvider) *ClusterCloudProviderOpenstackCloudProviderMetadata {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderOpenstackCloudProviderPtrOutput) Route() ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProvider) *ClusterCloudProviderOpenstackCloudProviderRoute {
		if v == nil {
			return nil
		}
		return v.Route
	}).(ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderBlockStorage struct {
	// (string)
	BsVersion *string `pulumi:"bsVersion"`
	// (string)
	IgnoreVolumeAz *bool `pulumi:"ignoreVolumeAz"`
	// (string)
	TrustDevicePath *bool `pulumi:"trustDevicePath"`
}

// ClusterCloudProviderOpenstackCloudProviderBlockStorageInput is an input type that accepts ClusterCloudProviderOpenstackCloudProviderBlockStorageArgs and ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudProviderBlockStorageInput` via:
//
//          ClusterCloudProviderOpenstackCloudProviderBlockStorageArgs{...}
type ClusterCloudProviderOpenstackCloudProviderBlockStorageInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudProviderBlockStorageOutput() ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput
	ToClusterCloudProviderOpenstackCloudProviderBlockStorageOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput
}

type ClusterCloudProviderOpenstackCloudProviderBlockStorageArgs struct {
	// (string)
	BsVersion pulumi.StringPtrInput `pulumi:"bsVersion"`
	// (string)
	IgnoreVolumeAz pulumi.BoolPtrInput `pulumi:"ignoreVolumeAz"`
	// (string)
	TrustDevicePath pulumi.BoolPtrInput `pulumi:"trustDevicePath"`
}

func (ClusterCloudProviderOpenstackCloudProviderBlockStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudProviderBlockStorage)(nil)).Elem()
}

func (i ClusterCloudProviderOpenstackCloudProviderBlockStorageArgs) ToClusterCloudProviderOpenstackCloudProviderBlockStorageOutput() ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderBlockStorageOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudProviderBlockStorageArgs) ToClusterCloudProviderOpenstackCloudProviderBlockStorageOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput)
}

func (i ClusterCloudProviderOpenstackCloudProviderBlockStorageArgs) ToClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput() ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudProviderBlockStorageArgs) ToClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput).ToClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutputWithContext(ctx)
}

// ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrInput is an input type that accepts ClusterCloudProviderOpenstackCloudProviderBlockStorageArgs, ClusterCloudProviderOpenstackCloudProviderBlockStoragePtr and ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrInput` via:
//
//          ClusterCloudProviderOpenstackCloudProviderBlockStorageArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput() ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput
	ToClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput
}

type clusterCloudProviderOpenstackCloudProviderBlockStoragePtrType ClusterCloudProviderOpenstackCloudProviderBlockStorageArgs

func ClusterCloudProviderOpenstackCloudProviderBlockStoragePtr(v *ClusterCloudProviderOpenstackCloudProviderBlockStorageArgs) ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrInput {
	return (*clusterCloudProviderOpenstackCloudProviderBlockStoragePtrType)(v)
}

func (*clusterCloudProviderOpenstackCloudProviderBlockStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudProviderBlockStorage)(nil)).Elem()
}

func (i *clusterCloudProviderOpenstackCloudProviderBlockStoragePtrType) ToClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput() ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderOpenstackCloudProviderBlockStoragePtrType) ToClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudProviderBlockStorage)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput) ToClusterCloudProviderOpenstackCloudProviderBlockStorageOutput() ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput) ToClusterCloudProviderOpenstackCloudProviderBlockStorageOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput) ToClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput() ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput {
	return o.ToClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput) ToClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderBlockStorage) *ClusterCloudProviderOpenstackCloudProviderBlockStorage {
		return &v
	}).(ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput) BsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderBlockStorage) *string { return v.BsVersion }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput) IgnoreVolumeAz() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderBlockStorage) *bool { return v.IgnoreVolumeAz }).(pulumi.BoolPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput) TrustDevicePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderBlockStorage) *bool { return v.TrustDevicePath }).(pulumi.BoolPtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudProviderBlockStorage)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput) ToClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput() ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput) ToClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput) Elem() ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderBlockStorage) ClusterCloudProviderOpenstackCloudProviderBlockStorage {
		return *v
	}).(ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput) BsVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderBlockStorage) *string {
		if v == nil {
			return nil
		}
		return v.BsVersion
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput) IgnoreVolumeAz() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderBlockStorage) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreVolumeAz
	}).(pulumi.BoolPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput) TrustDevicePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderBlockStorage) *bool {
		if v == nil {
			return nil
		}
		return v.TrustDevicePath
	}).(pulumi.BoolPtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderGlobal struct {
	// (string)
	AuthUrl string `pulumi:"authUrl"`
	// (string)
	CaFile *string `pulumi:"caFile"`
	// Required if `domainName` not provided. (string)
	DomainId *string `pulumi:"domainId"`
	// Required if `domainId` not provided. (string)
	DomainName *string `pulumi:"domainName"`
	// Registry password (string)
	Password string `pulumi:"password"`
	// Region for S3 service (string)
	Region *string `pulumi:"region"`
	// Required if `tenantName` not provided. (string)
	TenantId *string `pulumi:"tenantId"`
	// Required if `tenantId` not provided. (string)
	TenantName *string `pulumi:"tenantName"`
	// (string)
	TrustId *string `pulumi:"trustId"`
	// Required if `username` not provided. (string)
	UserId *string `pulumi:"userId"`
	// Required if `userId` not provided. (string)
	Username *string `pulumi:"username"`
}

// ClusterCloudProviderOpenstackCloudProviderGlobalInput is an input type that accepts ClusterCloudProviderOpenstackCloudProviderGlobalArgs and ClusterCloudProviderOpenstackCloudProviderGlobalOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudProviderGlobalInput` via:
//
//          ClusterCloudProviderOpenstackCloudProviderGlobalArgs{...}
type ClusterCloudProviderOpenstackCloudProviderGlobalInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudProviderGlobalOutput() ClusterCloudProviderOpenstackCloudProviderGlobalOutput
	ToClusterCloudProviderOpenstackCloudProviderGlobalOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudProviderGlobalOutput
}

type ClusterCloudProviderOpenstackCloudProviderGlobalArgs struct {
	// (string)
	AuthUrl pulumi.StringInput `pulumi:"authUrl"`
	// (string)
	CaFile pulumi.StringPtrInput `pulumi:"caFile"`
	// Required if `domainName` not provided. (string)
	DomainId pulumi.StringPtrInput `pulumi:"domainId"`
	// Required if `domainId` not provided. (string)
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// Registry password (string)
	Password pulumi.StringInput `pulumi:"password"`
	// Region for S3 service (string)
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Required if `tenantName` not provided. (string)
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
	// Required if `tenantId` not provided. (string)
	TenantName pulumi.StringPtrInput `pulumi:"tenantName"`
	// (string)
	TrustId pulumi.StringPtrInput `pulumi:"trustId"`
	// Required if `username` not provided. (string)
	UserId pulumi.StringPtrInput `pulumi:"userId"`
	// Required if `userId` not provided. (string)
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ClusterCloudProviderOpenstackCloudProviderGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudProviderGlobal)(nil)).Elem()
}

func (i ClusterCloudProviderOpenstackCloudProviderGlobalArgs) ToClusterCloudProviderOpenstackCloudProviderGlobalOutput() ClusterCloudProviderOpenstackCloudProviderGlobalOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderGlobalOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudProviderGlobalArgs) ToClusterCloudProviderOpenstackCloudProviderGlobalOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderGlobalOutput)
}

func (i ClusterCloudProviderOpenstackCloudProviderGlobalArgs) ToClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput() ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderGlobalPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudProviderGlobalArgs) ToClusterCloudProviderOpenstackCloudProviderGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderGlobalOutput).ToClusterCloudProviderOpenstackCloudProviderGlobalPtrOutputWithContext(ctx)
}

// ClusterCloudProviderOpenstackCloudProviderGlobalPtrInput is an input type that accepts ClusterCloudProviderOpenstackCloudProviderGlobalArgs, ClusterCloudProviderOpenstackCloudProviderGlobalPtr and ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudProviderGlobalPtrInput` via:
//
//          ClusterCloudProviderOpenstackCloudProviderGlobalArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderOpenstackCloudProviderGlobalPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput() ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput
	ToClusterCloudProviderOpenstackCloudProviderGlobalPtrOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput
}

type clusterCloudProviderOpenstackCloudProviderGlobalPtrType ClusterCloudProviderOpenstackCloudProviderGlobalArgs

func ClusterCloudProviderOpenstackCloudProviderGlobalPtr(v *ClusterCloudProviderOpenstackCloudProviderGlobalArgs) ClusterCloudProviderOpenstackCloudProviderGlobalPtrInput {
	return (*clusterCloudProviderOpenstackCloudProviderGlobalPtrType)(v)
}

func (*clusterCloudProviderOpenstackCloudProviderGlobalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudProviderGlobal)(nil)).Elem()
}

func (i *clusterCloudProviderOpenstackCloudProviderGlobalPtrType) ToClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput() ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderGlobalPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderOpenstackCloudProviderGlobalPtrType) ToClusterCloudProviderOpenstackCloudProviderGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderGlobalOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudProviderGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudProviderGlobal)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudProviderGlobalOutput) ToClusterCloudProviderOpenstackCloudProviderGlobalOutput() ClusterCloudProviderOpenstackCloudProviderGlobalOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderGlobalOutput) ToClusterCloudProviderOpenstackCloudProviderGlobalOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderGlobalOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderGlobalOutput) ToClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput() ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput {
	return o.ToClusterCloudProviderOpenstackCloudProviderGlobalPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderOpenstackCloudProviderGlobalOutput) ToClusterCloudProviderOpenstackCloudProviderGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderGlobal) *ClusterCloudProviderOpenstackCloudProviderGlobal {
		return &v
	}).(ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalOutput) AuthUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderGlobal) string { return v.AuthUrl }).(pulumi.StringOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderGlobal) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

// Required if `domainName` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderGlobal) *string { return v.DomainId }).(pulumi.StringPtrOutput)
}

// Required if `domainId` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderGlobal) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// Registry password (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderGlobal) string { return v.Password }).(pulumi.StringOutput)
}

// Region for S3 service (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderGlobal) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Required if `tenantName` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderGlobal) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

// Required if `tenantId` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalOutput) TenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderGlobal) *string { return v.TenantName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalOutput) TrustId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderGlobal) *string { return v.TrustId }).(pulumi.StringPtrOutput)
}

// Required if `username` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderGlobal) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

// Required if `userId` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderGlobal) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudProviderGlobal)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput) ToClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput() ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput) ToClusterCloudProviderOpenstackCloudProviderGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput) Elem() ClusterCloudProviderOpenstackCloudProviderGlobalOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderGlobal) ClusterCloudProviderOpenstackCloudProviderGlobal {
		return *v
	}).(ClusterCloudProviderOpenstackCloudProviderGlobalOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput) AuthUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return &v.AuthUrl
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

// Required if `domainName` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.DomainId
	}).(pulumi.StringPtrOutput)
}

// Required if `domainId` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.DomainName
	}).(pulumi.StringPtrOutput)
}

// Registry password (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Region for S3 service (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Required if `tenantName` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// Required if `tenantId` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput) TenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.TenantName
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput) TrustId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.TrustId
	}).(pulumi.StringPtrOutput)
}

// Required if `username` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.UserId
	}).(pulumi.StringPtrOutput)
}

// Required if `userId` not provided. (string)
func (o ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderLoadBalancer struct {
	// (bool)
	CreateMonitor *bool `pulumi:"createMonitor"`
	// (string)
	FloatingNetworkId *string `pulumi:"floatingNetworkId"`
	// (string)
	LbMethod *string `pulumi:"lbMethod"`
	// (string)
	LbProvider *string `pulumi:"lbProvider"`
	// (string)
	LbVersion *string `pulumi:"lbVersion"`
	// (bool)
	ManageSecurityGroups *bool `pulumi:"manageSecurityGroups"`
	// (string)
	MonitorDelay *string `pulumi:"monitorDelay"`
	// (int)
	MonitorMaxRetries *int `pulumi:"monitorMaxRetries"`
	// (string)
	MonitorTimeout *string `pulumi:"monitorTimeout"`
	// (string)
	SubnetId *string `pulumi:"subnetId"`
	// (bool)
	UseOctavia *bool `pulumi:"useOctavia"`
}

// ClusterCloudProviderOpenstackCloudProviderLoadBalancerInput is an input type that accepts ClusterCloudProviderOpenstackCloudProviderLoadBalancerArgs and ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudProviderLoadBalancerInput` via:
//
//          ClusterCloudProviderOpenstackCloudProviderLoadBalancerArgs{...}
type ClusterCloudProviderOpenstackCloudProviderLoadBalancerInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput() ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput
	ToClusterCloudProviderOpenstackCloudProviderLoadBalancerOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput
}

type ClusterCloudProviderOpenstackCloudProviderLoadBalancerArgs struct {
	// (bool)
	CreateMonitor pulumi.BoolPtrInput `pulumi:"createMonitor"`
	// (string)
	FloatingNetworkId pulumi.StringPtrInput `pulumi:"floatingNetworkId"`
	// (string)
	LbMethod pulumi.StringPtrInput `pulumi:"lbMethod"`
	// (string)
	LbProvider pulumi.StringPtrInput `pulumi:"lbProvider"`
	// (string)
	LbVersion pulumi.StringPtrInput `pulumi:"lbVersion"`
	// (bool)
	ManageSecurityGroups pulumi.BoolPtrInput `pulumi:"manageSecurityGroups"`
	// (string)
	MonitorDelay pulumi.StringPtrInput `pulumi:"monitorDelay"`
	// (int)
	MonitorMaxRetries pulumi.IntPtrInput `pulumi:"monitorMaxRetries"`
	// (string)
	MonitorTimeout pulumi.StringPtrInput `pulumi:"monitorTimeout"`
	// (string)
	SubnetId pulumi.StringPtrInput `pulumi:"subnetId"`
	// (bool)
	UseOctavia pulumi.BoolPtrInput `pulumi:"useOctavia"`
}

func (ClusterCloudProviderOpenstackCloudProviderLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudProviderLoadBalancer)(nil)).Elem()
}

func (i ClusterCloudProviderOpenstackCloudProviderLoadBalancerArgs) ToClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput() ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderLoadBalancerOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudProviderLoadBalancerArgs) ToClusterCloudProviderOpenstackCloudProviderLoadBalancerOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput)
}

func (i ClusterCloudProviderOpenstackCloudProviderLoadBalancerArgs) ToClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput() ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudProviderLoadBalancerArgs) ToClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput).ToClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutputWithContext(ctx)
}

// ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrInput is an input type that accepts ClusterCloudProviderOpenstackCloudProviderLoadBalancerArgs, ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtr and ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrInput` via:
//
//          ClusterCloudProviderOpenstackCloudProviderLoadBalancerArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput() ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput
	ToClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput
}

type clusterCloudProviderOpenstackCloudProviderLoadBalancerPtrType ClusterCloudProviderOpenstackCloudProviderLoadBalancerArgs

func ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtr(v *ClusterCloudProviderOpenstackCloudProviderLoadBalancerArgs) ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrInput {
	return (*clusterCloudProviderOpenstackCloudProviderLoadBalancerPtrType)(v)
}

func (*clusterCloudProviderOpenstackCloudProviderLoadBalancerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudProviderLoadBalancer)(nil)).Elem()
}

func (i *clusterCloudProviderOpenstackCloudProviderLoadBalancerPtrType) ToClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput() ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderOpenstackCloudProviderLoadBalancerPtrType) ToClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudProviderLoadBalancer)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput) ToClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput() ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput) ToClusterCloudProviderOpenstackCloudProviderLoadBalancerOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput) ToClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput() ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput {
	return o.ToClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput) ToClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *ClusterCloudProviderOpenstackCloudProviderLoadBalancer {
		return &v
	}).(ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput)
}

// (bool)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput) CreateMonitor() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *bool { return v.CreateMonitor }).(pulumi.BoolPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput) FloatingNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *string { return v.FloatingNetworkId }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput) LbMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *string { return v.LbMethod }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput) LbProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *string { return v.LbProvider }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput) LbVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *string { return v.LbVersion }).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput) ManageSecurityGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *bool { return v.ManageSecurityGroups }).(pulumi.BoolPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput) MonitorDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *string { return v.MonitorDelay }).(pulumi.StringPtrOutput)
}

// (int)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput) MonitorMaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *int { return v.MonitorMaxRetries }).(pulumi.IntPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput) MonitorTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *string { return v.MonitorTimeout }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput) UseOctavia() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *bool { return v.UseOctavia }).(pulumi.BoolPtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudProviderLoadBalancer)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput) ToClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput() ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput) ToClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput) Elem() ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderLoadBalancer) ClusterCloudProviderOpenstackCloudProviderLoadBalancer {
		return *v
	}).(ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput)
}

// (bool)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput) CreateMonitor() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *bool {
		if v == nil {
			return nil
		}
		return v.CreateMonitor
	}).(pulumi.BoolPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput) FloatingNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.FloatingNetworkId
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput) LbMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.LbMethod
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput) LbProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.LbProvider
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput) LbVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.LbVersion
	}).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput) ManageSecurityGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *bool {
		if v == nil {
			return nil
		}
		return v.ManageSecurityGroups
	}).(pulumi.BoolPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput) MonitorDelay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.MonitorDelay
	}).(pulumi.StringPtrOutput)
}

// (int)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput) MonitorMaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *int {
		if v == nil {
			return nil
		}
		return v.MonitorMaxRetries
	}).(pulumi.IntPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput) MonitorTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.MonitorTimeout
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput) UseOctavia() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderLoadBalancer) *bool {
		if v == nil {
			return nil
		}
		return v.UseOctavia
	}).(pulumi.BoolPtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderMetadata struct {
	// (int)
	RequestTimeout *int `pulumi:"requestTimeout"`
	// (string)
	SearchOrder *string `pulumi:"searchOrder"`
}

// ClusterCloudProviderOpenstackCloudProviderMetadataInput is an input type that accepts ClusterCloudProviderOpenstackCloudProviderMetadataArgs and ClusterCloudProviderOpenstackCloudProviderMetadataOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudProviderMetadataInput` via:
//
//          ClusterCloudProviderOpenstackCloudProviderMetadataArgs{...}
type ClusterCloudProviderOpenstackCloudProviderMetadataInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudProviderMetadataOutput() ClusterCloudProviderOpenstackCloudProviderMetadataOutput
	ToClusterCloudProviderOpenstackCloudProviderMetadataOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudProviderMetadataOutput
}

type ClusterCloudProviderOpenstackCloudProviderMetadataArgs struct {
	// (int)
	RequestTimeout pulumi.IntPtrInput `pulumi:"requestTimeout"`
	// (string)
	SearchOrder pulumi.StringPtrInput `pulumi:"searchOrder"`
}

func (ClusterCloudProviderOpenstackCloudProviderMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudProviderMetadata)(nil)).Elem()
}

func (i ClusterCloudProviderOpenstackCloudProviderMetadataArgs) ToClusterCloudProviderOpenstackCloudProviderMetadataOutput() ClusterCloudProviderOpenstackCloudProviderMetadataOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderMetadataOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudProviderMetadataArgs) ToClusterCloudProviderOpenstackCloudProviderMetadataOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderMetadataOutput)
}

func (i ClusterCloudProviderOpenstackCloudProviderMetadataArgs) ToClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput() ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderMetadataPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudProviderMetadataArgs) ToClusterCloudProviderOpenstackCloudProviderMetadataPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderMetadataOutput).ToClusterCloudProviderOpenstackCloudProviderMetadataPtrOutputWithContext(ctx)
}

// ClusterCloudProviderOpenstackCloudProviderMetadataPtrInput is an input type that accepts ClusterCloudProviderOpenstackCloudProviderMetadataArgs, ClusterCloudProviderOpenstackCloudProviderMetadataPtr and ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudProviderMetadataPtrInput` via:
//
//          ClusterCloudProviderOpenstackCloudProviderMetadataArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderOpenstackCloudProviderMetadataPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput() ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput
	ToClusterCloudProviderOpenstackCloudProviderMetadataPtrOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput
}

type clusterCloudProviderOpenstackCloudProviderMetadataPtrType ClusterCloudProviderOpenstackCloudProviderMetadataArgs

func ClusterCloudProviderOpenstackCloudProviderMetadataPtr(v *ClusterCloudProviderOpenstackCloudProviderMetadataArgs) ClusterCloudProviderOpenstackCloudProviderMetadataPtrInput {
	return (*clusterCloudProviderOpenstackCloudProviderMetadataPtrType)(v)
}

func (*clusterCloudProviderOpenstackCloudProviderMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudProviderMetadata)(nil)).Elem()
}

func (i *clusterCloudProviderOpenstackCloudProviderMetadataPtrType) ToClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput() ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderMetadataPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderOpenstackCloudProviderMetadataPtrType) ToClusterCloudProviderOpenstackCloudProviderMetadataPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderMetadataOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudProviderMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudProviderMetadata)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudProviderMetadataOutput) ToClusterCloudProviderOpenstackCloudProviderMetadataOutput() ClusterCloudProviderOpenstackCloudProviderMetadataOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderMetadataOutput) ToClusterCloudProviderOpenstackCloudProviderMetadataOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderMetadataOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderMetadataOutput) ToClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput() ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput {
	return o.ToClusterCloudProviderOpenstackCloudProviderMetadataPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderOpenstackCloudProviderMetadataOutput) ToClusterCloudProviderOpenstackCloudProviderMetadataPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderMetadata) *ClusterCloudProviderOpenstackCloudProviderMetadata {
		return &v
	}).(ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput)
}

// (int)
func (o ClusterCloudProviderOpenstackCloudProviderMetadataOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderMetadata) *int { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderMetadataOutput) SearchOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderMetadata) *string { return v.SearchOrder }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudProviderMetadata)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput) ToClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput() ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput) ToClusterCloudProviderOpenstackCloudProviderMetadataPtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput) Elem() ClusterCloudProviderOpenstackCloudProviderMetadataOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderMetadata) ClusterCloudProviderOpenstackCloudProviderMetadata {
		return *v
	}).(ClusterCloudProviderOpenstackCloudProviderMetadataOutput)
}

// (int)
func (o ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderMetadata) *int {
		if v == nil {
			return nil
		}
		return v.RequestTimeout
	}).(pulumi.IntPtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput) SearchOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderMetadata) *string {
		if v == nil {
			return nil
		}
		return v.SearchOrder
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderRoute struct {
	// (string)
	RouterId *string `pulumi:"routerId"`
}

// ClusterCloudProviderOpenstackCloudProviderRouteInput is an input type that accepts ClusterCloudProviderOpenstackCloudProviderRouteArgs and ClusterCloudProviderOpenstackCloudProviderRouteOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudProviderRouteInput` via:
//
//          ClusterCloudProviderOpenstackCloudProviderRouteArgs{...}
type ClusterCloudProviderOpenstackCloudProviderRouteInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudProviderRouteOutput() ClusterCloudProviderOpenstackCloudProviderRouteOutput
	ToClusterCloudProviderOpenstackCloudProviderRouteOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudProviderRouteOutput
}

type ClusterCloudProviderOpenstackCloudProviderRouteArgs struct {
	// (string)
	RouterId pulumi.StringPtrInput `pulumi:"routerId"`
}

func (ClusterCloudProviderOpenstackCloudProviderRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudProviderRoute)(nil)).Elem()
}

func (i ClusterCloudProviderOpenstackCloudProviderRouteArgs) ToClusterCloudProviderOpenstackCloudProviderRouteOutput() ClusterCloudProviderOpenstackCloudProviderRouteOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderRouteOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudProviderRouteArgs) ToClusterCloudProviderOpenstackCloudProviderRouteOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderRouteOutput)
}

func (i ClusterCloudProviderOpenstackCloudProviderRouteArgs) ToClusterCloudProviderOpenstackCloudProviderRoutePtrOutput() ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderRoutePtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderOpenstackCloudProviderRouteArgs) ToClusterCloudProviderOpenstackCloudProviderRoutePtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderRouteOutput).ToClusterCloudProviderOpenstackCloudProviderRoutePtrOutputWithContext(ctx)
}

// ClusterCloudProviderOpenstackCloudProviderRoutePtrInput is an input type that accepts ClusterCloudProviderOpenstackCloudProviderRouteArgs, ClusterCloudProviderOpenstackCloudProviderRoutePtr and ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderOpenstackCloudProviderRoutePtrInput` via:
//
//          ClusterCloudProviderOpenstackCloudProviderRouteArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderOpenstackCloudProviderRoutePtrInput interface {
	pulumi.Input

	ToClusterCloudProviderOpenstackCloudProviderRoutePtrOutput() ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput
	ToClusterCloudProviderOpenstackCloudProviderRoutePtrOutputWithContext(context.Context) ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput
}

type clusterCloudProviderOpenstackCloudProviderRoutePtrType ClusterCloudProviderOpenstackCloudProviderRouteArgs

func ClusterCloudProviderOpenstackCloudProviderRoutePtr(v *ClusterCloudProviderOpenstackCloudProviderRouteArgs) ClusterCloudProviderOpenstackCloudProviderRoutePtrInput {
	return (*clusterCloudProviderOpenstackCloudProviderRoutePtrType)(v)
}

func (*clusterCloudProviderOpenstackCloudProviderRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudProviderRoute)(nil)).Elem()
}

func (i *clusterCloudProviderOpenstackCloudProviderRoutePtrType) ToClusterCloudProviderOpenstackCloudProviderRoutePtrOutput() ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput {
	return i.ToClusterCloudProviderOpenstackCloudProviderRoutePtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderOpenstackCloudProviderRoutePtrType) ToClusterCloudProviderOpenstackCloudProviderRoutePtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderRouteOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudProviderRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderOpenstackCloudProviderRoute)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudProviderRouteOutput) ToClusterCloudProviderOpenstackCloudProviderRouteOutput() ClusterCloudProviderOpenstackCloudProviderRouteOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderRouteOutput) ToClusterCloudProviderOpenstackCloudProviderRouteOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderRouteOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderRouteOutput) ToClusterCloudProviderOpenstackCloudProviderRoutePtrOutput() ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput {
	return o.ToClusterCloudProviderOpenstackCloudProviderRoutePtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderOpenstackCloudProviderRouteOutput) ToClusterCloudProviderOpenstackCloudProviderRoutePtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderRoute) *ClusterCloudProviderOpenstackCloudProviderRoute {
		return &v
	}).(ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderRouteOutput) RouterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderOpenstackCloudProviderRoute) *string { return v.RouterId }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderOpenstackCloudProviderRoute)(nil)).Elem()
}

func (o ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput) ToClusterCloudProviderOpenstackCloudProviderRoutePtrOutput() ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput) ToClusterCloudProviderOpenstackCloudProviderRoutePtrOutputWithContext(ctx context.Context) ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput {
	return o
}

func (o ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput) Elem() ClusterCloudProviderOpenstackCloudProviderRouteOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderRoute) ClusterCloudProviderOpenstackCloudProviderRoute {
		return *v
	}).(ClusterCloudProviderOpenstackCloudProviderRouteOutput)
}

// (string)
func (o ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput) RouterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderOpenstackCloudProviderRoute) *string {
		if v == nil {
			return nil
		}
		return v.RouterId
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderVsphereCloudConfig struct {
	// (list maxitems:1)
	Disk *ClusterCloudProviderVsphereCloudConfigDisk `pulumi:"disk"`
	// (list maxitems:1)
	Global *ClusterCloudProviderVsphereCloudConfigGlobal `pulumi:"global"`
	// (list maxitems:1)
	Network *ClusterCloudProviderVsphereCloudConfigNetwork `pulumi:"network"`
	// (List)
	VirtualCenters []ClusterCloudProviderVsphereCloudConfigVirtualCenter `pulumi:"virtualCenters"`
	// (list maxitems:1)
	Workspace ClusterCloudProviderVsphereCloudConfigWorkspace `pulumi:"workspace"`
}

// ClusterCloudProviderVsphereCloudConfigInput is an input type that accepts ClusterCloudProviderVsphereCloudConfigArgs and ClusterCloudProviderVsphereCloudConfigOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudConfigInput` via:
//
//          ClusterCloudProviderVsphereCloudConfigArgs{...}
type ClusterCloudProviderVsphereCloudConfigInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudConfigOutput() ClusterCloudProviderVsphereCloudConfigOutput
	ToClusterCloudProviderVsphereCloudConfigOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudConfigOutput
}

type ClusterCloudProviderVsphereCloudConfigArgs struct {
	// (list maxitems:1)
	Disk ClusterCloudProviderVsphereCloudConfigDiskPtrInput `pulumi:"disk"`
	// (list maxitems:1)
	Global ClusterCloudProviderVsphereCloudConfigGlobalPtrInput `pulumi:"global"`
	// (list maxitems:1)
	Network ClusterCloudProviderVsphereCloudConfigNetworkPtrInput `pulumi:"network"`
	// (List)
	VirtualCenters ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayInput `pulumi:"virtualCenters"`
	// (list maxitems:1)
	Workspace ClusterCloudProviderVsphereCloudConfigWorkspaceInput `pulumi:"workspace"`
}

func (ClusterCloudProviderVsphereCloudConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudConfig)(nil)).Elem()
}

func (i ClusterCloudProviderVsphereCloudConfigArgs) ToClusterCloudProviderVsphereCloudConfigOutput() ClusterCloudProviderVsphereCloudConfigOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudConfigArgs) ToClusterCloudProviderVsphereCloudConfigOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigOutput)
}

func (i ClusterCloudProviderVsphereCloudConfigArgs) ToClusterCloudProviderVsphereCloudConfigPtrOutput() ClusterCloudProviderVsphereCloudConfigPtrOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudConfigArgs) ToClusterCloudProviderVsphereCloudConfigPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigOutput).ToClusterCloudProviderVsphereCloudConfigPtrOutputWithContext(ctx)
}

// ClusterCloudProviderVsphereCloudConfigPtrInput is an input type that accepts ClusterCloudProviderVsphereCloudConfigArgs, ClusterCloudProviderVsphereCloudConfigPtr and ClusterCloudProviderVsphereCloudConfigPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudConfigPtrInput` via:
//
//          ClusterCloudProviderVsphereCloudConfigArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderVsphereCloudConfigPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudConfigPtrOutput() ClusterCloudProviderVsphereCloudConfigPtrOutput
	ToClusterCloudProviderVsphereCloudConfigPtrOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudConfigPtrOutput
}

type clusterCloudProviderVsphereCloudConfigPtrType ClusterCloudProviderVsphereCloudConfigArgs

func ClusterCloudProviderVsphereCloudConfigPtr(v *ClusterCloudProviderVsphereCloudConfigArgs) ClusterCloudProviderVsphereCloudConfigPtrInput {
	return (*clusterCloudProviderVsphereCloudConfigPtrType)(v)
}

func (*clusterCloudProviderVsphereCloudConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudConfig)(nil)).Elem()
}

func (i *clusterCloudProviderVsphereCloudConfigPtrType) ToClusterCloudProviderVsphereCloudConfigPtrOutput() ClusterCloudProviderVsphereCloudConfigPtrOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderVsphereCloudConfigPtrType) ToClusterCloudProviderVsphereCloudConfigPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigPtrOutput)
}

type ClusterCloudProviderVsphereCloudConfigOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudConfig)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudConfigOutput) ToClusterCloudProviderVsphereCloudConfigOutput() ClusterCloudProviderVsphereCloudConfigOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigOutput) ToClusterCloudProviderVsphereCloudConfigOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigOutput) ToClusterCloudProviderVsphereCloudConfigPtrOutput() ClusterCloudProviderVsphereCloudConfigPtrOutput {
	return o.ToClusterCloudProviderVsphereCloudConfigPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderVsphereCloudConfigOutput) ToClusterCloudProviderVsphereCloudConfigPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfig) *ClusterCloudProviderVsphereCloudConfig {
		return &v
	}).(ClusterCloudProviderVsphereCloudConfigPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderVsphereCloudConfigOutput) Disk() ClusterCloudProviderVsphereCloudConfigDiskPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfig) *ClusterCloudProviderVsphereCloudConfigDisk {
		return v.Disk
	}).(ClusterCloudProviderVsphereCloudConfigDiskPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderVsphereCloudConfigOutput) Global() ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfig) *ClusterCloudProviderVsphereCloudConfigGlobal {
		return v.Global
	}).(ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderVsphereCloudConfigOutput) Network() ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfig) *ClusterCloudProviderVsphereCloudConfigNetwork {
		return v.Network
	}).(ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput)
}

// (List)
func (o ClusterCloudProviderVsphereCloudConfigOutput) VirtualCenters() ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfig) []ClusterCloudProviderVsphereCloudConfigVirtualCenter {
		return v.VirtualCenters
	}).(ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderVsphereCloudConfigOutput) Workspace() ClusterCloudProviderVsphereCloudConfigWorkspaceOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfig) ClusterCloudProviderVsphereCloudConfigWorkspace {
		return v.Workspace
	}).(ClusterCloudProviderVsphereCloudConfigWorkspaceOutput)
}

type ClusterCloudProviderVsphereCloudConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudConfig)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudConfigPtrOutput) ToClusterCloudProviderVsphereCloudConfigPtrOutput() ClusterCloudProviderVsphereCloudConfigPtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigPtrOutput) ToClusterCloudProviderVsphereCloudConfigPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigPtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigPtrOutput) Elem() ClusterCloudProviderVsphereCloudConfigOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfig) ClusterCloudProviderVsphereCloudConfig { return *v }).(ClusterCloudProviderVsphereCloudConfigOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderVsphereCloudConfigPtrOutput) Disk() ClusterCloudProviderVsphereCloudConfigDiskPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfig) *ClusterCloudProviderVsphereCloudConfigDisk {
		if v == nil {
			return nil
		}
		return v.Disk
	}).(ClusterCloudProviderVsphereCloudConfigDiskPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderVsphereCloudConfigPtrOutput) Global() ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfig) *ClusterCloudProviderVsphereCloudConfigGlobal {
		if v == nil {
			return nil
		}
		return v.Global
	}).(ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderVsphereCloudConfigPtrOutput) Network() ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfig) *ClusterCloudProviderVsphereCloudConfigNetwork {
		if v == nil {
			return nil
		}
		return v.Network
	}).(ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput)
}

// (List)
func (o ClusterCloudProviderVsphereCloudConfigPtrOutput) VirtualCenters() ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfig) []ClusterCloudProviderVsphereCloudConfigVirtualCenter {
		if v == nil {
			return nil
		}
		return v.VirtualCenters
	}).(ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderVsphereCloudConfigPtrOutput) Workspace() ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfig) *ClusterCloudProviderVsphereCloudConfigWorkspace {
		if v == nil {
			return nil
		}
		return &v.Workspace
	}).(ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput)
}

type ClusterCloudProviderVsphereCloudConfigDisk struct {
	// (string)
	ScsiControllerType *string `pulumi:"scsiControllerType"`
}

// ClusterCloudProviderVsphereCloudConfigDiskInput is an input type that accepts ClusterCloudProviderVsphereCloudConfigDiskArgs and ClusterCloudProviderVsphereCloudConfigDiskOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudConfigDiskInput` via:
//
//          ClusterCloudProviderVsphereCloudConfigDiskArgs{...}
type ClusterCloudProviderVsphereCloudConfigDiskInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudConfigDiskOutput() ClusterCloudProviderVsphereCloudConfigDiskOutput
	ToClusterCloudProviderVsphereCloudConfigDiskOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudConfigDiskOutput
}

type ClusterCloudProviderVsphereCloudConfigDiskArgs struct {
	// (string)
	ScsiControllerType pulumi.StringPtrInput `pulumi:"scsiControllerType"`
}

func (ClusterCloudProviderVsphereCloudConfigDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudConfigDisk)(nil)).Elem()
}

func (i ClusterCloudProviderVsphereCloudConfigDiskArgs) ToClusterCloudProviderVsphereCloudConfigDiskOutput() ClusterCloudProviderVsphereCloudConfigDiskOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigDiskOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudConfigDiskArgs) ToClusterCloudProviderVsphereCloudConfigDiskOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigDiskOutput)
}

func (i ClusterCloudProviderVsphereCloudConfigDiskArgs) ToClusterCloudProviderVsphereCloudConfigDiskPtrOutput() ClusterCloudProviderVsphereCloudConfigDiskPtrOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigDiskPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudConfigDiskArgs) ToClusterCloudProviderVsphereCloudConfigDiskPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigDiskOutput).ToClusterCloudProviderVsphereCloudConfigDiskPtrOutputWithContext(ctx)
}

// ClusterCloudProviderVsphereCloudConfigDiskPtrInput is an input type that accepts ClusterCloudProviderVsphereCloudConfigDiskArgs, ClusterCloudProviderVsphereCloudConfigDiskPtr and ClusterCloudProviderVsphereCloudConfigDiskPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudConfigDiskPtrInput` via:
//
//          ClusterCloudProviderVsphereCloudConfigDiskArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderVsphereCloudConfigDiskPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudConfigDiskPtrOutput() ClusterCloudProviderVsphereCloudConfigDiskPtrOutput
	ToClusterCloudProviderVsphereCloudConfigDiskPtrOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudConfigDiskPtrOutput
}

type clusterCloudProviderVsphereCloudConfigDiskPtrType ClusterCloudProviderVsphereCloudConfigDiskArgs

func ClusterCloudProviderVsphereCloudConfigDiskPtr(v *ClusterCloudProviderVsphereCloudConfigDiskArgs) ClusterCloudProviderVsphereCloudConfigDiskPtrInput {
	return (*clusterCloudProviderVsphereCloudConfigDiskPtrType)(v)
}

func (*clusterCloudProviderVsphereCloudConfigDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudConfigDisk)(nil)).Elem()
}

func (i *clusterCloudProviderVsphereCloudConfigDiskPtrType) ToClusterCloudProviderVsphereCloudConfigDiskPtrOutput() ClusterCloudProviderVsphereCloudConfigDiskPtrOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigDiskPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderVsphereCloudConfigDiskPtrType) ToClusterCloudProviderVsphereCloudConfigDiskPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigDiskPtrOutput)
}

type ClusterCloudProviderVsphereCloudConfigDiskOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudConfigDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudConfigDisk)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudConfigDiskOutput) ToClusterCloudProviderVsphereCloudConfigDiskOutput() ClusterCloudProviderVsphereCloudConfigDiskOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigDiskOutput) ToClusterCloudProviderVsphereCloudConfigDiskOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigDiskOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigDiskOutput) ToClusterCloudProviderVsphereCloudConfigDiskPtrOutput() ClusterCloudProviderVsphereCloudConfigDiskPtrOutput {
	return o.ToClusterCloudProviderVsphereCloudConfigDiskPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderVsphereCloudConfigDiskOutput) ToClusterCloudProviderVsphereCloudConfigDiskPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigDiskPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigDisk) *ClusterCloudProviderVsphereCloudConfigDisk {
		return &v
	}).(ClusterCloudProviderVsphereCloudConfigDiskPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigDiskOutput) ScsiControllerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigDisk) *string { return v.ScsiControllerType }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderVsphereCloudConfigDiskPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudConfigDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudConfigDisk)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudConfigDiskPtrOutput) ToClusterCloudProviderVsphereCloudConfigDiskPtrOutput() ClusterCloudProviderVsphereCloudConfigDiskPtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigDiskPtrOutput) ToClusterCloudProviderVsphereCloudConfigDiskPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigDiskPtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigDiskPtrOutput) Elem() ClusterCloudProviderVsphereCloudConfigDiskOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigDisk) ClusterCloudProviderVsphereCloudConfigDisk {
		return *v
	}).(ClusterCloudProviderVsphereCloudConfigDiskOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigDiskPtrOutput) ScsiControllerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigDisk) *string {
		if v == nil {
			return nil
		}
		return v.ScsiControllerType
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderVsphereCloudConfigGlobal struct {
	// (string)
	Datacenter *string `pulumi:"datacenter"`
	// (string)
	Datacenters *string `pulumi:"datacenters"`
	// (string)
	Datastore *string `pulumi:"datastore"`
	// (bool)
	InsecureFlag *bool `pulumi:"insecureFlag"`
	// Registry password (string)
	Password *string `pulumi:"password"`
	// Port used for SSH communication (string)
	Port *string `pulumi:"port"`
	// (int)
	SoapRoundtripCount *int `pulumi:"soapRoundtripCount"`
	// Registry user (string)
	User *string `pulumi:"user"`
	// (string)
	VmName *string `pulumi:"vmName"`
	// (string)
	VmUuid *string `pulumi:"vmUuid"`
	// (string)
	WorkingDir *string `pulumi:"workingDir"`
}

// ClusterCloudProviderVsphereCloudConfigGlobalInput is an input type that accepts ClusterCloudProviderVsphereCloudConfigGlobalArgs and ClusterCloudProviderVsphereCloudConfigGlobalOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudConfigGlobalInput` via:
//
//          ClusterCloudProviderVsphereCloudConfigGlobalArgs{...}
type ClusterCloudProviderVsphereCloudConfigGlobalInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudConfigGlobalOutput() ClusterCloudProviderVsphereCloudConfigGlobalOutput
	ToClusterCloudProviderVsphereCloudConfigGlobalOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudConfigGlobalOutput
}

type ClusterCloudProviderVsphereCloudConfigGlobalArgs struct {
	// (string)
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	// (string)
	Datacenters pulumi.StringPtrInput `pulumi:"datacenters"`
	// (string)
	Datastore pulumi.StringPtrInput `pulumi:"datastore"`
	// (bool)
	InsecureFlag pulumi.BoolPtrInput `pulumi:"insecureFlag"`
	// Registry password (string)
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port used for SSH communication (string)
	Port pulumi.StringPtrInput `pulumi:"port"`
	// (int)
	SoapRoundtripCount pulumi.IntPtrInput `pulumi:"soapRoundtripCount"`
	// Registry user (string)
	User pulumi.StringPtrInput `pulumi:"user"`
	// (string)
	VmName pulumi.StringPtrInput `pulumi:"vmName"`
	// (string)
	VmUuid pulumi.StringPtrInput `pulumi:"vmUuid"`
	// (string)
	WorkingDir pulumi.StringPtrInput `pulumi:"workingDir"`
}

func (ClusterCloudProviderVsphereCloudConfigGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudConfigGlobal)(nil)).Elem()
}

func (i ClusterCloudProviderVsphereCloudConfigGlobalArgs) ToClusterCloudProviderVsphereCloudConfigGlobalOutput() ClusterCloudProviderVsphereCloudConfigGlobalOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigGlobalOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudConfigGlobalArgs) ToClusterCloudProviderVsphereCloudConfigGlobalOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigGlobalOutput)
}

func (i ClusterCloudProviderVsphereCloudConfigGlobalArgs) ToClusterCloudProviderVsphereCloudConfigGlobalPtrOutput() ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigGlobalPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudConfigGlobalArgs) ToClusterCloudProviderVsphereCloudConfigGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigGlobalOutput).ToClusterCloudProviderVsphereCloudConfigGlobalPtrOutputWithContext(ctx)
}

// ClusterCloudProviderVsphereCloudConfigGlobalPtrInput is an input type that accepts ClusterCloudProviderVsphereCloudConfigGlobalArgs, ClusterCloudProviderVsphereCloudConfigGlobalPtr and ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudConfigGlobalPtrInput` via:
//
//          ClusterCloudProviderVsphereCloudConfigGlobalArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderVsphereCloudConfigGlobalPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudConfigGlobalPtrOutput() ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput
	ToClusterCloudProviderVsphereCloudConfigGlobalPtrOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput
}

type clusterCloudProviderVsphereCloudConfigGlobalPtrType ClusterCloudProviderVsphereCloudConfigGlobalArgs

func ClusterCloudProviderVsphereCloudConfigGlobalPtr(v *ClusterCloudProviderVsphereCloudConfigGlobalArgs) ClusterCloudProviderVsphereCloudConfigGlobalPtrInput {
	return (*clusterCloudProviderVsphereCloudConfigGlobalPtrType)(v)
}

func (*clusterCloudProviderVsphereCloudConfigGlobalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudConfigGlobal)(nil)).Elem()
}

func (i *clusterCloudProviderVsphereCloudConfigGlobalPtrType) ToClusterCloudProviderVsphereCloudConfigGlobalPtrOutput() ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigGlobalPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderVsphereCloudConfigGlobalPtrType) ToClusterCloudProviderVsphereCloudConfigGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput)
}

type ClusterCloudProviderVsphereCloudConfigGlobalOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudConfigGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudConfigGlobal)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudConfigGlobalOutput) ToClusterCloudProviderVsphereCloudConfigGlobalOutput() ClusterCloudProviderVsphereCloudConfigGlobalOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigGlobalOutput) ToClusterCloudProviderVsphereCloudConfigGlobalOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigGlobalOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigGlobalOutput) ToClusterCloudProviderVsphereCloudConfigGlobalPtrOutput() ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput {
	return o.ToClusterCloudProviderVsphereCloudConfigGlobalPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderVsphereCloudConfigGlobalOutput) ToClusterCloudProviderVsphereCloudConfigGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigGlobal) *ClusterCloudProviderVsphereCloudConfigGlobal {
		return &v
	}).(ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigGlobal) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalOutput) Datacenters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigGlobal) *string { return v.Datacenters }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalOutput) Datastore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigGlobal) *string { return v.Datastore }).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderVsphereCloudConfigGlobalOutput) InsecureFlag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigGlobal) *bool { return v.InsecureFlag }).(pulumi.BoolPtrOutput)
}

// Registry password (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigGlobal) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port used for SSH communication (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigGlobal) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// (int)
func (o ClusterCloudProviderVsphereCloudConfigGlobalOutput) SoapRoundtripCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigGlobal) *int { return v.SoapRoundtripCount }).(pulumi.IntPtrOutput)
}

// Registry user (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigGlobal) *string { return v.User }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalOutput) VmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigGlobal) *string { return v.VmName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalOutput) VmUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigGlobal) *string { return v.VmUuid }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalOutput) WorkingDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigGlobal) *string { return v.WorkingDir }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudConfigGlobal)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput) ToClusterCloudProviderVsphereCloudConfigGlobalPtrOutput() ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput) ToClusterCloudProviderVsphereCloudConfigGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput) Elem() ClusterCloudProviderVsphereCloudConfigGlobalOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigGlobal) ClusterCloudProviderVsphereCloudConfigGlobal {
		return *v
	}).(ClusterCloudProviderVsphereCloudConfigGlobalOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Datacenter
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput) Datacenters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Datacenters
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput) Datastore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Datastore
	}).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput) InsecureFlag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigGlobal) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureFlag
	}).(pulumi.BoolPtrOutput)
}

// Registry password (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Port used for SSH communication (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// (int)
func (o ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput) SoapRoundtripCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigGlobal) *int {
		if v == nil {
			return nil
		}
		return v.SoapRoundtripCount
	}).(pulumi.IntPtrOutput)
}

// Registry user (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput) VmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.VmName
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput) VmUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.VmUuid
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput) WorkingDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigGlobal) *string {
		if v == nil {
			return nil
		}
		return v.WorkingDir
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderVsphereCloudConfigNetwork struct {
	// (string)
	PublicNetwork *string `pulumi:"publicNetwork"`
}

// ClusterCloudProviderVsphereCloudConfigNetworkInput is an input type that accepts ClusterCloudProviderVsphereCloudConfigNetworkArgs and ClusterCloudProviderVsphereCloudConfigNetworkOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudConfigNetworkInput` via:
//
//          ClusterCloudProviderVsphereCloudConfigNetworkArgs{...}
type ClusterCloudProviderVsphereCloudConfigNetworkInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudConfigNetworkOutput() ClusterCloudProviderVsphereCloudConfigNetworkOutput
	ToClusterCloudProviderVsphereCloudConfigNetworkOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudConfigNetworkOutput
}

type ClusterCloudProviderVsphereCloudConfigNetworkArgs struct {
	// (string)
	PublicNetwork pulumi.StringPtrInput `pulumi:"publicNetwork"`
}

func (ClusterCloudProviderVsphereCloudConfigNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudConfigNetwork)(nil)).Elem()
}

func (i ClusterCloudProviderVsphereCloudConfigNetworkArgs) ToClusterCloudProviderVsphereCloudConfigNetworkOutput() ClusterCloudProviderVsphereCloudConfigNetworkOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigNetworkOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudConfigNetworkArgs) ToClusterCloudProviderVsphereCloudConfigNetworkOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigNetworkOutput)
}

func (i ClusterCloudProviderVsphereCloudConfigNetworkArgs) ToClusterCloudProviderVsphereCloudConfigNetworkPtrOutput() ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigNetworkPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudConfigNetworkArgs) ToClusterCloudProviderVsphereCloudConfigNetworkPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigNetworkOutput).ToClusterCloudProviderVsphereCloudConfigNetworkPtrOutputWithContext(ctx)
}

// ClusterCloudProviderVsphereCloudConfigNetworkPtrInput is an input type that accepts ClusterCloudProviderVsphereCloudConfigNetworkArgs, ClusterCloudProviderVsphereCloudConfigNetworkPtr and ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudConfigNetworkPtrInput` via:
//
//          ClusterCloudProviderVsphereCloudConfigNetworkArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderVsphereCloudConfigNetworkPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudConfigNetworkPtrOutput() ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput
	ToClusterCloudProviderVsphereCloudConfigNetworkPtrOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput
}

type clusterCloudProviderVsphereCloudConfigNetworkPtrType ClusterCloudProviderVsphereCloudConfigNetworkArgs

func ClusterCloudProviderVsphereCloudConfigNetworkPtr(v *ClusterCloudProviderVsphereCloudConfigNetworkArgs) ClusterCloudProviderVsphereCloudConfigNetworkPtrInput {
	return (*clusterCloudProviderVsphereCloudConfigNetworkPtrType)(v)
}

func (*clusterCloudProviderVsphereCloudConfigNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudConfigNetwork)(nil)).Elem()
}

func (i *clusterCloudProviderVsphereCloudConfigNetworkPtrType) ToClusterCloudProviderVsphereCloudConfigNetworkPtrOutput() ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigNetworkPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderVsphereCloudConfigNetworkPtrType) ToClusterCloudProviderVsphereCloudConfigNetworkPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput)
}

type ClusterCloudProviderVsphereCloudConfigNetworkOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudConfigNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudConfigNetwork)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudConfigNetworkOutput) ToClusterCloudProviderVsphereCloudConfigNetworkOutput() ClusterCloudProviderVsphereCloudConfigNetworkOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigNetworkOutput) ToClusterCloudProviderVsphereCloudConfigNetworkOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigNetworkOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigNetworkOutput) ToClusterCloudProviderVsphereCloudConfigNetworkPtrOutput() ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput {
	return o.ToClusterCloudProviderVsphereCloudConfigNetworkPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderVsphereCloudConfigNetworkOutput) ToClusterCloudProviderVsphereCloudConfigNetworkPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigNetwork) *ClusterCloudProviderVsphereCloudConfigNetwork {
		return &v
	}).(ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigNetworkOutput) PublicNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigNetwork) *string { return v.PublicNetwork }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudConfigNetwork)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput) ToClusterCloudProviderVsphereCloudConfigNetworkPtrOutput() ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput) ToClusterCloudProviderVsphereCloudConfigNetworkPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput) Elem() ClusterCloudProviderVsphereCloudConfigNetworkOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigNetwork) ClusterCloudProviderVsphereCloudConfigNetwork {
		return *v
	}).(ClusterCloudProviderVsphereCloudConfigNetworkOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput) PublicNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigNetwork) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetwork
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderVsphereCloudConfigVirtualCenter struct {
	// (string)
	Datacenters string `pulumi:"datacenters"`
	// Name of virtualcenter config for Vsphere Cloud Provider config (string)
	Name string `pulumi:"name"`
	// Registry password (string)
	Password string `pulumi:"password"`
	// Port used for SSH communication (string)
	Port *string `pulumi:"port"`
	// (int)
	SoapRoundtripCount *int `pulumi:"soapRoundtripCount"`
	// Registry user (string)
	User string `pulumi:"user"`
}

// ClusterCloudProviderVsphereCloudConfigVirtualCenterInput is an input type that accepts ClusterCloudProviderVsphereCloudConfigVirtualCenterArgs and ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudConfigVirtualCenterInput` via:
//
//          ClusterCloudProviderVsphereCloudConfigVirtualCenterArgs{...}
type ClusterCloudProviderVsphereCloudConfigVirtualCenterInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudConfigVirtualCenterOutput() ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput
	ToClusterCloudProviderVsphereCloudConfigVirtualCenterOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput
}

type ClusterCloudProviderVsphereCloudConfigVirtualCenterArgs struct {
	// (string)
	Datacenters pulumi.StringInput `pulumi:"datacenters"`
	// Name of virtualcenter config for Vsphere Cloud Provider config (string)
	Name pulumi.StringInput `pulumi:"name"`
	// Registry password (string)
	Password pulumi.StringInput `pulumi:"password"`
	// Port used for SSH communication (string)
	Port pulumi.StringPtrInput `pulumi:"port"`
	// (int)
	SoapRoundtripCount pulumi.IntPtrInput `pulumi:"soapRoundtripCount"`
	// Registry user (string)
	User pulumi.StringInput `pulumi:"user"`
}

func (ClusterCloudProviderVsphereCloudConfigVirtualCenterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudConfigVirtualCenter)(nil)).Elem()
}

func (i ClusterCloudProviderVsphereCloudConfigVirtualCenterArgs) ToClusterCloudProviderVsphereCloudConfigVirtualCenterOutput() ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigVirtualCenterOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudConfigVirtualCenterArgs) ToClusterCloudProviderVsphereCloudConfigVirtualCenterOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput)
}

// ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayInput is an input type that accepts ClusterCloudProviderVsphereCloudConfigVirtualCenterArray and ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayInput` via:
//
//          ClusterCloudProviderVsphereCloudConfigVirtualCenterArray{ ClusterCloudProviderVsphereCloudConfigVirtualCenterArgs{...} }
type ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput() ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput
	ToClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput
}

type ClusterCloudProviderVsphereCloudConfigVirtualCenterArray []ClusterCloudProviderVsphereCloudConfigVirtualCenterInput

func (ClusterCloudProviderVsphereCloudConfigVirtualCenterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCloudProviderVsphereCloudConfigVirtualCenter)(nil)).Elem()
}

func (i ClusterCloudProviderVsphereCloudConfigVirtualCenterArray) ToClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput() ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudConfigVirtualCenterArray) ToClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput)
}

type ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudConfigVirtualCenter)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput) ToClusterCloudProviderVsphereCloudConfigVirtualCenterOutput() ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput) ToClusterCloudProviderVsphereCloudConfigVirtualCenterOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput {
	return o
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput) Datacenters() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigVirtualCenter) string { return v.Datacenters }).(pulumi.StringOutput)
}

// Name of virtualcenter config for Vsphere Cloud Provider config (string)
func (o ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigVirtualCenter) string { return v.Name }).(pulumi.StringOutput)
}

// Registry password (string)
func (o ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigVirtualCenter) string { return v.Password }).(pulumi.StringOutput)
}

// Port used for SSH communication (string)
func (o ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigVirtualCenter) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// (int)
func (o ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput) SoapRoundtripCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigVirtualCenter) *int { return v.SoapRoundtripCount }).(pulumi.IntPtrOutput)
}

// Registry user (string)
func (o ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigVirtualCenter) string { return v.User }).(pulumi.StringOutput)
}

type ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCloudProviderVsphereCloudConfigVirtualCenter)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput) ToClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput() ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput) ToClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput) Index(i pulumi.IntInput) ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCloudProviderVsphereCloudConfigVirtualCenter {
		return vs[0].([]ClusterCloudProviderVsphereCloudConfigVirtualCenter)[vs[1].(int)]
	}).(ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput)
}

type ClusterCloudProviderVsphereCloudConfigWorkspace struct {
	// (string)
	Datacenter string `pulumi:"datacenter"`
	// (string)
	DefaultDatastore *string `pulumi:"defaultDatastore"`
	// Folder for S3 service. Available from Rancher v2.2.7 (string)
	Folder *string `pulumi:"folder"`
	// (string)
	ResourcepoolPath *string `pulumi:"resourcepoolPath"`
	// (string)
	Server string `pulumi:"server"`
}

// ClusterCloudProviderVsphereCloudConfigWorkspaceInput is an input type that accepts ClusterCloudProviderVsphereCloudConfigWorkspaceArgs and ClusterCloudProviderVsphereCloudConfigWorkspaceOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudConfigWorkspaceInput` via:
//
//          ClusterCloudProviderVsphereCloudConfigWorkspaceArgs{...}
type ClusterCloudProviderVsphereCloudConfigWorkspaceInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudConfigWorkspaceOutput() ClusterCloudProviderVsphereCloudConfigWorkspaceOutput
	ToClusterCloudProviderVsphereCloudConfigWorkspaceOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudConfigWorkspaceOutput
}

type ClusterCloudProviderVsphereCloudConfigWorkspaceArgs struct {
	// (string)
	Datacenter pulumi.StringInput `pulumi:"datacenter"`
	// (string)
	DefaultDatastore pulumi.StringPtrInput `pulumi:"defaultDatastore"`
	// Folder for S3 service. Available from Rancher v2.2.7 (string)
	Folder pulumi.StringPtrInput `pulumi:"folder"`
	// (string)
	ResourcepoolPath pulumi.StringPtrInput `pulumi:"resourcepoolPath"`
	// (string)
	Server pulumi.StringInput `pulumi:"server"`
}

func (ClusterCloudProviderVsphereCloudConfigWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudConfigWorkspace)(nil)).Elem()
}

func (i ClusterCloudProviderVsphereCloudConfigWorkspaceArgs) ToClusterCloudProviderVsphereCloudConfigWorkspaceOutput() ClusterCloudProviderVsphereCloudConfigWorkspaceOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigWorkspaceOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudConfigWorkspaceArgs) ToClusterCloudProviderVsphereCloudConfigWorkspaceOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigWorkspaceOutput)
}

func (i ClusterCloudProviderVsphereCloudConfigWorkspaceArgs) ToClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput() ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigWorkspacePtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudConfigWorkspaceArgs) ToClusterCloudProviderVsphereCloudConfigWorkspacePtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigWorkspaceOutput).ToClusterCloudProviderVsphereCloudConfigWorkspacePtrOutputWithContext(ctx)
}

// ClusterCloudProviderVsphereCloudConfigWorkspacePtrInput is an input type that accepts ClusterCloudProviderVsphereCloudConfigWorkspaceArgs, ClusterCloudProviderVsphereCloudConfigWorkspacePtr and ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudConfigWorkspacePtrInput` via:
//
//          ClusterCloudProviderVsphereCloudConfigWorkspaceArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderVsphereCloudConfigWorkspacePtrInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput() ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput
	ToClusterCloudProviderVsphereCloudConfigWorkspacePtrOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput
}

type clusterCloudProviderVsphereCloudConfigWorkspacePtrType ClusterCloudProviderVsphereCloudConfigWorkspaceArgs

func ClusterCloudProviderVsphereCloudConfigWorkspacePtr(v *ClusterCloudProviderVsphereCloudConfigWorkspaceArgs) ClusterCloudProviderVsphereCloudConfigWorkspacePtrInput {
	return (*clusterCloudProviderVsphereCloudConfigWorkspacePtrType)(v)
}

func (*clusterCloudProviderVsphereCloudConfigWorkspacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudConfigWorkspace)(nil)).Elem()
}

func (i *clusterCloudProviderVsphereCloudConfigWorkspacePtrType) ToClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput() ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput {
	return i.ToClusterCloudProviderVsphereCloudConfigWorkspacePtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderVsphereCloudConfigWorkspacePtrType) ToClusterCloudProviderVsphereCloudConfigWorkspacePtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput)
}

type ClusterCloudProviderVsphereCloudConfigWorkspaceOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudConfigWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudConfigWorkspace)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudConfigWorkspaceOutput) ToClusterCloudProviderVsphereCloudConfigWorkspaceOutput() ClusterCloudProviderVsphereCloudConfigWorkspaceOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigWorkspaceOutput) ToClusterCloudProviderVsphereCloudConfigWorkspaceOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigWorkspaceOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigWorkspaceOutput) ToClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput() ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput {
	return o.ToClusterCloudProviderVsphereCloudConfigWorkspacePtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderVsphereCloudConfigWorkspaceOutput) ToClusterCloudProviderVsphereCloudConfigWorkspacePtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigWorkspace) *ClusterCloudProviderVsphereCloudConfigWorkspace {
		return &v
	}).(ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigWorkspaceOutput) Datacenter() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigWorkspace) string { return v.Datacenter }).(pulumi.StringOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigWorkspaceOutput) DefaultDatastore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigWorkspace) *string { return v.DefaultDatastore }).(pulumi.StringPtrOutput)
}

// Folder for S3 service. Available from Rancher v2.2.7 (string)
func (o ClusterCloudProviderVsphereCloudConfigWorkspaceOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigWorkspace) *string { return v.Folder }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigWorkspaceOutput) ResourcepoolPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigWorkspace) *string { return v.ResourcepoolPath }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigWorkspaceOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudConfigWorkspace) string { return v.Server }).(pulumi.StringOutput)
}

type ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudConfigWorkspace)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput) ToClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput() ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput) ToClusterCloudProviderVsphereCloudConfigWorkspacePtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput) Elem() ClusterCloudProviderVsphereCloudConfigWorkspaceOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigWorkspace) ClusterCloudProviderVsphereCloudConfigWorkspace {
		return *v
	}).(ClusterCloudProviderVsphereCloudConfigWorkspaceOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigWorkspace) *string {
		if v == nil {
			return nil
		}
		return &v.Datacenter
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput) DefaultDatastore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigWorkspace) *string {
		if v == nil {
			return nil
		}
		return v.DefaultDatastore
	}).(pulumi.StringPtrOutput)
}

// Folder for S3 service. Available from Rancher v2.2.7 (string)
func (o ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigWorkspace) *string {
		if v == nil {
			return nil
		}
		return v.Folder
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput) ResourcepoolPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigWorkspace) *string {
		if v == nil {
			return nil
		}
		return v.ResourcepoolPath
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudConfigWorkspace) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderVsphereCloudProvider struct {
	// (list maxitems:1)
	Disk *ClusterCloudProviderVsphereCloudProviderDisk `pulumi:"disk"`
	// (list maxitems:1)
	Global *ClusterCloudProviderVsphereCloudProviderGlobal `pulumi:"global"`
	// (list maxitems:1)
	Network *ClusterCloudProviderVsphereCloudProviderNetwork `pulumi:"network"`
	// (List)
	VirtualCenters []ClusterCloudProviderVsphereCloudProviderVirtualCenter `pulumi:"virtualCenters"`
	// (list maxitems:1)
	Workspace ClusterCloudProviderVsphereCloudProviderWorkspace `pulumi:"workspace"`
}

// ClusterCloudProviderVsphereCloudProviderInput is an input type that accepts ClusterCloudProviderVsphereCloudProviderArgs and ClusterCloudProviderVsphereCloudProviderOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudProviderInput` via:
//
//          ClusterCloudProviderVsphereCloudProviderArgs{...}
type ClusterCloudProviderVsphereCloudProviderInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudProviderOutput() ClusterCloudProviderVsphereCloudProviderOutput
	ToClusterCloudProviderVsphereCloudProviderOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudProviderOutput
}

type ClusterCloudProviderVsphereCloudProviderArgs struct {
	// (list maxitems:1)
	Disk ClusterCloudProviderVsphereCloudProviderDiskPtrInput `pulumi:"disk"`
	// (list maxitems:1)
	Global ClusterCloudProviderVsphereCloudProviderGlobalPtrInput `pulumi:"global"`
	// (list maxitems:1)
	Network ClusterCloudProviderVsphereCloudProviderNetworkPtrInput `pulumi:"network"`
	// (List)
	VirtualCenters ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayInput `pulumi:"virtualCenters"`
	// (list maxitems:1)
	Workspace ClusterCloudProviderVsphereCloudProviderWorkspaceInput `pulumi:"workspace"`
}

func (ClusterCloudProviderVsphereCloudProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudProvider)(nil)).Elem()
}

func (i ClusterCloudProviderVsphereCloudProviderArgs) ToClusterCloudProviderVsphereCloudProviderOutput() ClusterCloudProviderVsphereCloudProviderOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudProviderArgs) ToClusterCloudProviderVsphereCloudProviderOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderOutput)
}

func (i ClusterCloudProviderVsphereCloudProviderArgs) ToClusterCloudProviderVsphereCloudProviderPtrOutput() ClusterCloudProviderVsphereCloudProviderPtrOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudProviderArgs) ToClusterCloudProviderVsphereCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderOutput).ToClusterCloudProviderVsphereCloudProviderPtrOutputWithContext(ctx)
}

// ClusterCloudProviderVsphereCloudProviderPtrInput is an input type that accepts ClusterCloudProviderVsphereCloudProviderArgs, ClusterCloudProviderVsphereCloudProviderPtr and ClusterCloudProviderVsphereCloudProviderPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudProviderPtrInput` via:
//
//          ClusterCloudProviderVsphereCloudProviderArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderVsphereCloudProviderPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudProviderPtrOutput() ClusterCloudProviderVsphereCloudProviderPtrOutput
	ToClusterCloudProviderVsphereCloudProviderPtrOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudProviderPtrOutput
}

type clusterCloudProviderVsphereCloudProviderPtrType ClusterCloudProviderVsphereCloudProviderArgs

func ClusterCloudProviderVsphereCloudProviderPtr(v *ClusterCloudProviderVsphereCloudProviderArgs) ClusterCloudProviderVsphereCloudProviderPtrInput {
	return (*clusterCloudProviderVsphereCloudProviderPtrType)(v)
}

func (*clusterCloudProviderVsphereCloudProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudProvider)(nil)).Elem()
}

func (i *clusterCloudProviderVsphereCloudProviderPtrType) ToClusterCloudProviderVsphereCloudProviderPtrOutput() ClusterCloudProviderVsphereCloudProviderPtrOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderVsphereCloudProviderPtrType) ToClusterCloudProviderVsphereCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderPtrOutput)
}

type ClusterCloudProviderVsphereCloudProviderOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudProvider)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudProviderOutput) ToClusterCloudProviderVsphereCloudProviderOutput() ClusterCloudProviderVsphereCloudProviderOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderOutput) ToClusterCloudProviderVsphereCloudProviderOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderOutput) ToClusterCloudProviderVsphereCloudProviderPtrOutput() ClusterCloudProviderVsphereCloudProviderPtrOutput {
	return o.ToClusterCloudProviderVsphereCloudProviderPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderVsphereCloudProviderOutput) ToClusterCloudProviderVsphereCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProvider) *ClusterCloudProviderVsphereCloudProvider {
		return &v
	}).(ClusterCloudProviderVsphereCloudProviderPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderVsphereCloudProviderOutput) Disk() ClusterCloudProviderVsphereCloudProviderDiskPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProvider) *ClusterCloudProviderVsphereCloudProviderDisk {
		return v.Disk
	}).(ClusterCloudProviderVsphereCloudProviderDiskPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderVsphereCloudProviderOutput) Global() ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProvider) *ClusterCloudProviderVsphereCloudProviderGlobal {
		return v.Global
	}).(ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderVsphereCloudProviderOutput) Network() ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProvider) *ClusterCloudProviderVsphereCloudProviderNetwork {
		return v.Network
	}).(ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput)
}

// (List)
func (o ClusterCloudProviderVsphereCloudProviderOutput) VirtualCenters() ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProvider) []ClusterCloudProviderVsphereCloudProviderVirtualCenter {
		return v.VirtualCenters
	}).(ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderVsphereCloudProviderOutput) Workspace() ClusterCloudProviderVsphereCloudProviderWorkspaceOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProvider) ClusterCloudProviderVsphereCloudProviderWorkspace {
		return v.Workspace
	}).(ClusterCloudProviderVsphereCloudProviderWorkspaceOutput)
}

type ClusterCloudProviderVsphereCloudProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudProvider)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudProviderPtrOutput) ToClusterCloudProviderVsphereCloudProviderPtrOutput() ClusterCloudProviderVsphereCloudProviderPtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderPtrOutput) ToClusterCloudProviderVsphereCloudProviderPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderPtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderPtrOutput) Elem() ClusterCloudProviderVsphereCloudProviderOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProvider) ClusterCloudProviderVsphereCloudProvider { return *v }).(ClusterCloudProviderVsphereCloudProviderOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderVsphereCloudProviderPtrOutput) Disk() ClusterCloudProviderVsphereCloudProviderDiskPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProvider) *ClusterCloudProviderVsphereCloudProviderDisk {
		if v == nil {
			return nil
		}
		return v.Disk
	}).(ClusterCloudProviderVsphereCloudProviderDiskPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderVsphereCloudProviderPtrOutput) Global() ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProvider) *ClusterCloudProviderVsphereCloudProviderGlobal {
		if v == nil {
			return nil
		}
		return v.Global
	}).(ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderVsphereCloudProviderPtrOutput) Network() ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProvider) *ClusterCloudProviderVsphereCloudProviderNetwork {
		if v == nil {
			return nil
		}
		return v.Network
	}).(ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput)
}

// (List)
func (o ClusterCloudProviderVsphereCloudProviderPtrOutput) VirtualCenters() ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProvider) []ClusterCloudProviderVsphereCloudProviderVirtualCenter {
		if v == nil {
			return nil
		}
		return v.VirtualCenters
	}).(ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput)
}

// (list maxitems:1)
func (o ClusterCloudProviderVsphereCloudProviderPtrOutput) Workspace() ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProvider) *ClusterCloudProviderVsphereCloudProviderWorkspace {
		if v == nil {
			return nil
		}
		return &v.Workspace
	}).(ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput)
}

type ClusterCloudProviderVsphereCloudProviderDisk struct {
	// (string)
	ScsiControllerType *string `pulumi:"scsiControllerType"`
}

// ClusterCloudProviderVsphereCloudProviderDiskInput is an input type that accepts ClusterCloudProviderVsphereCloudProviderDiskArgs and ClusterCloudProviderVsphereCloudProviderDiskOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudProviderDiskInput` via:
//
//          ClusterCloudProviderVsphereCloudProviderDiskArgs{...}
type ClusterCloudProviderVsphereCloudProviderDiskInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudProviderDiskOutput() ClusterCloudProviderVsphereCloudProviderDiskOutput
	ToClusterCloudProviderVsphereCloudProviderDiskOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudProviderDiskOutput
}

type ClusterCloudProviderVsphereCloudProviderDiskArgs struct {
	// (string)
	ScsiControllerType pulumi.StringPtrInput `pulumi:"scsiControllerType"`
}

func (ClusterCloudProviderVsphereCloudProviderDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudProviderDisk)(nil)).Elem()
}

func (i ClusterCloudProviderVsphereCloudProviderDiskArgs) ToClusterCloudProviderVsphereCloudProviderDiskOutput() ClusterCloudProviderVsphereCloudProviderDiskOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderDiskOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudProviderDiskArgs) ToClusterCloudProviderVsphereCloudProviderDiskOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderDiskOutput)
}

func (i ClusterCloudProviderVsphereCloudProviderDiskArgs) ToClusterCloudProviderVsphereCloudProviderDiskPtrOutput() ClusterCloudProviderVsphereCloudProviderDiskPtrOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderDiskPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudProviderDiskArgs) ToClusterCloudProviderVsphereCloudProviderDiskPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderDiskOutput).ToClusterCloudProviderVsphereCloudProviderDiskPtrOutputWithContext(ctx)
}

// ClusterCloudProviderVsphereCloudProviderDiskPtrInput is an input type that accepts ClusterCloudProviderVsphereCloudProviderDiskArgs, ClusterCloudProviderVsphereCloudProviderDiskPtr and ClusterCloudProviderVsphereCloudProviderDiskPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudProviderDiskPtrInput` via:
//
//          ClusterCloudProviderVsphereCloudProviderDiskArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderVsphereCloudProviderDiskPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudProviderDiskPtrOutput() ClusterCloudProviderVsphereCloudProviderDiskPtrOutput
	ToClusterCloudProviderVsphereCloudProviderDiskPtrOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudProviderDiskPtrOutput
}

type clusterCloudProviderVsphereCloudProviderDiskPtrType ClusterCloudProviderVsphereCloudProviderDiskArgs

func ClusterCloudProviderVsphereCloudProviderDiskPtr(v *ClusterCloudProviderVsphereCloudProviderDiskArgs) ClusterCloudProviderVsphereCloudProviderDiskPtrInput {
	return (*clusterCloudProviderVsphereCloudProviderDiskPtrType)(v)
}

func (*clusterCloudProviderVsphereCloudProviderDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudProviderDisk)(nil)).Elem()
}

func (i *clusterCloudProviderVsphereCloudProviderDiskPtrType) ToClusterCloudProviderVsphereCloudProviderDiskPtrOutput() ClusterCloudProviderVsphereCloudProviderDiskPtrOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderDiskPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderVsphereCloudProviderDiskPtrType) ToClusterCloudProviderVsphereCloudProviderDiskPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderDiskPtrOutput)
}

type ClusterCloudProviderVsphereCloudProviderDiskOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudProviderDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudProviderDisk)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudProviderDiskOutput) ToClusterCloudProviderVsphereCloudProviderDiskOutput() ClusterCloudProviderVsphereCloudProviderDiskOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderDiskOutput) ToClusterCloudProviderVsphereCloudProviderDiskOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderDiskOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderDiskOutput) ToClusterCloudProviderVsphereCloudProviderDiskPtrOutput() ClusterCloudProviderVsphereCloudProviderDiskPtrOutput {
	return o.ToClusterCloudProviderVsphereCloudProviderDiskPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderVsphereCloudProviderDiskOutput) ToClusterCloudProviderVsphereCloudProviderDiskPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderDiskPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderDisk) *ClusterCloudProviderVsphereCloudProviderDisk {
		return &v
	}).(ClusterCloudProviderVsphereCloudProviderDiskPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderDiskOutput) ScsiControllerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderDisk) *string { return v.ScsiControllerType }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderVsphereCloudProviderDiskPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudProviderDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudProviderDisk)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudProviderDiskPtrOutput) ToClusterCloudProviderVsphereCloudProviderDiskPtrOutput() ClusterCloudProviderVsphereCloudProviderDiskPtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderDiskPtrOutput) ToClusterCloudProviderVsphereCloudProviderDiskPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderDiskPtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderDiskPtrOutput) Elem() ClusterCloudProviderVsphereCloudProviderDiskOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderDisk) ClusterCloudProviderVsphereCloudProviderDisk {
		return *v
	}).(ClusterCloudProviderVsphereCloudProviderDiskOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderDiskPtrOutput) ScsiControllerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderDisk) *string {
		if v == nil {
			return nil
		}
		return v.ScsiControllerType
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderVsphereCloudProviderGlobal struct {
	// (string)
	Datacenter *string `pulumi:"datacenter"`
	// (string)
	Datacenters *string `pulumi:"datacenters"`
	// (string)
	Datastore *string `pulumi:"datastore"`
	// (bool)
	InsecureFlag *bool `pulumi:"insecureFlag"`
	// Registry password (string)
	Password *string `pulumi:"password"`
	// Port used for SSH communication (string)
	Port *string `pulumi:"port"`
	// (int)
	SoapRoundtripCount *int `pulumi:"soapRoundtripCount"`
	// Registry user (string)
	User *string `pulumi:"user"`
	// (string)
	VmName *string `pulumi:"vmName"`
	// (string)
	VmUuid *string `pulumi:"vmUuid"`
	// (string)
	WorkingDir *string `pulumi:"workingDir"`
}

// ClusterCloudProviderVsphereCloudProviderGlobalInput is an input type that accepts ClusterCloudProviderVsphereCloudProviderGlobalArgs and ClusterCloudProviderVsphereCloudProviderGlobalOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudProviderGlobalInput` via:
//
//          ClusterCloudProviderVsphereCloudProviderGlobalArgs{...}
type ClusterCloudProviderVsphereCloudProviderGlobalInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudProviderGlobalOutput() ClusterCloudProviderVsphereCloudProviderGlobalOutput
	ToClusterCloudProviderVsphereCloudProviderGlobalOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudProviderGlobalOutput
}

type ClusterCloudProviderVsphereCloudProviderGlobalArgs struct {
	// (string)
	Datacenter pulumi.StringPtrInput `pulumi:"datacenter"`
	// (string)
	Datacenters pulumi.StringPtrInput `pulumi:"datacenters"`
	// (string)
	Datastore pulumi.StringPtrInput `pulumi:"datastore"`
	// (bool)
	InsecureFlag pulumi.BoolPtrInput `pulumi:"insecureFlag"`
	// Registry password (string)
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Port used for SSH communication (string)
	Port pulumi.StringPtrInput `pulumi:"port"`
	// (int)
	SoapRoundtripCount pulumi.IntPtrInput `pulumi:"soapRoundtripCount"`
	// Registry user (string)
	User pulumi.StringPtrInput `pulumi:"user"`
	// (string)
	VmName pulumi.StringPtrInput `pulumi:"vmName"`
	// (string)
	VmUuid pulumi.StringPtrInput `pulumi:"vmUuid"`
	// (string)
	WorkingDir pulumi.StringPtrInput `pulumi:"workingDir"`
}

func (ClusterCloudProviderVsphereCloudProviderGlobalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudProviderGlobal)(nil)).Elem()
}

func (i ClusterCloudProviderVsphereCloudProviderGlobalArgs) ToClusterCloudProviderVsphereCloudProviderGlobalOutput() ClusterCloudProviderVsphereCloudProviderGlobalOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderGlobalOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudProviderGlobalArgs) ToClusterCloudProviderVsphereCloudProviderGlobalOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderGlobalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderGlobalOutput)
}

func (i ClusterCloudProviderVsphereCloudProviderGlobalArgs) ToClusterCloudProviderVsphereCloudProviderGlobalPtrOutput() ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderGlobalPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudProviderGlobalArgs) ToClusterCloudProviderVsphereCloudProviderGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderGlobalOutput).ToClusterCloudProviderVsphereCloudProviderGlobalPtrOutputWithContext(ctx)
}

// ClusterCloudProviderVsphereCloudProviderGlobalPtrInput is an input type that accepts ClusterCloudProviderVsphereCloudProviderGlobalArgs, ClusterCloudProviderVsphereCloudProviderGlobalPtr and ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudProviderGlobalPtrInput` via:
//
//          ClusterCloudProviderVsphereCloudProviderGlobalArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderVsphereCloudProviderGlobalPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudProviderGlobalPtrOutput() ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput
	ToClusterCloudProviderVsphereCloudProviderGlobalPtrOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput
}

type clusterCloudProviderVsphereCloudProviderGlobalPtrType ClusterCloudProviderVsphereCloudProviderGlobalArgs

func ClusterCloudProviderVsphereCloudProviderGlobalPtr(v *ClusterCloudProviderVsphereCloudProviderGlobalArgs) ClusterCloudProviderVsphereCloudProviderGlobalPtrInput {
	return (*clusterCloudProviderVsphereCloudProviderGlobalPtrType)(v)
}

func (*clusterCloudProviderVsphereCloudProviderGlobalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudProviderGlobal)(nil)).Elem()
}

func (i *clusterCloudProviderVsphereCloudProviderGlobalPtrType) ToClusterCloudProviderVsphereCloudProviderGlobalPtrOutput() ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderGlobalPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderVsphereCloudProviderGlobalPtrType) ToClusterCloudProviderVsphereCloudProviderGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput)
}

type ClusterCloudProviderVsphereCloudProviderGlobalOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudProviderGlobalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudProviderGlobal)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudProviderGlobalOutput) ToClusterCloudProviderVsphereCloudProviderGlobalOutput() ClusterCloudProviderVsphereCloudProviderGlobalOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderGlobalOutput) ToClusterCloudProviderVsphereCloudProviderGlobalOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderGlobalOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderGlobalOutput) ToClusterCloudProviderVsphereCloudProviderGlobalPtrOutput() ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput {
	return o.ToClusterCloudProviderVsphereCloudProviderGlobalPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderVsphereCloudProviderGlobalOutput) ToClusterCloudProviderVsphereCloudProviderGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderGlobal) *ClusterCloudProviderVsphereCloudProviderGlobal {
		return &v
	}).(ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderGlobal) *string { return v.Datacenter }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalOutput) Datacenters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderGlobal) *string { return v.Datacenters }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalOutput) Datastore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderGlobal) *string { return v.Datastore }).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderVsphereCloudProviderGlobalOutput) InsecureFlag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderGlobal) *bool { return v.InsecureFlag }).(pulumi.BoolPtrOutput)
}

// Registry password (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderGlobal) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Port used for SSH communication (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderGlobal) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// (int)
func (o ClusterCloudProviderVsphereCloudProviderGlobalOutput) SoapRoundtripCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderGlobal) *int { return v.SoapRoundtripCount }).(pulumi.IntPtrOutput)
}

// Registry user (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderGlobal) *string { return v.User }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalOutput) VmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderGlobal) *string { return v.VmName }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalOutput) VmUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderGlobal) *string { return v.VmUuid }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalOutput) WorkingDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderGlobal) *string { return v.WorkingDir }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudProviderGlobal)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput) ToClusterCloudProviderVsphereCloudProviderGlobalPtrOutput() ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput) ToClusterCloudProviderVsphereCloudProviderGlobalPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput) Elem() ClusterCloudProviderVsphereCloudProviderGlobalOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderGlobal) ClusterCloudProviderVsphereCloudProviderGlobal {
		return *v
	}).(ClusterCloudProviderVsphereCloudProviderGlobalOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Datacenter
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput) Datacenters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Datacenters
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput) Datastore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Datastore
	}).(pulumi.StringPtrOutput)
}

// (bool)
func (o ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput) InsecureFlag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderGlobal) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureFlag
	}).(pulumi.BoolPtrOutput)
}

// Registry password (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// Port used for SSH communication (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// (int)
func (o ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput) SoapRoundtripCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderGlobal) *int {
		if v == nil {
			return nil
		}
		return v.SoapRoundtripCount
	}).(pulumi.IntPtrOutput)
}

// Registry user (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput) VmName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.VmName
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput) VmUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.VmUuid
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput) WorkingDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderGlobal) *string {
		if v == nil {
			return nil
		}
		return v.WorkingDir
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderVsphereCloudProviderNetwork struct {
	// (string)
	PublicNetwork *string `pulumi:"publicNetwork"`
}

// ClusterCloudProviderVsphereCloudProviderNetworkInput is an input type that accepts ClusterCloudProviderVsphereCloudProviderNetworkArgs and ClusterCloudProviderVsphereCloudProviderNetworkOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudProviderNetworkInput` via:
//
//          ClusterCloudProviderVsphereCloudProviderNetworkArgs{...}
type ClusterCloudProviderVsphereCloudProviderNetworkInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudProviderNetworkOutput() ClusterCloudProviderVsphereCloudProviderNetworkOutput
	ToClusterCloudProviderVsphereCloudProviderNetworkOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudProviderNetworkOutput
}

type ClusterCloudProviderVsphereCloudProviderNetworkArgs struct {
	// (string)
	PublicNetwork pulumi.StringPtrInput `pulumi:"publicNetwork"`
}

func (ClusterCloudProviderVsphereCloudProviderNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudProviderNetwork)(nil)).Elem()
}

func (i ClusterCloudProviderVsphereCloudProviderNetworkArgs) ToClusterCloudProviderVsphereCloudProviderNetworkOutput() ClusterCloudProviderVsphereCloudProviderNetworkOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderNetworkOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudProviderNetworkArgs) ToClusterCloudProviderVsphereCloudProviderNetworkOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderNetworkOutput)
}

func (i ClusterCloudProviderVsphereCloudProviderNetworkArgs) ToClusterCloudProviderVsphereCloudProviderNetworkPtrOutput() ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderNetworkPtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudProviderNetworkArgs) ToClusterCloudProviderVsphereCloudProviderNetworkPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderNetworkOutput).ToClusterCloudProviderVsphereCloudProviderNetworkPtrOutputWithContext(ctx)
}

// ClusterCloudProviderVsphereCloudProviderNetworkPtrInput is an input type that accepts ClusterCloudProviderVsphereCloudProviderNetworkArgs, ClusterCloudProviderVsphereCloudProviderNetworkPtr and ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudProviderNetworkPtrInput` via:
//
//          ClusterCloudProviderVsphereCloudProviderNetworkArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderVsphereCloudProviderNetworkPtrInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudProviderNetworkPtrOutput() ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput
	ToClusterCloudProviderVsphereCloudProviderNetworkPtrOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput
}

type clusterCloudProviderVsphereCloudProviderNetworkPtrType ClusterCloudProviderVsphereCloudProviderNetworkArgs

func ClusterCloudProviderVsphereCloudProviderNetworkPtr(v *ClusterCloudProviderVsphereCloudProviderNetworkArgs) ClusterCloudProviderVsphereCloudProviderNetworkPtrInput {
	return (*clusterCloudProviderVsphereCloudProviderNetworkPtrType)(v)
}

func (*clusterCloudProviderVsphereCloudProviderNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudProviderNetwork)(nil)).Elem()
}

func (i *clusterCloudProviderVsphereCloudProviderNetworkPtrType) ToClusterCloudProviderVsphereCloudProviderNetworkPtrOutput() ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderNetworkPtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderVsphereCloudProviderNetworkPtrType) ToClusterCloudProviderVsphereCloudProviderNetworkPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput)
}

type ClusterCloudProviderVsphereCloudProviderNetworkOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudProviderNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudProviderNetwork)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudProviderNetworkOutput) ToClusterCloudProviderVsphereCloudProviderNetworkOutput() ClusterCloudProviderVsphereCloudProviderNetworkOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderNetworkOutput) ToClusterCloudProviderVsphereCloudProviderNetworkOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderNetworkOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderNetworkOutput) ToClusterCloudProviderVsphereCloudProviderNetworkPtrOutput() ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput {
	return o.ToClusterCloudProviderVsphereCloudProviderNetworkPtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderVsphereCloudProviderNetworkOutput) ToClusterCloudProviderVsphereCloudProviderNetworkPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderNetwork) *ClusterCloudProviderVsphereCloudProviderNetwork {
		return &v
	}).(ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderNetworkOutput) PublicNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderNetwork) *string { return v.PublicNetwork }).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudProviderNetwork)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput) ToClusterCloudProviderVsphereCloudProviderNetworkPtrOutput() ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput) ToClusterCloudProviderVsphereCloudProviderNetworkPtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput) Elem() ClusterCloudProviderVsphereCloudProviderNetworkOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderNetwork) ClusterCloudProviderVsphereCloudProviderNetwork {
		return *v
	}).(ClusterCloudProviderVsphereCloudProviderNetworkOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput) PublicNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderNetwork) *string {
		if v == nil {
			return nil
		}
		return v.PublicNetwork
	}).(pulumi.StringPtrOutput)
}

type ClusterCloudProviderVsphereCloudProviderVirtualCenter struct {
	// (string)
	Datacenters string `pulumi:"datacenters"`
	// Name of virtualcenter config for Vsphere Cloud Provider config (string)
	Name string `pulumi:"name"`
	// Registry password (string)
	Password string `pulumi:"password"`
	// Port used for SSH communication (string)
	Port *string `pulumi:"port"`
	// (int)
	SoapRoundtripCount *int `pulumi:"soapRoundtripCount"`
	// Registry user (string)
	User string `pulumi:"user"`
}

// ClusterCloudProviderVsphereCloudProviderVirtualCenterInput is an input type that accepts ClusterCloudProviderVsphereCloudProviderVirtualCenterArgs and ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudProviderVirtualCenterInput` via:
//
//          ClusterCloudProviderVsphereCloudProviderVirtualCenterArgs{...}
type ClusterCloudProviderVsphereCloudProviderVirtualCenterInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudProviderVirtualCenterOutput() ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput
	ToClusterCloudProviderVsphereCloudProviderVirtualCenterOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput
}

type ClusterCloudProviderVsphereCloudProviderVirtualCenterArgs struct {
	// (string)
	Datacenters pulumi.StringInput `pulumi:"datacenters"`
	// Name of virtualcenter config for Vsphere Cloud Provider config (string)
	Name pulumi.StringInput `pulumi:"name"`
	// Registry password (string)
	Password pulumi.StringInput `pulumi:"password"`
	// Port used for SSH communication (string)
	Port pulumi.StringPtrInput `pulumi:"port"`
	// (int)
	SoapRoundtripCount pulumi.IntPtrInput `pulumi:"soapRoundtripCount"`
	// Registry user (string)
	User pulumi.StringInput `pulumi:"user"`
}

func (ClusterCloudProviderVsphereCloudProviderVirtualCenterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudProviderVirtualCenter)(nil)).Elem()
}

func (i ClusterCloudProviderVsphereCloudProviderVirtualCenterArgs) ToClusterCloudProviderVsphereCloudProviderVirtualCenterOutput() ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderVirtualCenterOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudProviderVirtualCenterArgs) ToClusterCloudProviderVsphereCloudProviderVirtualCenterOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput)
}

// ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayInput is an input type that accepts ClusterCloudProviderVsphereCloudProviderVirtualCenterArray and ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayInput` via:
//
//          ClusterCloudProviderVsphereCloudProviderVirtualCenterArray{ ClusterCloudProviderVsphereCloudProviderVirtualCenterArgs{...} }
type ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput() ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput
	ToClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput
}

type ClusterCloudProviderVsphereCloudProviderVirtualCenterArray []ClusterCloudProviderVsphereCloudProviderVirtualCenterInput

func (ClusterCloudProviderVsphereCloudProviderVirtualCenterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCloudProviderVsphereCloudProviderVirtualCenter)(nil)).Elem()
}

func (i ClusterCloudProviderVsphereCloudProviderVirtualCenterArray) ToClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput() ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudProviderVirtualCenterArray) ToClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput)
}

type ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudProviderVirtualCenter)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput) ToClusterCloudProviderVsphereCloudProviderVirtualCenterOutput() ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput) ToClusterCloudProviderVsphereCloudProviderVirtualCenterOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput {
	return o
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput) Datacenters() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderVirtualCenter) string { return v.Datacenters }).(pulumi.StringOutput)
}

// Name of virtualcenter config for Vsphere Cloud Provider config (string)
func (o ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderVirtualCenter) string { return v.Name }).(pulumi.StringOutput)
}

// Registry password (string)
func (o ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderVirtualCenter) string { return v.Password }).(pulumi.StringOutput)
}

// Port used for SSH communication (string)
func (o ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderVirtualCenter) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// (int)
func (o ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput) SoapRoundtripCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderVirtualCenter) *int { return v.SoapRoundtripCount }).(pulumi.IntPtrOutput)
}

// Registry user (string)
func (o ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderVirtualCenter) string { return v.User }).(pulumi.StringOutput)
}

type ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterCloudProviderVsphereCloudProviderVirtualCenter)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput) ToClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput() ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput) ToClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput) Index(i pulumi.IntInput) ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterCloudProviderVsphereCloudProviderVirtualCenter {
		return vs[0].([]ClusterCloudProviderVsphereCloudProviderVirtualCenter)[vs[1].(int)]
	}).(ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput)
}

type ClusterCloudProviderVsphereCloudProviderWorkspace struct {
	// (string)
	Datacenter string `pulumi:"datacenter"`
	// (string)
	DefaultDatastore *string `pulumi:"defaultDatastore"`
	// Folder for S3 service. Available from Rancher v2.2.7 (string)
	Folder *string `pulumi:"folder"`
	// (string)
	ResourcepoolPath *string `pulumi:"resourcepoolPath"`
	// (string)
	Server string `pulumi:"server"`
}

// ClusterCloudProviderVsphereCloudProviderWorkspaceInput is an input type that accepts ClusterCloudProviderVsphereCloudProviderWorkspaceArgs and ClusterCloudProviderVsphereCloudProviderWorkspaceOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudProviderWorkspaceInput` via:
//
//          ClusterCloudProviderVsphereCloudProviderWorkspaceArgs{...}
type ClusterCloudProviderVsphereCloudProviderWorkspaceInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudProviderWorkspaceOutput() ClusterCloudProviderVsphereCloudProviderWorkspaceOutput
	ToClusterCloudProviderVsphereCloudProviderWorkspaceOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudProviderWorkspaceOutput
}

type ClusterCloudProviderVsphereCloudProviderWorkspaceArgs struct {
	// (string)
	Datacenter pulumi.StringInput `pulumi:"datacenter"`
	// (string)
	DefaultDatastore pulumi.StringPtrInput `pulumi:"defaultDatastore"`
	// Folder for S3 service. Available from Rancher v2.2.7 (string)
	Folder pulumi.StringPtrInput `pulumi:"folder"`
	// (string)
	ResourcepoolPath pulumi.StringPtrInput `pulumi:"resourcepoolPath"`
	// (string)
	Server pulumi.StringInput `pulumi:"server"`
}

func (ClusterCloudProviderVsphereCloudProviderWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudProviderWorkspace)(nil)).Elem()
}

func (i ClusterCloudProviderVsphereCloudProviderWorkspaceArgs) ToClusterCloudProviderVsphereCloudProviderWorkspaceOutput() ClusterCloudProviderVsphereCloudProviderWorkspaceOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderWorkspaceOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudProviderWorkspaceArgs) ToClusterCloudProviderVsphereCloudProviderWorkspaceOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderWorkspaceOutput)
}

func (i ClusterCloudProviderVsphereCloudProviderWorkspaceArgs) ToClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput() ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderWorkspacePtrOutputWithContext(context.Background())
}

func (i ClusterCloudProviderVsphereCloudProviderWorkspaceArgs) ToClusterCloudProviderVsphereCloudProviderWorkspacePtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderWorkspaceOutput).ToClusterCloudProviderVsphereCloudProviderWorkspacePtrOutputWithContext(ctx)
}

// ClusterCloudProviderVsphereCloudProviderWorkspacePtrInput is an input type that accepts ClusterCloudProviderVsphereCloudProviderWorkspaceArgs, ClusterCloudProviderVsphereCloudProviderWorkspacePtr and ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput values.
// You can construct a concrete instance of `ClusterCloudProviderVsphereCloudProviderWorkspacePtrInput` via:
//
//          ClusterCloudProviderVsphereCloudProviderWorkspaceArgs{...}
//
//  or:
//
//          nil
type ClusterCloudProviderVsphereCloudProviderWorkspacePtrInput interface {
	pulumi.Input

	ToClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput() ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput
	ToClusterCloudProviderVsphereCloudProviderWorkspacePtrOutputWithContext(context.Context) ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput
}

type clusterCloudProviderVsphereCloudProviderWorkspacePtrType ClusterCloudProviderVsphereCloudProviderWorkspaceArgs

func ClusterCloudProviderVsphereCloudProviderWorkspacePtr(v *ClusterCloudProviderVsphereCloudProviderWorkspaceArgs) ClusterCloudProviderVsphereCloudProviderWorkspacePtrInput {
	return (*clusterCloudProviderVsphereCloudProviderWorkspacePtrType)(v)
}

func (*clusterCloudProviderVsphereCloudProviderWorkspacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudProviderWorkspace)(nil)).Elem()
}

func (i *clusterCloudProviderVsphereCloudProviderWorkspacePtrType) ToClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput() ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput {
	return i.ToClusterCloudProviderVsphereCloudProviderWorkspacePtrOutputWithContext(context.Background())
}

func (i *clusterCloudProviderVsphereCloudProviderWorkspacePtrType) ToClusterCloudProviderVsphereCloudProviderWorkspacePtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput)
}

type ClusterCloudProviderVsphereCloudProviderWorkspaceOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudProviderWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudProviderVsphereCloudProviderWorkspace)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudProviderWorkspaceOutput) ToClusterCloudProviderVsphereCloudProviderWorkspaceOutput() ClusterCloudProviderVsphereCloudProviderWorkspaceOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderWorkspaceOutput) ToClusterCloudProviderVsphereCloudProviderWorkspaceOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderWorkspaceOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderWorkspaceOutput) ToClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput() ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput {
	return o.ToClusterCloudProviderVsphereCloudProviderWorkspacePtrOutputWithContext(context.Background())
}

func (o ClusterCloudProviderVsphereCloudProviderWorkspaceOutput) ToClusterCloudProviderVsphereCloudProviderWorkspacePtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderWorkspace) *ClusterCloudProviderVsphereCloudProviderWorkspace {
		return &v
	}).(ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderWorkspaceOutput) Datacenter() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderWorkspace) string { return v.Datacenter }).(pulumi.StringOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderWorkspaceOutput) DefaultDatastore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderWorkspace) *string { return v.DefaultDatastore }).(pulumi.StringPtrOutput)
}

// Folder for S3 service. Available from Rancher v2.2.7 (string)
func (o ClusterCloudProviderVsphereCloudProviderWorkspaceOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderWorkspace) *string { return v.Folder }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderWorkspaceOutput) ResourcepoolPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderWorkspace) *string { return v.ResourcepoolPath }).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderWorkspaceOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterCloudProviderVsphereCloudProviderWorkspace) string { return v.Server }).(pulumi.StringOutput)
}

type ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudProviderVsphereCloudProviderWorkspace)(nil)).Elem()
}

func (o ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput) ToClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput() ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput) ToClusterCloudProviderVsphereCloudProviderWorkspacePtrOutputWithContext(ctx context.Context) ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput {
	return o
}

func (o ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput) Elem() ClusterCloudProviderVsphereCloudProviderWorkspaceOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderWorkspace) ClusterCloudProviderVsphereCloudProviderWorkspace {
		return *v
	}).(ClusterCloudProviderVsphereCloudProviderWorkspaceOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput) Datacenter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderWorkspace) *string {
		if v == nil {
			return nil
		}
		return &v.Datacenter
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput) DefaultDatastore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderWorkspace) *string {
		if v == nil {
			return nil
		}
		return v.DefaultDatastore
	}).(pulumi.StringPtrOutput)
}

// Folder for S3 service. Available from Rancher v2.2.7 (string)
func (o ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderWorkspace) *string {
		if v == nil {
			return nil
		}
		return v.Folder
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput) ResourcepoolPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderWorkspace) *string {
		if v == nil {
			return nil
		}
		return v.ResourcepoolPath
	}).(pulumi.StringPtrOutput)
}

// (string)
func (o ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudProviderVsphereCloudProviderWorkspace) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

type ClusterControlPlaneHost struct {
	// Address ip for node (string)
	Address *string `pulumi:"address"`
	// Name of the host provisioned via docker machine (string)
	NodeName *string `pulumi:"nodeName"`
}

// ClusterControlPlaneHostInput is an input type that accepts ClusterControlPlaneHostArgs and ClusterControlPlaneHostOutput values.
// You can construct a concrete instance of `ClusterControlPlaneHostInput` via:
//
//          ClusterControlPlaneHostArgs{...}
type ClusterControlPlaneHostInput interface {
	pulumi.Input

	ToClusterControlPlaneHostOutput() ClusterControlPlaneHostOutput
	ToClusterControlPlaneHostOutputWithContext(context.Context) ClusterControlPlaneHostOutput
}

type ClusterControlPlaneHostArgs struct {
	// Address ip for node (string)
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Name of the host provisioned via docker machine (string)
	NodeName pulumi.StringPtrInput `pulumi:"nodeName"`
}

func (ClusterControlPlaneHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterControlPlaneHost)(nil)).Elem()
}

func (i ClusterControlPlaneHostArgs) ToClusterControlPlaneHostOutput() ClusterControlPlaneHostOutput {
	return i.ToClusterControlPlaneHostOutputWithContext(context.Background())
}

func (i ClusterControlPlaneHostArgs) ToClusterControlPlaneHostOutputWithContext(ctx context.Context) ClusterControlPlaneHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControlPlaneHostOutput)
}

// ClusterControlPlaneHostArrayInput is an input type that accepts ClusterControlPlaneHostArray and ClusterControlPlaneHostArrayOutput values.
// You can construct a concrete instance of `ClusterControlPlaneHostArrayInput` via:
//
//          ClusterControlPlaneHostArray{ ClusterControlPlaneHostArgs{...} }
type ClusterControlPlaneHostArrayInput interface {
	pulumi.Input

	ToClusterControlPlaneHostArrayOutput() ClusterControlPlaneHostArrayOutput
	ToClusterControlPlaneHostArrayOutputWithContext(context.Context) ClusterControlPlaneHostArrayOutput
}

type ClusterControlPlaneHostArray []ClusterControlPlaneHostInput

func (ClusterControlPlaneHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterControlPlaneHost)(nil)).Elem()
}

func (i ClusterControlPlaneHostArray) ToClusterControlPlaneHostArrayOutput() ClusterControlPlaneHostArrayOutput {
	return i.ToClusterControlPlaneHostArrayOutputWithContext(context.Background())
}

func (i ClusterControlPlaneHostArray) ToClusterControlPlaneHostArrayOutputWithContext(ctx context.Context) ClusterControlPlaneHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterControlPlaneHostArrayOutput)
}

type ClusterControlPlaneHostOutput struct{ *pulumi.OutputState }

func (ClusterControlPlaneHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterControlPlaneHost)(nil)).Elem()
}

func (o ClusterControlPlaneHostOutput) ToClusterControlPlaneHostOutput() ClusterControlPlaneHostOutput {
	return o
}

func (o ClusterControlPlaneHostOutput) ToClusterControlPlaneHostOutputWithContext(ctx context.Context) ClusterControlPlaneHostOutput {
	return o
}

// Address ip for node (string)
func (o ClusterControlPlaneHostOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterControlPlaneHost) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Name of the host provisioned via docker machine (string)
func (o ClusterControlPlaneHostOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterControlPlaneHost) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

type ClusterControlPlaneHostArrayOutput struct{ *pulumi.OutputState }

func (ClusterControlPlaneHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterControlPlaneHost)(nil)).Elem()
}

func (o ClusterControlPlaneHostArrayOutput) ToClusterControlPlaneHostArrayOutput() ClusterControlPlaneHostArrayOutput {
	return o
}

func (o ClusterControlPlaneHostArrayOutput) ToClusterControlPlaneHostArrayOutputWithContext(ctx context.Context) ClusterControlPlaneHostArrayOutput {
	return o
}

func (o ClusterControlPlaneHostArrayOutput) Index(i pulumi.IntInput) ClusterControlPlaneHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterControlPlaneHost {
		return vs[0].([]ClusterControlPlaneHost)[vs[1].(int)]
	}).(ClusterControlPlaneHostOutput)
}

type ClusterDns struct {
	// Node selector key pair (map)
	NodeSelector map[string]interface{} `pulumi:"nodeSelector"`
	// Docker image for nodelocal (string)
	Nodelocal *ClusterDnsNodelocal `pulumi:"nodelocal"`
	// Monitoring provider (string)
	Provider *string `pulumi:"provider"`
	// Reverse CIDRs  (list)
	ReverseCidrs []string `pulumi:"reverseCidrs"`
	// Upstream nameservers  (list)
	UpstreamNameservers []string `pulumi:"upstreamNameservers"`
}

// ClusterDnsInput is an input type that accepts ClusterDnsArgs and ClusterDnsOutput values.
// You can construct a concrete instance of `ClusterDnsInput` via:
//
//          ClusterDnsArgs{...}
type ClusterDnsInput interface {
	pulumi.Input

	ToClusterDnsOutput() ClusterDnsOutput
	ToClusterDnsOutputWithContext(context.Context) ClusterDnsOutput
}

type ClusterDnsArgs struct {
	// Node selector key pair (map)
	NodeSelector pulumi.MapInput `pulumi:"nodeSelector"`
	// Docker image for nodelocal (string)
	Nodelocal ClusterDnsNodelocalPtrInput `pulumi:"nodelocal"`
	// Monitoring provider (string)
	Provider pulumi.StringPtrInput `pulumi:"provider"`
	// Reverse CIDRs  (list)
	ReverseCidrs pulumi.StringArrayInput `pulumi:"reverseCidrs"`
	// Upstream nameservers  (list)
	UpstreamNameservers pulumi.StringArrayInput `pulumi:"upstreamNameservers"`
}

func (ClusterDnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDns)(nil)).Elem()
}

func (i ClusterDnsArgs) ToClusterDnsOutput() ClusterDnsOutput {
	return i.ToClusterDnsOutputWithContext(context.Background())
}

func (i ClusterDnsArgs) ToClusterDnsOutputWithContext(ctx context.Context) ClusterDnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDnsOutput)
}

func (i ClusterDnsArgs) ToClusterDnsPtrOutput() ClusterDnsPtrOutput {
	return i.ToClusterDnsPtrOutputWithContext(context.Background())
}

func (i ClusterDnsArgs) ToClusterDnsPtrOutputWithContext(ctx context.Context) ClusterDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDnsOutput).ToClusterDnsPtrOutputWithContext(ctx)
}

// ClusterDnsPtrInput is an input type that accepts ClusterDnsArgs, ClusterDnsPtr and ClusterDnsPtrOutput values.
// You can construct a concrete instance of `ClusterDnsPtrInput` via:
//
//          ClusterDnsArgs{...}
//
//  or:
//
//          nil
type ClusterDnsPtrInput interface {
	pulumi.Input

	ToClusterDnsPtrOutput() ClusterDnsPtrOutput
	ToClusterDnsPtrOutputWithContext(context.Context) ClusterDnsPtrOutput
}

type clusterDnsPtrType ClusterDnsArgs

func ClusterDnsPtr(v *ClusterDnsArgs) ClusterDnsPtrInput {
	return (*clusterDnsPtrType)(v)
}

func (*clusterDnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDns)(nil)).Elem()
}

func (i *clusterDnsPtrType) ToClusterDnsPtrOutput() ClusterDnsPtrOutput {
	return i.ToClusterDnsPtrOutputWithContext(context.Background())
}

func (i *clusterDnsPtrType) ToClusterDnsPtrOutputWithContext(ctx context.Context) ClusterDnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDnsPtrOutput)
}

type ClusterDnsOutput struct{ *pulumi.OutputState }

func (ClusterDnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDns)(nil)).Elem()
}

func (o ClusterDnsOutput) ToClusterDnsOutput() ClusterDnsOutput {
	return o
}

func (o ClusterDnsOutput) ToClusterDnsOutputWithContext(ctx context.Context) ClusterDnsOutput {
	return o
}

func (o ClusterDnsOutput) ToClusterDnsPtrOutput() ClusterDnsPtrOutput {
	return o.ToClusterDnsPtrOutputWithContext(context.Background())
}

func (o ClusterDnsOutput) ToClusterDnsPtrOutputWithContext(ctx context.Context) ClusterDnsPtrOutput {
	return o.ApplyT(func(v ClusterDns) *ClusterDns {
		return &v
	}).(ClusterDnsPtrOutput)
}

// Node selector key pair (map)
func (o ClusterDnsOutput) NodeSelector() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterDns) map[string]interface{} { return v.NodeSelector }).(pulumi.MapOutput)
}

// Docker image for nodelocal (string)
func (o ClusterDnsOutput) Nodelocal() ClusterDnsNodelocalPtrOutput {
	return o.ApplyT(func(v ClusterDns) *ClusterDnsNodelocal { return v.Nodelocal }).(ClusterDnsNodelocalPtrOutput)
}

// Monitoring provider (string)
func (o ClusterDnsOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDns) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

// Reverse CIDRs  (list)
func (o ClusterDnsOutput) ReverseCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterDns) []string { return v.ReverseCidrs }).(pulumi.StringArrayOutput)
}

// Upstream nameservers  (list)
func (o ClusterDnsOutput) UpstreamNameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterDns) []string { return v.UpstreamNameservers }).(pulumi.StringArrayOutput)
}

type ClusterDnsPtrOutput struct{ *pulumi.OutputState }

func (ClusterDnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDns)(nil)).Elem()
}

func (o ClusterDnsPtrOutput) ToClusterDnsPtrOutput() ClusterDnsPtrOutput {
	return o
}

func (o ClusterDnsPtrOutput) ToClusterDnsPtrOutputWithContext(ctx context.Context) ClusterDnsPtrOutput {
	return o
}

func (o ClusterDnsPtrOutput) Elem() ClusterDnsOutput {
	return o.ApplyT(func(v *ClusterDns) ClusterDns { return *v }).(ClusterDnsOutput)
}

// Node selector key pair (map)
func (o ClusterDnsPtrOutput) NodeSelector() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterDns) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.NodeSelector
	}).(pulumi.MapOutput)
}

// Docker image for nodelocal (string)
func (o ClusterDnsPtrOutput) Nodelocal() ClusterDnsNodelocalPtrOutput {
	return o.ApplyT(func(v *ClusterDns) *ClusterDnsNodelocal {
		if v == nil {
			return nil
		}
		return v.Nodelocal
	}).(ClusterDnsNodelocalPtrOutput)
}

// Monitoring provider (string)
func (o ClusterDnsPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDns) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

// Reverse CIDRs  (list)
func (o ClusterDnsPtrOutput) ReverseCidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterDns) []string {
		if v == nil {
			return nil
		}
		return v.ReverseCidrs
	}).(pulumi.StringArrayOutput)
}

// Upstream nameservers  (list)
func (o ClusterDnsPtrOutput) UpstreamNameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterDns) []string {
		if v == nil {
			return nil
		}
		return v.UpstreamNameservers
	}).(pulumi.StringArrayOutput)
}

type ClusterDnsNodelocal struct {
	// Nodelocal dns ip address (string)
	IpAddress *string `pulumi:"ipAddress"`
	// Node selector key pair (map)
	NodeSelector map[string]interface{} `pulumi:"nodeSelector"`
}

// ClusterDnsNodelocalInput is an input type that accepts ClusterDnsNodelocalArgs and ClusterDnsNodelocalOutput values.
// You can construct a concrete instance of `ClusterDnsNodelocalInput` via:
//
//          ClusterDnsNodelocalArgs{...}
type ClusterDnsNodelocalInput interface {
	pulumi.Input

	ToClusterDnsNodelocalOutput() ClusterDnsNodelocalOutput
	ToClusterDnsNodelocalOutputWithContext(context.Context) ClusterDnsNodelocalOutput
}

type ClusterDnsNodelocalArgs struct {
	// Nodelocal dns ip address (string)
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Node selector key pair (map)
	NodeSelector pulumi.MapInput `pulumi:"nodeSelector"`
}

func (ClusterDnsNodelocalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDnsNodelocal)(nil)).Elem()
}

func (i ClusterDnsNodelocalArgs) ToClusterDnsNodelocalOutput() ClusterDnsNodelocalOutput {
	return i.ToClusterDnsNodelocalOutputWithContext(context.Background())
}

func (i ClusterDnsNodelocalArgs) ToClusterDnsNodelocalOutputWithContext(ctx context.Context) ClusterDnsNodelocalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDnsNodelocalOutput)
}

func (i ClusterDnsNodelocalArgs) ToClusterDnsNodelocalPtrOutput() ClusterDnsNodelocalPtrOutput {
	return i.ToClusterDnsNodelocalPtrOutputWithContext(context.Background())
}

func (i ClusterDnsNodelocalArgs) ToClusterDnsNodelocalPtrOutputWithContext(ctx context.Context) ClusterDnsNodelocalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDnsNodelocalOutput).ToClusterDnsNodelocalPtrOutputWithContext(ctx)
}

// ClusterDnsNodelocalPtrInput is an input type that accepts ClusterDnsNodelocalArgs, ClusterDnsNodelocalPtr and ClusterDnsNodelocalPtrOutput values.
// You can construct a concrete instance of `ClusterDnsNodelocalPtrInput` via:
//
//          ClusterDnsNodelocalArgs{...}
//
//  or:
//
//          nil
type ClusterDnsNodelocalPtrInput interface {
	pulumi.Input

	ToClusterDnsNodelocalPtrOutput() ClusterDnsNodelocalPtrOutput
	ToClusterDnsNodelocalPtrOutputWithContext(context.Context) ClusterDnsNodelocalPtrOutput
}

type clusterDnsNodelocalPtrType ClusterDnsNodelocalArgs

func ClusterDnsNodelocalPtr(v *ClusterDnsNodelocalArgs) ClusterDnsNodelocalPtrInput {
	return (*clusterDnsNodelocalPtrType)(v)
}

func (*clusterDnsNodelocalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDnsNodelocal)(nil)).Elem()
}

func (i *clusterDnsNodelocalPtrType) ToClusterDnsNodelocalPtrOutput() ClusterDnsNodelocalPtrOutput {
	return i.ToClusterDnsNodelocalPtrOutputWithContext(context.Background())
}

func (i *clusterDnsNodelocalPtrType) ToClusterDnsNodelocalPtrOutputWithContext(ctx context.Context) ClusterDnsNodelocalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDnsNodelocalPtrOutput)
}

type ClusterDnsNodelocalOutput struct{ *pulumi.OutputState }

func (ClusterDnsNodelocalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDnsNodelocal)(nil)).Elem()
}

func (o ClusterDnsNodelocalOutput) ToClusterDnsNodelocalOutput() ClusterDnsNodelocalOutput {
	return o
}

func (o ClusterDnsNodelocalOutput) ToClusterDnsNodelocalOutputWithContext(ctx context.Context) ClusterDnsNodelocalOutput {
	return o
}

func (o ClusterDnsNodelocalOutput) ToClusterDnsNodelocalPtrOutput() ClusterDnsNodelocalPtrOutput {
	return o.ToClusterDnsNodelocalPtrOutputWithContext(context.Background())
}

func (o ClusterDnsNodelocalOutput) ToClusterDnsNodelocalPtrOutputWithContext(ctx context.Context) ClusterDnsNodelocalPtrOutput {
	return o.ApplyT(func(v ClusterDnsNodelocal) *ClusterDnsNodelocal {
		return &v
	}).(ClusterDnsNodelocalPtrOutput)
}

// Nodelocal dns ip address (string)
func (o ClusterDnsNodelocalOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterDnsNodelocal) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Node selector key pair (map)
func (o ClusterDnsNodelocalOutput) NodeSelector() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterDnsNodelocal) map[string]interface{} { return v.NodeSelector }).(pulumi.MapOutput)
}

type ClusterDnsNodelocalPtrOutput struct{ *pulumi.OutputState }

func (ClusterDnsNodelocalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterDnsNodelocal)(nil)).Elem()
}

func (o ClusterDnsNodelocalPtrOutput) ToClusterDnsNodelocalPtrOutput() ClusterDnsNodelocalPtrOutput {
	return o
}

func (o ClusterDnsNodelocalPtrOutput) ToClusterDnsNodelocalPtrOutputWithContext(ctx context.Context) ClusterDnsNodelocalPtrOutput {
	return o
}

func (o ClusterDnsNodelocalPtrOutput) Elem() ClusterDnsNodelocalOutput {
	return o.ApplyT(func(v *ClusterDnsNodelocal) ClusterDnsNodelocal { return *v }).(ClusterDnsNodelocalOutput)
}

// Nodelocal dns ip address (string)
func (o ClusterDnsNodelocalPtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterDnsNodelocal) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// Node selector key pair (map)
func (o ClusterDnsNodelocalPtrOutput) NodeSelector() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterDnsNodelocal) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.NodeSelector
	}).(pulumi.MapOutput)
}

type ClusterEtcdHost struct {
	// Address ip for node (string)
	Address *string `pulumi:"address"`
	// Name of the host provisioned via docker machine (string)
	NodeName *string `pulumi:"nodeName"`
}

// ClusterEtcdHostInput is an input type that accepts ClusterEtcdHostArgs and ClusterEtcdHostOutput values.
// You can construct a concrete instance of `ClusterEtcdHostInput` via:
//
//          ClusterEtcdHostArgs{...}
type ClusterEtcdHostInput interface {
	pulumi.Input

	ToClusterEtcdHostOutput() ClusterEtcdHostOutput
	ToClusterEtcdHostOutputWithContext(context.Context) ClusterEtcdHostOutput
}

type ClusterEtcdHostArgs struct {
	// Address ip for node (string)
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Name of the host provisioned via docker machine (string)
	NodeName pulumi.StringPtrInput `pulumi:"nodeName"`
}

func (ClusterEtcdHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEtcdHost)(nil)).Elem()
}

func (i ClusterEtcdHostArgs) ToClusterEtcdHostOutput() ClusterEtcdHostOutput {
	return i.ToClusterEtcdHostOutputWithContext(context.Background())
}

func (i ClusterEtcdHostArgs) ToClusterEtcdHostOutputWithContext(ctx context.Context) ClusterEtcdHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEtcdHostOutput)
}

// ClusterEtcdHostArrayInput is an input type that accepts ClusterEtcdHostArray and ClusterEtcdHostArrayOutput values.
// You can construct a concrete instance of `ClusterEtcdHostArrayInput` via:
//
//          ClusterEtcdHostArray{ ClusterEtcdHostArgs{...} }
type ClusterEtcdHostArrayInput interface {
	pulumi.Input

	ToClusterEtcdHostArrayOutput() ClusterEtcdHostArrayOutput
	ToClusterEtcdHostArrayOutputWithContext(context.Context) ClusterEtcdHostArrayOutput
}

type ClusterEtcdHostArray []ClusterEtcdHostInput

func (ClusterEtcdHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterEtcdHost)(nil)).Elem()
}

func (i ClusterEtcdHostArray) ToClusterEtcdHostArrayOutput() ClusterEtcdHostArrayOutput {
	return i.ToClusterEtcdHostArrayOutputWithContext(context.Background())
}

func (i ClusterEtcdHostArray) ToClusterEtcdHostArrayOutputWithContext(ctx context.Context) ClusterEtcdHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEtcdHostArrayOutput)
}

type ClusterEtcdHostOutput struct{ *pulumi.OutputState }

func (ClusterEtcdHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEtcdHost)(nil)).Elem()
}

func (o ClusterEtcdHostOutput) ToClusterEtcdHostOutput() ClusterEtcdHostOutput {
	return o
}

func (o ClusterEtcdHostOutput) ToClusterEtcdHostOutputWithContext(ctx context.Context) ClusterEtcdHostOutput {
	return o
}

// Address ip for node (string)
func (o ClusterEtcdHostOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEtcdHost) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Name of the host provisioned via docker machine (string)
func (o ClusterEtcdHostOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEtcdHost) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

type ClusterEtcdHostArrayOutput struct{ *pulumi.OutputState }

func (ClusterEtcdHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterEtcdHost)(nil)).Elem()
}

func (o ClusterEtcdHostArrayOutput) ToClusterEtcdHostArrayOutput() ClusterEtcdHostArrayOutput {
	return o
}

func (o ClusterEtcdHostArrayOutput) ToClusterEtcdHostArrayOutputWithContext(ctx context.Context) ClusterEtcdHostArrayOutput {
	return o
}

func (o ClusterEtcdHostArrayOutput) Index(i pulumi.IntInput) ClusterEtcdHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterEtcdHost {
		return vs[0].([]ClusterEtcdHost)[vs[1].(int)]
	}).(ClusterEtcdHostOutput)
}

type ClusterInactiveHost struct {
	// Address ip for node (string)
	Address *string `pulumi:"address"`
	// Name of the host provisioned via docker machine (string)
	NodeName *string `pulumi:"nodeName"`
}

// ClusterInactiveHostInput is an input type that accepts ClusterInactiveHostArgs and ClusterInactiveHostOutput values.
// You can construct a concrete instance of `ClusterInactiveHostInput` via:
//
//          ClusterInactiveHostArgs{...}
type ClusterInactiveHostInput interface {
	pulumi.Input

	ToClusterInactiveHostOutput() ClusterInactiveHostOutput
	ToClusterInactiveHostOutputWithContext(context.Context) ClusterInactiveHostOutput
}

type ClusterInactiveHostArgs struct {
	// Address ip for node (string)
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Name of the host provisioned via docker machine (string)
	NodeName pulumi.StringPtrInput `pulumi:"nodeName"`
}

func (ClusterInactiveHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInactiveHost)(nil)).Elem()
}

func (i ClusterInactiveHostArgs) ToClusterInactiveHostOutput() ClusterInactiveHostOutput {
	return i.ToClusterInactiveHostOutputWithContext(context.Background())
}

func (i ClusterInactiveHostArgs) ToClusterInactiveHostOutputWithContext(ctx context.Context) ClusterInactiveHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInactiveHostOutput)
}

// ClusterInactiveHostArrayInput is an input type that accepts ClusterInactiveHostArray and ClusterInactiveHostArrayOutput values.
// You can construct a concrete instance of `ClusterInactiveHostArrayInput` via:
//
//          ClusterInactiveHostArray{ ClusterInactiveHostArgs{...} }
type ClusterInactiveHostArrayInput interface {
	pulumi.Input

	ToClusterInactiveHostArrayOutput() ClusterInactiveHostArrayOutput
	ToClusterInactiveHostArrayOutputWithContext(context.Context) ClusterInactiveHostArrayOutput
}

type ClusterInactiveHostArray []ClusterInactiveHostInput

func (ClusterInactiveHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterInactiveHost)(nil)).Elem()
}

func (i ClusterInactiveHostArray) ToClusterInactiveHostArrayOutput() ClusterInactiveHostArrayOutput {
	return i.ToClusterInactiveHostArrayOutputWithContext(context.Background())
}

func (i ClusterInactiveHostArray) ToClusterInactiveHostArrayOutputWithContext(ctx context.Context) ClusterInactiveHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterInactiveHostArrayOutput)
}

type ClusterInactiveHostOutput struct{ *pulumi.OutputState }

func (ClusterInactiveHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterInactiveHost)(nil)).Elem()
}

func (o ClusterInactiveHostOutput) ToClusterInactiveHostOutput() ClusterInactiveHostOutput {
	return o
}

func (o ClusterInactiveHostOutput) ToClusterInactiveHostOutputWithContext(ctx context.Context) ClusterInactiveHostOutput {
	return o
}

// Address ip for node (string)
func (o ClusterInactiveHostOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInactiveHost) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Name of the host provisioned via docker machine (string)
func (o ClusterInactiveHostOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterInactiveHost) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

type ClusterInactiveHostArrayOutput struct{ *pulumi.OutputState }

func (ClusterInactiveHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterInactiveHost)(nil)).Elem()
}

func (o ClusterInactiveHostArrayOutput) ToClusterInactiveHostArrayOutput() ClusterInactiveHostArrayOutput {
	return o
}

func (o ClusterInactiveHostArrayOutput) ToClusterInactiveHostArrayOutputWithContext(ctx context.Context) ClusterInactiveHostArrayOutput {
	return o
}

func (o ClusterInactiveHostArrayOutput) Index(i pulumi.IntInput) ClusterInactiveHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterInactiveHost {
		return vs[0].([]ClusterInactiveHost)[vs[1].(int)]
	}).(ClusterInactiveHostOutput)
}

type ClusterIngress struct {
	// Ingress controller DNS policy. `ClusterFirstWithHostNet`, `ClusterFirst`, `Default`, and `None` are supported. [K8S dns Policy](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy) (string)
	DnsPolicy *string `pulumi:"dnsPolicy"`
	// Extra arguments for scheduler service (map)
	ExtraArgs map[string]interface{} `pulumi:"extraArgs"`
	// Node selector key pair (map)
	NodeSelector map[string]interface{} `pulumi:"nodeSelector"`
	// Network provider options (map)
	Options map[string]interface{} `pulumi:"options"`
	// Monitoring provider (string)
	Provider *string `pulumi:"provider"`
}

// ClusterIngressInput is an input type that accepts ClusterIngressArgs and ClusterIngressOutput values.
// You can construct a concrete instance of `ClusterIngressInput` via:
//
//          ClusterIngressArgs{...}
type ClusterIngressInput interface {
	pulumi.Input

	ToClusterIngressOutput() ClusterIngressOutput
	ToClusterIngressOutputWithContext(context.Context) ClusterIngressOutput
}

type ClusterIngressArgs struct {
	// Ingress controller DNS policy. `ClusterFirstWithHostNet`, `ClusterFirst`, `Default`, and `None` are supported. [K8S dns Policy](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy) (string)
	DnsPolicy pulumi.StringPtrInput `pulumi:"dnsPolicy"`
	// Extra arguments for scheduler service (map)
	ExtraArgs pulumi.MapInput `pulumi:"extraArgs"`
	// Node selector key pair (map)
	NodeSelector pulumi.MapInput `pulumi:"nodeSelector"`
	// Network provider options (map)
	Options pulumi.MapInput `pulumi:"options"`
	// Monitoring provider (string)
	Provider pulumi.StringPtrInput `pulumi:"provider"`
}

func (ClusterIngressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIngress)(nil)).Elem()
}

func (i ClusterIngressArgs) ToClusterIngressOutput() ClusterIngressOutput {
	return i.ToClusterIngressOutputWithContext(context.Background())
}

func (i ClusterIngressArgs) ToClusterIngressOutputWithContext(ctx context.Context) ClusterIngressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIngressOutput)
}

func (i ClusterIngressArgs) ToClusterIngressPtrOutput() ClusterIngressPtrOutput {
	return i.ToClusterIngressPtrOutputWithContext(context.Background())
}

func (i ClusterIngressArgs) ToClusterIngressPtrOutputWithContext(ctx context.Context) ClusterIngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIngressOutput).ToClusterIngressPtrOutputWithContext(ctx)
}

// ClusterIngressPtrInput is an input type that accepts ClusterIngressArgs, ClusterIngressPtr and ClusterIngressPtrOutput values.
// You can construct a concrete instance of `ClusterIngressPtrInput` via:
//
//          ClusterIngressArgs{...}
//
//  or:
//
//          nil
type ClusterIngressPtrInput interface {
	pulumi.Input

	ToClusterIngressPtrOutput() ClusterIngressPtrOutput
	ToClusterIngressPtrOutputWithContext(context.Context) ClusterIngressPtrOutput
}

type clusterIngressPtrType ClusterIngressArgs

func ClusterIngressPtr(v *ClusterIngressArgs) ClusterIngressPtrInput {
	return (*clusterIngressPtrType)(v)
}

func (*clusterIngressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIngress)(nil)).Elem()
}

func (i *clusterIngressPtrType) ToClusterIngressPtrOutput() ClusterIngressPtrOutput {
	return i.ToClusterIngressPtrOutputWithContext(context.Background())
}

func (i *clusterIngressPtrType) ToClusterIngressPtrOutputWithContext(ctx context.Context) ClusterIngressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIngressPtrOutput)
}

type ClusterIngressOutput struct{ *pulumi.OutputState }

func (ClusterIngressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIngress)(nil)).Elem()
}

func (o ClusterIngressOutput) ToClusterIngressOutput() ClusterIngressOutput {
	return o
}

func (o ClusterIngressOutput) ToClusterIngressOutputWithContext(ctx context.Context) ClusterIngressOutput {
	return o
}

func (o ClusterIngressOutput) ToClusterIngressPtrOutput() ClusterIngressPtrOutput {
	return o.ToClusterIngressPtrOutputWithContext(context.Background())
}

func (o ClusterIngressOutput) ToClusterIngressPtrOutputWithContext(ctx context.Context) ClusterIngressPtrOutput {
	return o.ApplyT(func(v ClusterIngress) *ClusterIngress {
		return &v
	}).(ClusterIngressPtrOutput)
}

// Ingress controller DNS policy. `ClusterFirstWithHostNet`, `ClusterFirst`, `Default`, and `None` are supported. [K8S dns Policy](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy) (string)
func (o ClusterIngressOutput) DnsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIngress) *string { return v.DnsPolicy }).(pulumi.StringPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterIngressOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterIngress) map[string]interface{} { return v.ExtraArgs }).(pulumi.MapOutput)
}

// Node selector key pair (map)
func (o ClusterIngressOutput) NodeSelector() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterIngress) map[string]interface{} { return v.NodeSelector }).(pulumi.MapOutput)
}

// Network provider options (map)
func (o ClusterIngressOutput) Options() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterIngress) map[string]interface{} { return v.Options }).(pulumi.MapOutput)
}

// Monitoring provider (string)
func (o ClusterIngressOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterIngress) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type ClusterIngressPtrOutput struct{ *pulumi.OutputState }

func (ClusterIngressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIngress)(nil)).Elem()
}

func (o ClusterIngressPtrOutput) ToClusterIngressPtrOutput() ClusterIngressPtrOutput {
	return o
}

func (o ClusterIngressPtrOutput) ToClusterIngressPtrOutputWithContext(ctx context.Context) ClusterIngressPtrOutput {
	return o
}

func (o ClusterIngressPtrOutput) Elem() ClusterIngressOutput {
	return o.ApplyT(func(v *ClusterIngress) ClusterIngress { return *v }).(ClusterIngressOutput)
}

// Ingress controller DNS policy. `ClusterFirstWithHostNet`, `ClusterFirst`, `Default`, and `None` are supported. [K8S dns Policy](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy) (string)
func (o ClusterIngressPtrOutput) DnsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIngress) *string {
		if v == nil {
			return nil
		}
		return v.DnsPolicy
	}).(pulumi.StringPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterIngressPtrOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterIngress) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.MapOutput)
}

// Node selector key pair (map)
func (o ClusterIngressPtrOutput) NodeSelector() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterIngress) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.NodeSelector
	}).(pulumi.MapOutput)
}

// Network provider options (map)
func (o ClusterIngressPtrOutput) Options() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterIngress) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.MapOutput)
}

// Monitoring provider (string)
func (o ClusterIngressPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterIngress) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

type ClusterMonitoring struct {
	// Node selector key pair (map)
	NodeSelector map[string]interface{} `pulumi:"nodeSelector"`
	// Network provider options (map)
	Options map[string]interface{} `pulumi:"options"`
	// Monitoring provider (string)
	Provider *string `pulumi:"provider"`
}

// ClusterMonitoringInput is an input type that accepts ClusterMonitoringArgs and ClusterMonitoringOutput values.
// You can construct a concrete instance of `ClusterMonitoringInput` via:
//
//          ClusterMonitoringArgs{...}
type ClusterMonitoringInput interface {
	pulumi.Input

	ToClusterMonitoringOutput() ClusterMonitoringOutput
	ToClusterMonitoringOutputWithContext(context.Context) ClusterMonitoringOutput
}

type ClusterMonitoringArgs struct {
	// Node selector key pair (map)
	NodeSelector pulumi.MapInput `pulumi:"nodeSelector"`
	// Network provider options (map)
	Options pulumi.MapInput `pulumi:"options"`
	// Monitoring provider (string)
	Provider pulumi.StringPtrInput `pulumi:"provider"`
}

func (ClusterMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMonitoring)(nil)).Elem()
}

func (i ClusterMonitoringArgs) ToClusterMonitoringOutput() ClusterMonitoringOutput {
	return i.ToClusterMonitoringOutputWithContext(context.Background())
}

func (i ClusterMonitoringArgs) ToClusterMonitoringOutputWithContext(ctx context.Context) ClusterMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMonitoringOutput)
}

func (i ClusterMonitoringArgs) ToClusterMonitoringPtrOutput() ClusterMonitoringPtrOutput {
	return i.ToClusterMonitoringPtrOutputWithContext(context.Background())
}

func (i ClusterMonitoringArgs) ToClusterMonitoringPtrOutputWithContext(ctx context.Context) ClusterMonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMonitoringOutput).ToClusterMonitoringPtrOutputWithContext(ctx)
}

// ClusterMonitoringPtrInput is an input type that accepts ClusterMonitoringArgs, ClusterMonitoringPtr and ClusterMonitoringPtrOutput values.
// You can construct a concrete instance of `ClusterMonitoringPtrInput` via:
//
//          ClusterMonitoringArgs{...}
//
//  or:
//
//          nil
type ClusterMonitoringPtrInput interface {
	pulumi.Input

	ToClusterMonitoringPtrOutput() ClusterMonitoringPtrOutput
	ToClusterMonitoringPtrOutputWithContext(context.Context) ClusterMonitoringPtrOutput
}

type clusterMonitoringPtrType ClusterMonitoringArgs

func ClusterMonitoringPtr(v *ClusterMonitoringArgs) ClusterMonitoringPtrInput {
	return (*clusterMonitoringPtrType)(v)
}

func (*clusterMonitoringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMonitoring)(nil)).Elem()
}

func (i *clusterMonitoringPtrType) ToClusterMonitoringPtrOutput() ClusterMonitoringPtrOutput {
	return i.ToClusterMonitoringPtrOutputWithContext(context.Background())
}

func (i *clusterMonitoringPtrType) ToClusterMonitoringPtrOutputWithContext(ctx context.Context) ClusterMonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMonitoringPtrOutput)
}

type ClusterMonitoringOutput struct{ *pulumi.OutputState }

func (ClusterMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMonitoring)(nil)).Elem()
}

func (o ClusterMonitoringOutput) ToClusterMonitoringOutput() ClusterMonitoringOutput {
	return o
}

func (o ClusterMonitoringOutput) ToClusterMonitoringOutputWithContext(ctx context.Context) ClusterMonitoringOutput {
	return o
}

func (o ClusterMonitoringOutput) ToClusterMonitoringPtrOutput() ClusterMonitoringPtrOutput {
	return o.ToClusterMonitoringPtrOutputWithContext(context.Background())
}

func (o ClusterMonitoringOutput) ToClusterMonitoringPtrOutputWithContext(ctx context.Context) ClusterMonitoringPtrOutput {
	return o.ApplyT(func(v ClusterMonitoring) *ClusterMonitoring {
		return &v
	}).(ClusterMonitoringPtrOutput)
}

// Node selector key pair (map)
func (o ClusterMonitoringOutput) NodeSelector() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterMonitoring) map[string]interface{} { return v.NodeSelector }).(pulumi.MapOutput)
}

// Network provider options (map)
func (o ClusterMonitoringOutput) Options() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterMonitoring) map[string]interface{} { return v.Options }).(pulumi.MapOutput)
}

// Monitoring provider (string)
func (o ClusterMonitoringOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMonitoring) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type ClusterMonitoringPtrOutput struct{ *pulumi.OutputState }

func (ClusterMonitoringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterMonitoring)(nil)).Elem()
}

func (o ClusterMonitoringPtrOutput) ToClusterMonitoringPtrOutput() ClusterMonitoringPtrOutput {
	return o
}

func (o ClusterMonitoringPtrOutput) ToClusterMonitoringPtrOutputWithContext(ctx context.Context) ClusterMonitoringPtrOutput {
	return o
}

func (o ClusterMonitoringPtrOutput) Elem() ClusterMonitoringOutput {
	return o.ApplyT(func(v *ClusterMonitoring) ClusterMonitoring { return *v }).(ClusterMonitoringOutput)
}

// Node selector key pair (map)
func (o ClusterMonitoringPtrOutput) NodeSelector() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterMonitoring) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.NodeSelector
	}).(pulumi.MapOutput)
}

// Network provider options (map)
func (o ClusterMonitoringPtrOutput) Options() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterMonitoring) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.MapOutput)
}

// Monitoring provider (string)
func (o ClusterMonitoringPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterMonitoring) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

type ClusterNetwork struct {
	// Aci network provider config (list maxitems:1)
	AciNetworkProvider *ClusterNetworkAciNetworkProvider `pulumi:"aciNetworkProvider"`
	// Calico network provider config (list maxitems:1)
	CalicoNetworkProvider *ClusterNetworkCalicoNetworkProvider `pulumi:"calicoNetworkProvider"`
	// Canal network provider config (list maxitems:1)
	CanalNetworkProvider *ClusterNetworkCanalNetworkProvider `pulumi:"canalNetworkProvider"`
	// Flannel network provider config (list maxitems:1)
	FlannelNetworkProvider *ClusterNetworkFlannelNetworkProvider `pulumi:"flannelNetworkProvider"`
	// Network provider MTU. Default `0` (int)
	Mtu *int `pulumi:"mtu"`
	// Network provider options (map)
	Options map[string]interface{} `pulumi:"options"`
	// Network provider plugin. `calico`, `canal` (default), `flannel`, `none` and `weave` are supported. (string)
	Plugin *string `pulumi:"plugin"`
	// Weave network provider config (list maxitems:1)
	WeaveNetworkProvider *ClusterNetworkWeaveNetworkProvider `pulumi:"weaveNetworkProvider"`
}

// ClusterNetworkInput is an input type that accepts ClusterNetworkArgs and ClusterNetworkOutput values.
// You can construct a concrete instance of `ClusterNetworkInput` via:
//
//          ClusterNetworkArgs{...}
type ClusterNetworkInput interface {
	pulumi.Input

	ToClusterNetworkOutput() ClusterNetworkOutput
	ToClusterNetworkOutputWithContext(context.Context) ClusterNetworkOutput
}

type ClusterNetworkArgs struct {
	// Aci network provider config (list maxitems:1)
	AciNetworkProvider ClusterNetworkAciNetworkProviderPtrInput `pulumi:"aciNetworkProvider"`
	// Calico network provider config (list maxitems:1)
	CalicoNetworkProvider ClusterNetworkCalicoNetworkProviderPtrInput `pulumi:"calicoNetworkProvider"`
	// Canal network provider config (list maxitems:1)
	CanalNetworkProvider ClusterNetworkCanalNetworkProviderPtrInput `pulumi:"canalNetworkProvider"`
	// Flannel network provider config (list maxitems:1)
	FlannelNetworkProvider ClusterNetworkFlannelNetworkProviderPtrInput `pulumi:"flannelNetworkProvider"`
	// Network provider MTU. Default `0` (int)
	Mtu pulumi.IntPtrInput `pulumi:"mtu"`
	// Network provider options (map)
	Options pulumi.MapInput `pulumi:"options"`
	// Network provider plugin. `calico`, `canal` (default), `flannel`, `none` and `weave` are supported. (string)
	Plugin pulumi.StringPtrInput `pulumi:"plugin"`
	// Weave network provider config (list maxitems:1)
	WeaveNetworkProvider ClusterNetworkWeaveNetworkProviderPtrInput `pulumi:"weaveNetworkProvider"`
}

func (ClusterNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetwork)(nil)).Elem()
}

func (i ClusterNetworkArgs) ToClusterNetworkOutput() ClusterNetworkOutput {
	return i.ToClusterNetworkOutputWithContext(context.Background())
}

func (i ClusterNetworkArgs) ToClusterNetworkOutputWithContext(ctx context.Context) ClusterNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkOutput)
}

func (i ClusterNetworkArgs) ToClusterNetworkPtrOutput() ClusterNetworkPtrOutput {
	return i.ToClusterNetworkPtrOutputWithContext(context.Background())
}

func (i ClusterNetworkArgs) ToClusterNetworkPtrOutputWithContext(ctx context.Context) ClusterNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkOutput).ToClusterNetworkPtrOutputWithContext(ctx)
}

// ClusterNetworkPtrInput is an input type that accepts ClusterNetworkArgs, ClusterNetworkPtr and ClusterNetworkPtrOutput values.
// You can construct a concrete instance of `ClusterNetworkPtrInput` via:
//
//          ClusterNetworkArgs{...}
//
//  or:
//
//          nil
type ClusterNetworkPtrInput interface {
	pulumi.Input

	ToClusterNetworkPtrOutput() ClusterNetworkPtrOutput
	ToClusterNetworkPtrOutputWithContext(context.Context) ClusterNetworkPtrOutput
}

type clusterNetworkPtrType ClusterNetworkArgs

func ClusterNetworkPtr(v *ClusterNetworkArgs) ClusterNetworkPtrInput {
	return (*clusterNetworkPtrType)(v)
}

func (*clusterNetworkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetwork)(nil)).Elem()
}

func (i *clusterNetworkPtrType) ToClusterNetworkPtrOutput() ClusterNetworkPtrOutput {
	return i.ToClusterNetworkPtrOutputWithContext(context.Background())
}

func (i *clusterNetworkPtrType) ToClusterNetworkPtrOutputWithContext(ctx context.Context) ClusterNetworkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkPtrOutput)
}

type ClusterNetworkOutput struct{ *pulumi.OutputState }

func (ClusterNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetwork)(nil)).Elem()
}

func (o ClusterNetworkOutput) ToClusterNetworkOutput() ClusterNetworkOutput {
	return o
}

func (o ClusterNetworkOutput) ToClusterNetworkOutputWithContext(ctx context.Context) ClusterNetworkOutput {
	return o
}

func (o ClusterNetworkOutput) ToClusterNetworkPtrOutput() ClusterNetworkPtrOutput {
	return o.ToClusterNetworkPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkOutput) ToClusterNetworkPtrOutputWithContext(ctx context.Context) ClusterNetworkPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *ClusterNetwork {
		return &v
	}).(ClusterNetworkPtrOutput)
}

// Aci network provider config (list maxitems:1)
func (o ClusterNetworkOutput) AciNetworkProvider() ClusterNetworkAciNetworkProviderPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *ClusterNetworkAciNetworkProvider { return v.AciNetworkProvider }).(ClusterNetworkAciNetworkProviderPtrOutput)
}

// Calico network provider config (list maxitems:1)
func (o ClusterNetworkOutput) CalicoNetworkProvider() ClusterNetworkCalicoNetworkProviderPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *ClusterNetworkCalicoNetworkProvider { return v.CalicoNetworkProvider }).(ClusterNetworkCalicoNetworkProviderPtrOutput)
}

// Canal network provider config (list maxitems:1)
func (o ClusterNetworkOutput) CanalNetworkProvider() ClusterNetworkCanalNetworkProviderPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *ClusterNetworkCanalNetworkProvider { return v.CanalNetworkProvider }).(ClusterNetworkCanalNetworkProviderPtrOutput)
}

// Flannel network provider config (list maxitems:1)
func (o ClusterNetworkOutput) FlannelNetworkProvider() ClusterNetworkFlannelNetworkProviderPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *ClusterNetworkFlannelNetworkProvider { return v.FlannelNetworkProvider }).(ClusterNetworkFlannelNetworkProviderPtrOutput)
}

// Network provider MTU. Default `0` (int)
func (o ClusterNetworkOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *int { return v.Mtu }).(pulumi.IntPtrOutput)
}

// Network provider options (map)
func (o ClusterNetworkOutput) Options() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterNetwork) map[string]interface{} { return v.Options }).(pulumi.MapOutput)
}

// Network provider plugin. `calico`, `canal` (default), `flannel`, `none` and `weave` are supported. (string)
func (o ClusterNetworkOutput) Plugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *string { return v.Plugin }).(pulumi.StringPtrOutput)
}

// Weave network provider config (list maxitems:1)
func (o ClusterNetworkOutput) WeaveNetworkProvider() ClusterNetworkWeaveNetworkProviderPtrOutput {
	return o.ApplyT(func(v ClusterNetwork) *ClusterNetworkWeaveNetworkProvider { return v.WeaveNetworkProvider }).(ClusterNetworkWeaveNetworkProviderPtrOutput)
}

type ClusterNetworkPtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetwork)(nil)).Elem()
}

func (o ClusterNetworkPtrOutput) ToClusterNetworkPtrOutput() ClusterNetworkPtrOutput {
	return o
}

func (o ClusterNetworkPtrOutput) ToClusterNetworkPtrOutputWithContext(ctx context.Context) ClusterNetworkPtrOutput {
	return o
}

func (o ClusterNetworkPtrOutput) Elem() ClusterNetworkOutput {
	return o.ApplyT(func(v *ClusterNetwork) ClusterNetwork { return *v }).(ClusterNetworkOutput)
}

// Aci network provider config (list maxitems:1)
func (o ClusterNetworkPtrOutput) AciNetworkProvider() ClusterNetworkAciNetworkProviderPtrOutput {
	return o.ApplyT(func(v *ClusterNetwork) *ClusterNetworkAciNetworkProvider {
		if v == nil {
			return nil
		}
		return v.AciNetworkProvider
	}).(ClusterNetworkAciNetworkProviderPtrOutput)
}

// Calico network provider config (list maxitems:1)
func (o ClusterNetworkPtrOutput) CalicoNetworkProvider() ClusterNetworkCalicoNetworkProviderPtrOutput {
	return o.ApplyT(func(v *ClusterNetwork) *ClusterNetworkCalicoNetworkProvider {
		if v == nil {
			return nil
		}
		return v.CalicoNetworkProvider
	}).(ClusterNetworkCalicoNetworkProviderPtrOutput)
}

// Canal network provider config (list maxitems:1)
func (o ClusterNetworkPtrOutput) CanalNetworkProvider() ClusterNetworkCanalNetworkProviderPtrOutput {
	return o.ApplyT(func(v *ClusterNetwork) *ClusterNetworkCanalNetworkProvider {
		if v == nil {
			return nil
		}
		return v.CanalNetworkProvider
	}).(ClusterNetworkCanalNetworkProviderPtrOutput)
}

// Flannel network provider config (list maxitems:1)
func (o ClusterNetworkPtrOutput) FlannelNetworkProvider() ClusterNetworkFlannelNetworkProviderPtrOutput {
	return o.ApplyT(func(v *ClusterNetwork) *ClusterNetworkFlannelNetworkProvider {
		if v == nil {
			return nil
		}
		return v.FlannelNetworkProvider
	}).(ClusterNetworkFlannelNetworkProviderPtrOutput)
}

// Network provider MTU. Default `0` (int)
func (o ClusterNetworkPtrOutput) Mtu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterNetwork) *int {
		if v == nil {
			return nil
		}
		return v.Mtu
	}).(pulumi.IntPtrOutput)
}

// Network provider options (map)
func (o ClusterNetworkPtrOutput) Options() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterNetwork) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.MapOutput)
}

// Network provider plugin. `calico`, `canal` (default), `flannel`, `none` and `weave` are supported. (string)
func (o ClusterNetworkPtrOutput) Plugin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetwork) *string {
		if v == nil {
			return nil
		}
		return v.Plugin
	}).(pulumi.StringPtrOutput)
}

// Weave network provider config (list maxitems:1)
func (o ClusterNetworkPtrOutput) WeaveNetworkProvider() ClusterNetworkWeaveNetworkProviderPtrOutput {
	return o.ApplyT(func(v *ClusterNetwork) *ClusterNetworkWeaveNetworkProvider {
		if v == nil {
			return nil
		}
		return v.WeaveNetworkProvider
	}).(ClusterNetworkWeaveNetworkProviderPtrOutput)
}

type ClusterNetworkAciNetworkProvider struct {
	// Attachment entity profile name on aci (string)
	Aep string `pulumi:"aep"`
	// Ip address for apic hosts (list)
	ApicHosts []string `pulumi:"apicHosts"`
	// Base64 encoded certificate for aci apic user (string)
	ApicUserCrt string `pulumi:"apicUserCrt"`
	// Base64 encoded private key for aci apic user (string)
	ApicUserKey string `pulumi:"apicUserKey"`
	// User name for aci apic (string)
	ApicUserName string `pulumi:"apicUserName"`
	// One of the supported encap types for aci(vlan/vxlan) (string)
	EncapType string `pulumi:"encapType"`
	// Subnet to use for dynamic external IPs on aci (string)
	// * `externStatic"` - (Required) Subnet to use for static external IPs on aci (string)
	ExternDynamic string `pulumi:"externDynamic"`
	ExternStatic  string `pulumi:"externStatic"`
	// Vlan for infra network on aci (string)
	InfraVlan string `pulumi:"infraVlan"`
	// Vlan for node network on aci (string)
	KubeApiVlan string `pulumi:"kubeApiVlan"`
	// L3Out on aci (string)
	L3out string `pulumi:"l3out"`
	// L3out external networks on aci (list)
	L3outExternalNetworks []string `pulumi:"l3outExternalNetworks"`
	// Mcast range end address for endpoint groups on aci (string)
	McastRangeEnd string `pulumi:"mcastRangeEnd"`
	// Mcast range start address for endpoint groups on aci (string)
	McastRangeStart string `pulumi:"mcastRangeStart"`
	// Kubernetes node address subnet (string)
	NodeSubnet string `pulumi:"nodeSubnet"`
	// Subnet to use for service graph endpoints on aci (string)
	NodeSvcSubnet string `pulumi:"nodeSvcSubnet"`
	// Vlan for service graph nodes on aci (string)
	ServiceVlan string `pulumi:"serviceVlan"`
	// Port end range for Source Network Address Translation on aci (string)
	SnatPortRangeEnd *string `pulumi:"snatPortRangeEnd"`
	// Port start range for Source Network Address Translation on aci (string)
	SnatPortRangeStart *string `pulumi:"snatPortRangeStart"`
	// Ports per node for Source Network Address Translation on aci (string)
	SnatPortsPerNode *string `pulumi:"snatPortsPerNode"`
	// Unique suffix for all cluster related objects in aci (string)
	SystemId string `pulumi:"systemId"`
	// UUID for this version of the input configuration (string)
	Token string `pulumi:"token"`
	// VRF Name on aci (string)
	VrfName string `pulumi:"vrfName"`
	// Tenant for VRF on aci (string)
	VrfTenant string `pulumi:"vrfTenant"`
}

// ClusterNetworkAciNetworkProviderInput is an input type that accepts ClusterNetworkAciNetworkProviderArgs and ClusterNetworkAciNetworkProviderOutput values.
// You can construct a concrete instance of `ClusterNetworkAciNetworkProviderInput` via:
//
//          ClusterNetworkAciNetworkProviderArgs{...}
type ClusterNetworkAciNetworkProviderInput interface {
	pulumi.Input

	ToClusterNetworkAciNetworkProviderOutput() ClusterNetworkAciNetworkProviderOutput
	ToClusterNetworkAciNetworkProviderOutputWithContext(context.Context) ClusterNetworkAciNetworkProviderOutput
}

type ClusterNetworkAciNetworkProviderArgs struct {
	// Attachment entity profile name on aci (string)
	Aep pulumi.StringInput `pulumi:"aep"`
	// Ip address for apic hosts (list)
	ApicHosts pulumi.StringArrayInput `pulumi:"apicHosts"`
	// Base64 encoded certificate for aci apic user (string)
	ApicUserCrt pulumi.StringInput `pulumi:"apicUserCrt"`
	// Base64 encoded private key for aci apic user (string)
	ApicUserKey pulumi.StringInput `pulumi:"apicUserKey"`
	// User name for aci apic (string)
	ApicUserName pulumi.StringInput `pulumi:"apicUserName"`
	// One of the supported encap types for aci(vlan/vxlan) (string)
	EncapType pulumi.StringInput `pulumi:"encapType"`
	// Subnet to use for dynamic external IPs on aci (string)
	// * `externStatic"` - (Required) Subnet to use for static external IPs on aci (string)
	ExternDynamic pulumi.StringInput `pulumi:"externDynamic"`
	ExternStatic  pulumi.StringInput `pulumi:"externStatic"`
	// Vlan for infra network on aci (string)
	InfraVlan pulumi.StringInput `pulumi:"infraVlan"`
	// Vlan for node network on aci (string)
	KubeApiVlan pulumi.StringInput `pulumi:"kubeApiVlan"`
	// L3Out on aci (string)
	L3out pulumi.StringInput `pulumi:"l3out"`
	// L3out external networks on aci (list)
	L3outExternalNetworks pulumi.StringArrayInput `pulumi:"l3outExternalNetworks"`
	// Mcast range end address for endpoint groups on aci (string)
	McastRangeEnd pulumi.StringInput `pulumi:"mcastRangeEnd"`
	// Mcast range start address for endpoint groups on aci (string)
	McastRangeStart pulumi.StringInput `pulumi:"mcastRangeStart"`
	// Kubernetes node address subnet (string)
	NodeSubnet pulumi.StringInput `pulumi:"nodeSubnet"`
	// Subnet to use for service graph endpoints on aci (string)
	NodeSvcSubnet pulumi.StringInput `pulumi:"nodeSvcSubnet"`
	// Vlan for service graph nodes on aci (string)
	ServiceVlan pulumi.StringInput `pulumi:"serviceVlan"`
	// Port end range for Source Network Address Translation on aci (string)
	SnatPortRangeEnd pulumi.StringPtrInput `pulumi:"snatPortRangeEnd"`
	// Port start range for Source Network Address Translation on aci (string)
	SnatPortRangeStart pulumi.StringPtrInput `pulumi:"snatPortRangeStart"`
	// Ports per node for Source Network Address Translation on aci (string)
	SnatPortsPerNode pulumi.StringPtrInput `pulumi:"snatPortsPerNode"`
	// Unique suffix for all cluster related objects in aci (string)
	SystemId pulumi.StringInput `pulumi:"systemId"`
	// UUID for this version of the input configuration (string)
	Token pulumi.StringInput `pulumi:"token"`
	// VRF Name on aci (string)
	VrfName pulumi.StringInput `pulumi:"vrfName"`
	// Tenant for VRF on aci (string)
	VrfTenant pulumi.StringInput `pulumi:"vrfTenant"`
}

func (ClusterNetworkAciNetworkProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkAciNetworkProvider)(nil)).Elem()
}

func (i ClusterNetworkAciNetworkProviderArgs) ToClusterNetworkAciNetworkProviderOutput() ClusterNetworkAciNetworkProviderOutput {
	return i.ToClusterNetworkAciNetworkProviderOutputWithContext(context.Background())
}

func (i ClusterNetworkAciNetworkProviderArgs) ToClusterNetworkAciNetworkProviderOutputWithContext(ctx context.Context) ClusterNetworkAciNetworkProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkAciNetworkProviderOutput)
}

func (i ClusterNetworkAciNetworkProviderArgs) ToClusterNetworkAciNetworkProviderPtrOutput() ClusterNetworkAciNetworkProviderPtrOutput {
	return i.ToClusterNetworkAciNetworkProviderPtrOutputWithContext(context.Background())
}

func (i ClusterNetworkAciNetworkProviderArgs) ToClusterNetworkAciNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkAciNetworkProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkAciNetworkProviderOutput).ToClusterNetworkAciNetworkProviderPtrOutputWithContext(ctx)
}

// ClusterNetworkAciNetworkProviderPtrInput is an input type that accepts ClusterNetworkAciNetworkProviderArgs, ClusterNetworkAciNetworkProviderPtr and ClusterNetworkAciNetworkProviderPtrOutput values.
// You can construct a concrete instance of `ClusterNetworkAciNetworkProviderPtrInput` via:
//
//          ClusterNetworkAciNetworkProviderArgs{...}
//
//  or:
//
//          nil
type ClusterNetworkAciNetworkProviderPtrInput interface {
	pulumi.Input

	ToClusterNetworkAciNetworkProviderPtrOutput() ClusterNetworkAciNetworkProviderPtrOutput
	ToClusterNetworkAciNetworkProviderPtrOutputWithContext(context.Context) ClusterNetworkAciNetworkProviderPtrOutput
}

type clusterNetworkAciNetworkProviderPtrType ClusterNetworkAciNetworkProviderArgs

func ClusterNetworkAciNetworkProviderPtr(v *ClusterNetworkAciNetworkProviderArgs) ClusterNetworkAciNetworkProviderPtrInput {
	return (*clusterNetworkAciNetworkProviderPtrType)(v)
}

func (*clusterNetworkAciNetworkProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkAciNetworkProvider)(nil)).Elem()
}

func (i *clusterNetworkAciNetworkProviderPtrType) ToClusterNetworkAciNetworkProviderPtrOutput() ClusterNetworkAciNetworkProviderPtrOutput {
	return i.ToClusterNetworkAciNetworkProviderPtrOutputWithContext(context.Background())
}

func (i *clusterNetworkAciNetworkProviderPtrType) ToClusterNetworkAciNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkAciNetworkProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkAciNetworkProviderPtrOutput)
}

type ClusterNetworkAciNetworkProviderOutput struct{ *pulumi.OutputState }

func (ClusterNetworkAciNetworkProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkAciNetworkProvider)(nil)).Elem()
}

func (o ClusterNetworkAciNetworkProviderOutput) ToClusterNetworkAciNetworkProviderOutput() ClusterNetworkAciNetworkProviderOutput {
	return o
}

func (o ClusterNetworkAciNetworkProviderOutput) ToClusterNetworkAciNetworkProviderOutputWithContext(ctx context.Context) ClusterNetworkAciNetworkProviderOutput {
	return o
}

func (o ClusterNetworkAciNetworkProviderOutput) ToClusterNetworkAciNetworkProviderPtrOutput() ClusterNetworkAciNetworkProviderPtrOutput {
	return o.ToClusterNetworkAciNetworkProviderPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkAciNetworkProviderOutput) ToClusterNetworkAciNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkAciNetworkProviderPtrOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) *ClusterNetworkAciNetworkProvider {
		return &v
	}).(ClusterNetworkAciNetworkProviderPtrOutput)
}

// Attachment entity profile name on aci (string)
func (o ClusterNetworkAciNetworkProviderOutput) Aep() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.Aep }).(pulumi.StringOutput)
}

// Ip address for apic hosts (list)
func (o ClusterNetworkAciNetworkProviderOutput) ApicHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) []string { return v.ApicHosts }).(pulumi.StringArrayOutput)
}

// Base64 encoded certificate for aci apic user (string)
func (o ClusterNetworkAciNetworkProviderOutput) ApicUserCrt() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.ApicUserCrt }).(pulumi.StringOutput)
}

// Base64 encoded private key for aci apic user (string)
func (o ClusterNetworkAciNetworkProviderOutput) ApicUserKey() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.ApicUserKey }).(pulumi.StringOutput)
}

// User name for aci apic (string)
func (o ClusterNetworkAciNetworkProviderOutput) ApicUserName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.ApicUserName }).(pulumi.StringOutput)
}

// One of the supported encap types for aci(vlan/vxlan) (string)
func (o ClusterNetworkAciNetworkProviderOutput) EncapType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.EncapType }).(pulumi.StringOutput)
}

// Subnet to use for dynamic external IPs on aci (string)
// * `externStatic"` - (Required) Subnet to use for static external IPs on aci (string)
func (o ClusterNetworkAciNetworkProviderOutput) ExternDynamic() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.ExternDynamic }).(pulumi.StringOutput)
}

func (o ClusterNetworkAciNetworkProviderOutput) ExternStatic() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.ExternStatic }).(pulumi.StringOutput)
}

// Vlan for infra network on aci (string)
func (o ClusterNetworkAciNetworkProviderOutput) InfraVlan() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.InfraVlan }).(pulumi.StringOutput)
}

// Vlan for node network on aci (string)
func (o ClusterNetworkAciNetworkProviderOutput) KubeApiVlan() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.KubeApiVlan }).(pulumi.StringOutput)
}

// L3Out on aci (string)
func (o ClusterNetworkAciNetworkProviderOutput) L3out() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.L3out }).(pulumi.StringOutput)
}

// L3out external networks on aci (list)
func (o ClusterNetworkAciNetworkProviderOutput) L3outExternalNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) []string { return v.L3outExternalNetworks }).(pulumi.StringArrayOutput)
}

// Mcast range end address for endpoint groups on aci (string)
func (o ClusterNetworkAciNetworkProviderOutput) McastRangeEnd() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.McastRangeEnd }).(pulumi.StringOutput)
}

// Mcast range start address for endpoint groups on aci (string)
func (o ClusterNetworkAciNetworkProviderOutput) McastRangeStart() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.McastRangeStart }).(pulumi.StringOutput)
}

// Kubernetes node address subnet (string)
func (o ClusterNetworkAciNetworkProviderOutput) NodeSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.NodeSubnet }).(pulumi.StringOutput)
}

// Subnet to use for service graph endpoints on aci (string)
func (o ClusterNetworkAciNetworkProviderOutput) NodeSvcSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.NodeSvcSubnet }).(pulumi.StringOutput)
}

// Vlan for service graph nodes on aci (string)
func (o ClusterNetworkAciNetworkProviderOutput) ServiceVlan() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.ServiceVlan }).(pulumi.StringOutput)
}

// Port end range for Source Network Address Translation on aci (string)
func (o ClusterNetworkAciNetworkProviderOutput) SnatPortRangeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) *string { return v.SnatPortRangeEnd }).(pulumi.StringPtrOutput)
}

// Port start range for Source Network Address Translation on aci (string)
func (o ClusterNetworkAciNetworkProviderOutput) SnatPortRangeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) *string { return v.SnatPortRangeStart }).(pulumi.StringPtrOutput)
}

// Ports per node for Source Network Address Translation on aci (string)
func (o ClusterNetworkAciNetworkProviderOutput) SnatPortsPerNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) *string { return v.SnatPortsPerNode }).(pulumi.StringPtrOutput)
}

// Unique suffix for all cluster related objects in aci (string)
func (o ClusterNetworkAciNetworkProviderOutput) SystemId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.SystemId }).(pulumi.StringOutput)
}

// UUID for this version of the input configuration (string)
func (o ClusterNetworkAciNetworkProviderOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.Token }).(pulumi.StringOutput)
}

// VRF Name on aci (string)
func (o ClusterNetworkAciNetworkProviderOutput) VrfName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.VrfName }).(pulumi.StringOutput)
}

// Tenant for VRF on aci (string)
func (o ClusterNetworkAciNetworkProviderOutput) VrfTenant() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkAciNetworkProvider) string { return v.VrfTenant }).(pulumi.StringOutput)
}

type ClusterNetworkAciNetworkProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkAciNetworkProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkAciNetworkProvider)(nil)).Elem()
}

func (o ClusterNetworkAciNetworkProviderPtrOutput) ToClusterNetworkAciNetworkProviderPtrOutput() ClusterNetworkAciNetworkProviderPtrOutput {
	return o
}

func (o ClusterNetworkAciNetworkProviderPtrOutput) ToClusterNetworkAciNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkAciNetworkProviderPtrOutput {
	return o
}

func (o ClusterNetworkAciNetworkProviderPtrOutput) Elem() ClusterNetworkAciNetworkProviderOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) ClusterNetworkAciNetworkProvider { return *v }).(ClusterNetworkAciNetworkProviderOutput)
}

// Attachment entity profile name on aci (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) Aep() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Aep
	}).(pulumi.StringPtrOutput)
}

// Ip address for apic hosts (list)
func (o ClusterNetworkAciNetworkProviderPtrOutput) ApicHosts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) []string {
		if v == nil {
			return nil
		}
		return v.ApicHosts
	}).(pulumi.StringArrayOutput)
}

// Base64 encoded certificate for aci apic user (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) ApicUserCrt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.ApicUserCrt
	}).(pulumi.StringPtrOutput)
}

// Base64 encoded private key for aci apic user (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) ApicUserKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.ApicUserKey
	}).(pulumi.StringPtrOutput)
}

// User name for aci apic (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) ApicUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.ApicUserName
	}).(pulumi.StringPtrOutput)
}

// One of the supported encap types for aci(vlan/vxlan) (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) EncapType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.EncapType
	}).(pulumi.StringPtrOutput)
}

// Subnet to use for dynamic external IPs on aci (string)
// * `externStatic"` - (Required) Subnet to use for static external IPs on aci (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) ExternDynamic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.ExternDynamic
	}).(pulumi.StringPtrOutput)
}

func (o ClusterNetworkAciNetworkProviderPtrOutput) ExternStatic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.ExternStatic
	}).(pulumi.StringPtrOutput)
}

// Vlan for infra network on aci (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) InfraVlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.InfraVlan
	}).(pulumi.StringPtrOutput)
}

// Vlan for node network on aci (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) KubeApiVlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.KubeApiVlan
	}).(pulumi.StringPtrOutput)
}

// L3Out on aci (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) L3out() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.L3out
	}).(pulumi.StringPtrOutput)
}

// L3out external networks on aci (list)
func (o ClusterNetworkAciNetworkProviderPtrOutput) L3outExternalNetworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) []string {
		if v == nil {
			return nil
		}
		return v.L3outExternalNetworks
	}).(pulumi.StringArrayOutput)
}

// Mcast range end address for endpoint groups on aci (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) McastRangeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.McastRangeEnd
	}).(pulumi.StringPtrOutput)
}

// Mcast range start address for endpoint groups on aci (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) McastRangeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.McastRangeStart
	}).(pulumi.StringPtrOutput)
}

// Kubernetes node address subnet (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) NodeSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.NodeSubnet
	}).(pulumi.StringPtrOutput)
}

// Subnet to use for service graph endpoints on aci (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) NodeSvcSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.NodeSvcSubnet
	}).(pulumi.StringPtrOutput)
}

// Vlan for service graph nodes on aci (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) ServiceVlan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceVlan
	}).(pulumi.StringPtrOutput)
}

// Port end range for Source Network Address Translation on aci (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) SnatPortRangeEnd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return v.SnatPortRangeEnd
	}).(pulumi.StringPtrOutput)
}

// Port start range for Source Network Address Translation on aci (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) SnatPortRangeStart() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return v.SnatPortRangeStart
	}).(pulumi.StringPtrOutput)
}

// Ports per node for Source Network Address Translation on aci (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) SnatPortsPerNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return v.SnatPortsPerNode
	}).(pulumi.StringPtrOutput)
}

// Unique suffix for all cluster related objects in aci (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) SystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.SystemId
	}).(pulumi.StringPtrOutput)
}

// UUID for this version of the input configuration (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

// VRF Name on aci (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) VrfName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.VrfName
	}).(pulumi.StringPtrOutput)
}

// Tenant for VRF on aci (string)
func (o ClusterNetworkAciNetworkProviderPtrOutput) VrfTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkAciNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.VrfTenant
	}).(pulumi.StringPtrOutput)
}

type ClusterNetworkCalicoNetworkProvider struct {
	// Calico cloud provider (string)
	CloudProvider *string `pulumi:"cloudProvider"`
}

// ClusterNetworkCalicoNetworkProviderInput is an input type that accepts ClusterNetworkCalicoNetworkProviderArgs and ClusterNetworkCalicoNetworkProviderOutput values.
// You can construct a concrete instance of `ClusterNetworkCalicoNetworkProviderInput` via:
//
//          ClusterNetworkCalicoNetworkProviderArgs{...}
type ClusterNetworkCalicoNetworkProviderInput interface {
	pulumi.Input

	ToClusterNetworkCalicoNetworkProviderOutput() ClusterNetworkCalicoNetworkProviderOutput
	ToClusterNetworkCalicoNetworkProviderOutputWithContext(context.Context) ClusterNetworkCalicoNetworkProviderOutput
}

type ClusterNetworkCalicoNetworkProviderArgs struct {
	// Calico cloud provider (string)
	CloudProvider pulumi.StringPtrInput `pulumi:"cloudProvider"`
}

func (ClusterNetworkCalicoNetworkProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkCalicoNetworkProvider)(nil)).Elem()
}

func (i ClusterNetworkCalicoNetworkProviderArgs) ToClusterNetworkCalicoNetworkProviderOutput() ClusterNetworkCalicoNetworkProviderOutput {
	return i.ToClusterNetworkCalicoNetworkProviderOutputWithContext(context.Background())
}

func (i ClusterNetworkCalicoNetworkProviderArgs) ToClusterNetworkCalicoNetworkProviderOutputWithContext(ctx context.Context) ClusterNetworkCalicoNetworkProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkCalicoNetworkProviderOutput)
}

func (i ClusterNetworkCalicoNetworkProviderArgs) ToClusterNetworkCalicoNetworkProviderPtrOutput() ClusterNetworkCalicoNetworkProviderPtrOutput {
	return i.ToClusterNetworkCalicoNetworkProviderPtrOutputWithContext(context.Background())
}

func (i ClusterNetworkCalicoNetworkProviderArgs) ToClusterNetworkCalicoNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkCalicoNetworkProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkCalicoNetworkProviderOutput).ToClusterNetworkCalicoNetworkProviderPtrOutputWithContext(ctx)
}

// ClusterNetworkCalicoNetworkProviderPtrInput is an input type that accepts ClusterNetworkCalicoNetworkProviderArgs, ClusterNetworkCalicoNetworkProviderPtr and ClusterNetworkCalicoNetworkProviderPtrOutput values.
// You can construct a concrete instance of `ClusterNetworkCalicoNetworkProviderPtrInput` via:
//
//          ClusterNetworkCalicoNetworkProviderArgs{...}
//
//  or:
//
//          nil
type ClusterNetworkCalicoNetworkProviderPtrInput interface {
	pulumi.Input

	ToClusterNetworkCalicoNetworkProviderPtrOutput() ClusterNetworkCalicoNetworkProviderPtrOutput
	ToClusterNetworkCalicoNetworkProviderPtrOutputWithContext(context.Context) ClusterNetworkCalicoNetworkProviderPtrOutput
}

type clusterNetworkCalicoNetworkProviderPtrType ClusterNetworkCalicoNetworkProviderArgs

func ClusterNetworkCalicoNetworkProviderPtr(v *ClusterNetworkCalicoNetworkProviderArgs) ClusterNetworkCalicoNetworkProviderPtrInput {
	return (*clusterNetworkCalicoNetworkProviderPtrType)(v)
}

func (*clusterNetworkCalicoNetworkProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkCalicoNetworkProvider)(nil)).Elem()
}

func (i *clusterNetworkCalicoNetworkProviderPtrType) ToClusterNetworkCalicoNetworkProviderPtrOutput() ClusterNetworkCalicoNetworkProviderPtrOutput {
	return i.ToClusterNetworkCalicoNetworkProviderPtrOutputWithContext(context.Background())
}

func (i *clusterNetworkCalicoNetworkProviderPtrType) ToClusterNetworkCalicoNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkCalicoNetworkProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkCalicoNetworkProviderPtrOutput)
}

type ClusterNetworkCalicoNetworkProviderOutput struct{ *pulumi.OutputState }

func (ClusterNetworkCalicoNetworkProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkCalicoNetworkProvider)(nil)).Elem()
}

func (o ClusterNetworkCalicoNetworkProviderOutput) ToClusterNetworkCalicoNetworkProviderOutput() ClusterNetworkCalicoNetworkProviderOutput {
	return o
}

func (o ClusterNetworkCalicoNetworkProviderOutput) ToClusterNetworkCalicoNetworkProviderOutputWithContext(ctx context.Context) ClusterNetworkCalicoNetworkProviderOutput {
	return o
}

func (o ClusterNetworkCalicoNetworkProviderOutput) ToClusterNetworkCalicoNetworkProviderPtrOutput() ClusterNetworkCalicoNetworkProviderPtrOutput {
	return o.ToClusterNetworkCalicoNetworkProviderPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkCalicoNetworkProviderOutput) ToClusterNetworkCalicoNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkCalicoNetworkProviderPtrOutput {
	return o.ApplyT(func(v ClusterNetworkCalicoNetworkProvider) *ClusterNetworkCalicoNetworkProvider {
		return &v
	}).(ClusterNetworkCalicoNetworkProviderPtrOutput)
}

// Calico cloud provider (string)
func (o ClusterNetworkCalicoNetworkProviderOutput) CloudProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetworkCalicoNetworkProvider) *string { return v.CloudProvider }).(pulumi.StringPtrOutput)
}

type ClusterNetworkCalicoNetworkProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkCalicoNetworkProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkCalicoNetworkProvider)(nil)).Elem()
}

func (o ClusterNetworkCalicoNetworkProviderPtrOutput) ToClusterNetworkCalicoNetworkProviderPtrOutput() ClusterNetworkCalicoNetworkProviderPtrOutput {
	return o
}

func (o ClusterNetworkCalicoNetworkProviderPtrOutput) ToClusterNetworkCalicoNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkCalicoNetworkProviderPtrOutput {
	return o
}

func (o ClusterNetworkCalicoNetworkProviderPtrOutput) Elem() ClusterNetworkCalicoNetworkProviderOutput {
	return o.ApplyT(func(v *ClusterNetworkCalicoNetworkProvider) ClusterNetworkCalicoNetworkProvider { return *v }).(ClusterNetworkCalicoNetworkProviderOutput)
}

// Calico cloud provider (string)
func (o ClusterNetworkCalicoNetworkProviderPtrOutput) CloudProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkCalicoNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return v.CloudProvider
	}).(pulumi.StringPtrOutput)
}

type ClusterNetworkCanalNetworkProvider struct {
	// Flannel network interface (string)
	Iface *string `pulumi:"iface"`
}

// ClusterNetworkCanalNetworkProviderInput is an input type that accepts ClusterNetworkCanalNetworkProviderArgs and ClusterNetworkCanalNetworkProviderOutput values.
// You can construct a concrete instance of `ClusterNetworkCanalNetworkProviderInput` via:
//
//          ClusterNetworkCanalNetworkProviderArgs{...}
type ClusterNetworkCanalNetworkProviderInput interface {
	pulumi.Input

	ToClusterNetworkCanalNetworkProviderOutput() ClusterNetworkCanalNetworkProviderOutput
	ToClusterNetworkCanalNetworkProviderOutputWithContext(context.Context) ClusterNetworkCanalNetworkProviderOutput
}

type ClusterNetworkCanalNetworkProviderArgs struct {
	// Flannel network interface (string)
	Iface pulumi.StringPtrInput `pulumi:"iface"`
}

func (ClusterNetworkCanalNetworkProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkCanalNetworkProvider)(nil)).Elem()
}

func (i ClusterNetworkCanalNetworkProviderArgs) ToClusterNetworkCanalNetworkProviderOutput() ClusterNetworkCanalNetworkProviderOutput {
	return i.ToClusterNetworkCanalNetworkProviderOutputWithContext(context.Background())
}

func (i ClusterNetworkCanalNetworkProviderArgs) ToClusterNetworkCanalNetworkProviderOutputWithContext(ctx context.Context) ClusterNetworkCanalNetworkProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkCanalNetworkProviderOutput)
}

func (i ClusterNetworkCanalNetworkProviderArgs) ToClusterNetworkCanalNetworkProviderPtrOutput() ClusterNetworkCanalNetworkProviderPtrOutput {
	return i.ToClusterNetworkCanalNetworkProviderPtrOutputWithContext(context.Background())
}

func (i ClusterNetworkCanalNetworkProviderArgs) ToClusterNetworkCanalNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkCanalNetworkProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkCanalNetworkProviderOutput).ToClusterNetworkCanalNetworkProviderPtrOutputWithContext(ctx)
}

// ClusterNetworkCanalNetworkProviderPtrInput is an input type that accepts ClusterNetworkCanalNetworkProviderArgs, ClusterNetworkCanalNetworkProviderPtr and ClusterNetworkCanalNetworkProviderPtrOutput values.
// You can construct a concrete instance of `ClusterNetworkCanalNetworkProviderPtrInput` via:
//
//          ClusterNetworkCanalNetworkProviderArgs{...}
//
//  or:
//
//          nil
type ClusterNetworkCanalNetworkProviderPtrInput interface {
	pulumi.Input

	ToClusterNetworkCanalNetworkProviderPtrOutput() ClusterNetworkCanalNetworkProviderPtrOutput
	ToClusterNetworkCanalNetworkProviderPtrOutputWithContext(context.Context) ClusterNetworkCanalNetworkProviderPtrOutput
}

type clusterNetworkCanalNetworkProviderPtrType ClusterNetworkCanalNetworkProviderArgs

func ClusterNetworkCanalNetworkProviderPtr(v *ClusterNetworkCanalNetworkProviderArgs) ClusterNetworkCanalNetworkProviderPtrInput {
	return (*clusterNetworkCanalNetworkProviderPtrType)(v)
}

func (*clusterNetworkCanalNetworkProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkCanalNetworkProvider)(nil)).Elem()
}

func (i *clusterNetworkCanalNetworkProviderPtrType) ToClusterNetworkCanalNetworkProviderPtrOutput() ClusterNetworkCanalNetworkProviderPtrOutput {
	return i.ToClusterNetworkCanalNetworkProviderPtrOutputWithContext(context.Background())
}

func (i *clusterNetworkCanalNetworkProviderPtrType) ToClusterNetworkCanalNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkCanalNetworkProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkCanalNetworkProviderPtrOutput)
}

type ClusterNetworkCanalNetworkProviderOutput struct{ *pulumi.OutputState }

func (ClusterNetworkCanalNetworkProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkCanalNetworkProvider)(nil)).Elem()
}

func (o ClusterNetworkCanalNetworkProviderOutput) ToClusterNetworkCanalNetworkProviderOutput() ClusterNetworkCanalNetworkProviderOutput {
	return o
}

func (o ClusterNetworkCanalNetworkProviderOutput) ToClusterNetworkCanalNetworkProviderOutputWithContext(ctx context.Context) ClusterNetworkCanalNetworkProviderOutput {
	return o
}

func (o ClusterNetworkCanalNetworkProviderOutput) ToClusterNetworkCanalNetworkProviderPtrOutput() ClusterNetworkCanalNetworkProviderPtrOutput {
	return o.ToClusterNetworkCanalNetworkProviderPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkCanalNetworkProviderOutput) ToClusterNetworkCanalNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkCanalNetworkProviderPtrOutput {
	return o.ApplyT(func(v ClusterNetworkCanalNetworkProvider) *ClusterNetworkCanalNetworkProvider {
		return &v
	}).(ClusterNetworkCanalNetworkProviderPtrOutput)
}

// Flannel network interface (string)
func (o ClusterNetworkCanalNetworkProviderOutput) Iface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetworkCanalNetworkProvider) *string { return v.Iface }).(pulumi.StringPtrOutput)
}

type ClusterNetworkCanalNetworkProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkCanalNetworkProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkCanalNetworkProvider)(nil)).Elem()
}

func (o ClusterNetworkCanalNetworkProviderPtrOutput) ToClusterNetworkCanalNetworkProviderPtrOutput() ClusterNetworkCanalNetworkProviderPtrOutput {
	return o
}

func (o ClusterNetworkCanalNetworkProviderPtrOutput) ToClusterNetworkCanalNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkCanalNetworkProviderPtrOutput {
	return o
}

func (o ClusterNetworkCanalNetworkProviderPtrOutput) Elem() ClusterNetworkCanalNetworkProviderOutput {
	return o.ApplyT(func(v *ClusterNetworkCanalNetworkProvider) ClusterNetworkCanalNetworkProvider { return *v }).(ClusterNetworkCanalNetworkProviderOutput)
}

// Flannel network interface (string)
func (o ClusterNetworkCanalNetworkProviderPtrOutput) Iface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkCanalNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return v.Iface
	}).(pulumi.StringPtrOutput)
}

type ClusterNetworkFlannelNetworkProvider struct {
	// Flannel network interface (string)
	Iface *string `pulumi:"iface"`
}

// ClusterNetworkFlannelNetworkProviderInput is an input type that accepts ClusterNetworkFlannelNetworkProviderArgs and ClusterNetworkFlannelNetworkProviderOutput values.
// You can construct a concrete instance of `ClusterNetworkFlannelNetworkProviderInput` via:
//
//          ClusterNetworkFlannelNetworkProviderArgs{...}
type ClusterNetworkFlannelNetworkProviderInput interface {
	pulumi.Input

	ToClusterNetworkFlannelNetworkProviderOutput() ClusterNetworkFlannelNetworkProviderOutput
	ToClusterNetworkFlannelNetworkProviderOutputWithContext(context.Context) ClusterNetworkFlannelNetworkProviderOutput
}

type ClusterNetworkFlannelNetworkProviderArgs struct {
	// Flannel network interface (string)
	Iface pulumi.StringPtrInput `pulumi:"iface"`
}

func (ClusterNetworkFlannelNetworkProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkFlannelNetworkProvider)(nil)).Elem()
}

func (i ClusterNetworkFlannelNetworkProviderArgs) ToClusterNetworkFlannelNetworkProviderOutput() ClusterNetworkFlannelNetworkProviderOutput {
	return i.ToClusterNetworkFlannelNetworkProviderOutputWithContext(context.Background())
}

func (i ClusterNetworkFlannelNetworkProviderArgs) ToClusterNetworkFlannelNetworkProviderOutputWithContext(ctx context.Context) ClusterNetworkFlannelNetworkProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkFlannelNetworkProviderOutput)
}

func (i ClusterNetworkFlannelNetworkProviderArgs) ToClusterNetworkFlannelNetworkProviderPtrOutput() ClusterNetworkFlannelNetworkProviderPtrOutput {
	return i.ToClusterNetworkFlannelNetworkProviderPtrOutputWithContext(context.Background())
}

func (i ClusterNetworkFlannelNetworkProviderArgs) ToClusterNetworkFlannelNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkFlannelNetworkProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkFlannelNetworkProviderOutput).ToClusterNetworkFlannelNetworkProviderPtrOutputWithContext(ctx)
}

// ClusterNetworkFlannelNetworkProviderPtrInput is an input type that accepts ClusterNetworkFlannelNetworkProviderArgs, ClusterNetworkFlannelNetworkProviderPtr and ClusterNetworkFlannelNetworkProviderPtrOutput values.
// You can construct a concrete instance of `ClusterNetworkFlannelNetworkProviderPtrInput` via:
//
//          ClusterNetworkFlannelNetworkProviderArgs{...}
//
//  or:
//
//          nil
type ClusterNetworkFlannelNetworkProviderPtrInput interface {
	pulumi.Input

	ToClusterNetworkFlannelNetworkProviderPtrOutput() ClusterNetworkFlannelNetworkProviderPtrOutput
	ToClusterNetworkFlannelNetworkProviderPtrOutputWithContext(context.Context) ClusterNetworkFlannelNetworkProviderPtrOutput
}

type clusterNetworkFlannelNetworkProviderPtrType ClusterNetworkFlannelNetworkProviderArgs

func ClusterNetworkFlannelNetworkProviderPtr(v *ClusterNetworkFlannelNetworkProviderArgs) ClusterNetworkFlannelNetworkProviderPtrInput {
	return (*clusterNetworkFlannelNetworkProviderPtrType)(v)
}

func (*clusterNetworkFlannelNetworkProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkFlannelNetworkProvider)(nil)).Elem()
}

func (i *clusterNetworkFlannelNetworkProviderPtrType) ToClusterNetworkFlannelNetworkProviderPtrOutput() ClusterNetworkFlannelNetworkProviderPtrOutput {
	return i.ToClusterNetworkFlannelNetworkProviderPtrOutputWithContext(context.Background())
}

func (i *clusterNetworkFlannelNetworkProviderPtrType) ToClusterNetworkFlannelNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkFlannelNetworkProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkFlannelNetworkProviderPtrOutput)
}

type ClusterNetworkFlannelNetworkProviderOutput struct{ *pulumi.OutputState }

func (ClusterNetworkFlannelNetworkProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkFlannelNetworkProvider)(nil)).Elem()
}

func (o ClusterNetworkFlannelNetworkProviderOutput) ToClusterNetworkFlannelNetworkProviderOutput() ClusterNetworkFlannelNetworkProviderOutput {
	return o
}

func (o ClusterNetworkFlannelNetworkProviderOutput) ToClusterNetworkFlannelNetworkProviderOutputWithContext(ctx context.Context) ClusterNetworkFlannelNetworkProviderOutput {
	return o
}

func (o ClusterNetworkFlannelNetworkProviderOutput) ToClusterNetworkFlannelNetworkProviderPtrOutput() ClusterNetworkFlannelNetworkProviderPtrOutput {
	return o.ToClusterNetworkFlannelNetworkProviderPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkFlannelNetworkProviderOutput) ToClusterNetworkFlannelNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkFlannelNetworkProviderPtrOutput {
	return o.ApplyT(func(v ClusterNetworkFlannelNetworkProvider) *ClusterNetworkFlannelNetworkProvider {
		return &v
	}).(ClusterNetworkFlannelNetworkProviderPtrOutput)
}

// Flannel network interface (string)
func (o ClusterNetworkFlannelNetworkProviderOutput) Iface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNetworkFlannelNetworkProvider) *string { return v.Iface }).(pulumi.StringPtrOutput)
}

type ClusterNetworkFlannelNetworkProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkFlannelNetworkProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkFlannelNetworkProvider)(nil)).Elem()
}

func (o ClusterNetworkFlannelNetworkProviderPtrOutput) ToClusterNetworkFlannelNetworkProviderPtrOutput() ClusterNetworkFlannelNetworkProviderPtrOutput {
	return o
}

func (o ClusterNetworkFlannelNetworkProviderPtrOutput) ToClusterNetworkFlannelNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkFlannelNetworkProviderPtrOutput {
	return o
}

func (o ClusterNetworkFlannelNetworkProviderPtrOutput) Elem() ClusterNetworkFlannelNetworkProviderOutput {
	return o.ApplyT(func(v *ClusterNetworkFlannelNetworkProvider) ClusterNetworkFlannelNetworkProvider { return *v }).(ClusterNetworkFlannelNetworkProviderOutput)
}

// Flannel network interface (string)
func (o ClusterNetworkFlannelNetworkProviderPtrOutput) Iface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkFlannelNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return v.Iface
	}).(pulumi.StringPtrOutput)
}

type ClusterNetworkWeaveNetworkProvider struct {
	// Registry password (string)
	Password string `pulumi:"password"`
}

// ClusterNetworkWeaveNetworkProviderInput is an input type that accepts ClusterNetworkWeaveNetworkProviderArgs and ClusterNetworkWeaveNetworkProviderOutput values.
// You can construct a concrete instance of `ClusterNetworkWeaveNetworkProviderInput` via:
//
//          ClusterNetworkWeaveNetworkProviderArgs{...}
type ClusterNetworkWeaveNetworkProviderInput interface {
	pulumi.Input

	ToClusterNetworkWeaveNetworkProviderOutput() ClusterNetworkWeaveNetworkProviderOutput
	ToClusterNetworkWeaveNetworkProviderOutputWithContext(context.Context) ClusterNetworkWeaveNetworkProviderOutput
}

type ClusterNetworkWeaveNetworkProviderArgs struct {
	// Registry password (string)
	Password pulumi.StringInput `pulumi:"password"`
}

func (ClusterNetworkWeaveNetworkProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkWeaveNetworkProvider)(nil)).Elem()
}

func (i ClusterNetworkWeaveNetworkProviderArgs) ToClusterNetworkWeaveNetworkProviderOutput() ClusterNetworkWeaveNetworkProviderOutput {
	return i.ToClusterNetworkWeaveNetworkProviderOutputWithContext(context.Background())
}

func (i ClusterNetworkWeaveNetworkProviderArgs) ToClusterNetworkWeaveNetworkProviderOutputWithContext(ctx context.Context) ClusterNetworkWeaveNetworkProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkWeaveNetworkProviderOutput)
}

func (i ClusterNetworkWeaveNetworkProviderArgs) ToClusterNetworkWeaveNetworkProviderPtrOutput() ClusterNetworkWeaveNetworkProviderPtrOutput {
	return i.ToClusterNetworkWeaveNetworkProviderPtrOutputWithContext(context.Background())
}

func (i ClusterNetworkWeaveNetworkProviderArgs) ToClusterNetworkWeaveNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkWeaveNetworkProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkWeaveNetworkProviderOutput).ToClusterNetworkWeaveNetworkProviderPtrOutputWithContext(ctx)
}

// ClusterNetworkWeaveNetworkProviderPtrInput is an input type that accepts ClusterNetworkWeaveNetworkProviderArgs, ClusterNetworkWeaveNetworkProviderPtr and ClusterNetworkWeaveNetworkProviderPtrOutput values.
// You can construct a concrete instance of `ClusterNetworkWeaveNetworkProviderPtrInput` via:
//
//          ClusterNetworkWeaveNetworkProviderArgs{...}
//
//  or:
//
//          nil
type ClusterNetworkWeaveNetworkProviderPtrInput interface {
	pulumi.Input

	ToClusterNetworkWeaveNetworkProviderPtrOutput() ClusterNetworkWeaveNetworkProviderPtrOutput
	ToClusterNetworkWeaveNetworkProviderPtrOutputWithContext(context.Context) ClusterNetworkWeaveNetworkProviderPtrOutput
}

type clusterNetworkWeaveNetworkProviderPtrType ClusterNetworkWeaveNetworkProviderArgs

func ClusterNetworkWeaveNetworkProviderPtr(v *ClusterNetworkWeaveNetworkProviderArgs) ClusterNetworkWeaveNetworkProviderPtrInput {
	return (*clusterNetworkWeaveNetworkProviderPtrType)(v)
}

func (*clusterNetworkWeaveNetworkProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkWeaveNetworkProvider)(nil)).Elem()
}

func (i *clusterNetworkWeaveNetworkProviderPtrType) ToClusterNetworkWeaveNetworkProviderPtrOutput() ClusterNetworkWeaveNetworkProviderPtrOutput {
	return i.ToClusterNetworkWeaveNetworkProviderPtrOutputWithContext(context.Background())
}

func (i *clusterNetworkWeaveNetworkProviderPtrType) ToClusterNetworkWeaveNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkWeaveNetworkProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNetworkWeaveNetworkProviderPtrOutput)
}

type ClusterNetworkWeaveNetworkProviderOutput struct{ *pulumi.OutputState }

func (ClusterNetworkWeaveNetworkProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNetworkWeaveNetworkProvider)(nil)).Elem()
}

func (o ClusterNetworkWeaveNetworkProviderOutput) ToClusterNetworkWeaveNetworkProviderOutput() ClusterNetworkWeaveNetworkProviderOutput {
	return o
}

func (o ClusterNetworkWeaveNetworkProviderOutput) ToClusterNetworkWeaveNetworkProviderOutputWithContext(ctx context.Context) ClusterNetworkWeaveNetworkProviderOutput {
	return o
}

func (o ClusterNetworkWeaveNetworkProviderOutput) ToClusterNetworkWeaveNetworkProviderPtrOutput() ClusterNetworkWeaveNetworkProviderPtrOutput {
	return o.ToClusterNetworkWeaveNetworkProviderPtrOutputWithContext(context.Background())
}

func (o ClusterNetworkWeaveNetworkProviderOutput) ToClusterNetworkWeaveNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkWeaveNetworkProviderPtrOutput {
	return o.ApplyT(func(v ClusterNetworkWeaveNetworkProvider) *ClusterNetworkWeaveNetworkProvider {
		return &v
	}).(ClusterNetworkWeaveNetworkProviderPtrOutput)
}

// Registry password (string)
func (o ClusterNetworkWeaveNetworkProviderOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNetworkWeaveNetworkProvider) string { return v.Password }).(pulumi.StringOutput)
}

type ClusterNetworkWeaveNetworkProviderPtrOutput struct{ *pulumi.OutputState }

func (ClusterNetworkWeaveNetworkProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNetworkWeaveNetworkProvider)(nil)).Elem()
}

func (o ClusterNetworkWeaveNetworkProviderPtrOutput) ToClusterNetworkWeaveNetworkProviderPtrOutput() ClusterNetworkWeaveNetworkProviderPtrOutput {
	return o
}

func (o ClusterNetworkWeaveNetworkProviderPtrOutput) ToClusterNetworkWeaveNetworkProviderPtrOutputWithContext(ctx context.Context) ClusterNetworkWeaveNetworkProviderPtrOutput {
	return o
}

func (o ClusterNetworkWeaveNetworkProviderPtrOutput) Elem() ClusterNetworkWeaveNetworkProviderOutput {
	return o.ApplyT(func(v *ClusterNetworkWeaveNetworkProvider) ClusterNetworkWeaveNetworkProvider { return *v }).(ClusterNetworkWeaveNetworkProviderOutput)
}

// Registry password (string)
func (o ClusterNetworkWeaveNetworkProviderPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterNetworkWeaveNetworkProvider) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

type ClusterNode struct {
	// Address ip for node (string)
	Address string `pulumi:"address"`
	// Docker socket on the node that will be used in tunneling (string)
	DockerSocket *string `pulumi:"dockerSocket"`
	// Hostname override for node (string)
	HostnameOverride *string `pulumi:"hostnameOverride"`
	// Internal address that will be used for components communication (string)
	InternalAddress *string `pulumi:"internalAddress"`
	// Node labels (map)
	Labels map[string]interface{} `pulumi:"labels"`
	// Name of the host provisioned via docker machine (string)
	NodeName *string `pulumi:"nodeName"`
	// Port used for SSH communication (string)
	Port *string `pulumi:"port"`
	// Node roles in k8s cluster. `controlplane`, `etcd` and `worker` are supported. (list)
	Roles []string `pulumi:"roles"`
	// Deprecated: Use role instead
	RolesDeprecated *string `pulumi:"rolesDeprecated"`
	// SSH Agent Auth enable (bool)
	SshAgentAuth *bool `pulumi:"sshAgentAuth"`
	// SSH Certificate (string)
	SshCert *string `pulumi:"sshCert"`
	// SSH Certificate path (string)
	SshCertPath *string `pulumi:"sshCertPath"`
	// SSH Private Key (string)
	SshKey *string `pulumi:"sshKey"`
	// SSH Private Key path (string)
	SshKeyPath *string `pulumi:"sshKeyPath"`
	// Node taints (list)
	Taints []ClusterNodeTaint `pulumi:"taints"`
	// Registry user (string)
	User string `pulumi:"user"`
}

// ClusterNodeInput is an input type that accepts ClusterNodeArgs and ClusterNodeOutput values.
// You can construct a concrete instance of `ClusterNodeInput` via:
//
//          ClusterNodeArgs{...}
type ClusterNodeInput interface {
	pulumi.Input

	ToClusterNodeOutput() ClusterNodeOutput
	ToClusterNodeOutputWithContext(context.Context) ClusterNodeOutput
}

type ClusterNodeArgs struct {
	// Address ip for node (string)
	Address pulumi.StringInput `pulumi:"address"`
	// Docker socket on the node that will be used in tunneling (string)
	DockerSocket pulumi.StringPtrInput `pulumi:"dockerSocket"`
	// Hostname override for node (string)
	HostnameOverride pulumi.StringPtrInput `pulumi:"hostnameOverride"`
	// Internal address that will be used for components communication (string)
	InternalAddress pulumi.StringPtrInput `pulumi:"internalAddress"`
	// Node labels (map)
	Labels pulumi.MapInput `pulumi:"labels"`
	// Name of the host provisioned via docker machine (string)
	NodeName pulumi.StringPtrInput `pulumi:"nodeName"`
	// Port used for SSH communication (string)
	Port pulumi.StringPtrInput `pulumi:"port"`
	// Node roles in k8s cluster. `controlplane`, `etcd` and `worker` are supported. (list)
	Roles pulumi.StringArrayInput `pulumi:"roles"`
	// Deprecated: Use role instead
	RolesDeprecated pulumi.StringPtrInput `pulumi:"rolesDeprecated"`
	// SSH Agent Auth enable (bool)
	SshAgentAuth pulumi.BoolPtrInput `pulumi:"sshAgentAuth"`
	// SSH Certificate (string)
	SshCert pulumi.StringPtrInput `pulumi:"sshCert"`
	// SSH Certificate path (string)
	SshCertPath pulumi.StringPtrInput `pulumi:"sshCertPath"`
	// SSH Private Key (string)
	SshKey pulumi.StringPtrInput `pulumi:"sshKey"`
	// SSH Private Key path (string)
	SshKeyPath pulumi.StringPtrInput `pulumi:"sshKeyPath"`
	// Node taints (list)
	Taints ClusterNodeTaintArrayInput `pulumi:"taints"`
	// Registry user (string)
	User pulumi.StringInput `pulumi:"user"`
}

func (ClusterNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNode)(nil)).Elem()
}

func (i ClusterNodeArgs) ToClusterNodeOutput() ClusterNodeOutput {
	return i.ToClusterNodeOutputWithContext(context.Background())
}

func (i ClusterNodeArgs) ToClusterNodeOutputWithContext(ctx context.Context) ClusterNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeOutput)
}

// ClusterNodeArrayInput is an input type that accepts ClusterNodeArray and ClusterNodeArrayOutput values.
// You can construct a concrete instance of `ClusterNodeArrayInput` via:
//
//          ClusterNodeArray{ ClusterNodeArgs{...} }
type ClusterNodeArrayInput interface {
	pulumi.Input

	ToClusterNodeArrayOutput() ClusterNodeArrayOutput
	ToClusterNodeArrayOutputWithContext(context.Context) ClusterNodeArrayOutput
}

type ClusterNodeArray []ClusterNodeInput

func (ClusterNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNode)(nil)).Elem()
}

func (i ClusterNodeArray) ToClusterNodeArrayOutput() ClusterNodeArrayOutput {
	return i.ToClusterNodeArrayOutputWithContext(context.Background())
}

func (i ClusterNodeArray) ToClusterNodeArrayOutputWithContext(ctx context.Context) ClusterNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeArrayOutput)
}

type ClusterNodeOutput struct{ *pulumi.OutputState }

func (ClusterNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNode)(nil)).Elem()
}

func (o ClusterNodeOutput) ToClusterNodeOutput() ClusterNodeOutput {
	return o
}

func (o ClusterNodeOutput) ToClusterNodeOutputWithContext(ctx context.Context) ClusterNodeOutput {
	return o
}

// Address ip for node (string)
func (o ClusterNodeOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNode) string { return v.Address }).(pulumi.StringOutput)
}

// Docker socket on the node that will be used in tunneling (string)
func (o ClusterNodeOutput) DockerSocket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNode) *string { return v.DockerSocket }).(pulumi.StringPtrOutput)
}

// Hostname override for node (string)
func (o ClusterNodeOutput) HostnameOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNode) *string { return v.HostnameOverride }).(pulumi.StringPtrOutput)
}

// Internal address that will be used for components communication (string)
func (o ClusterNodeOutput) InternalAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNode) *string { return v.InternalAddress }).(pulumi.StringPtrOutput)
}

// Node labels (map)
func (o ClusterNodeOutput) Labels() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterNode) map[string]interface{} { return v.Labels }).(pulumi.MapOutput)
}

// Name of the host provisioned via docker machine (string)
func (o ClusterNodeOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNode) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

// Port used for SSH communication (string)
func (o ClusterNodeOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNode) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// Node roles in k8s cluster. `controlplane`, `etcd` and `worker` are supported. (list)
func (o ClusterNodeOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterNode) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

// Deprecated: Use role instead
func (o ClusterNodeOutput) RolesDeprecated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNode) *string { return v.RolesDeprecated }).(pulumi.StringPtrOutput)
}

// SSH Agent Auth enable (bool)
func (o ClusterNodeOutput) SshAgentAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterNode) *bool { return v.SshAgentAuth }).(pulumi.BoolPtrOutput)
}

// SSH Certificate (string)
func (o ClusterNodeOutput) SshCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNode) *string { return v.SshCert }).(pulumi.StringPtrOutput)
}

// SSH Certificate path (string)
func (o ClusterNodeOutput) SshCertPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNode) *string { return v.SshCertPath }).(pulumi.StringPtrOutput)
}

// SSH Private Key (string)
func (o ClusterNodeOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNode) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

// SSH Private Key path (string)
func (o ClusterNodeOutput) SshKeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNode) *string { return v.SshKeyPath }).(pulumi.StringPtrOutput)
}

// Node taints (list)
func (o ClusterNodeOutput) Taints() ClusterNodeTaintArrayOutput {
	return o.ApplyT(func(v ClusterNode) []ClusterNodeTaint { return v.Taints }).(ClusterNodeTaintArrayOutput)
}

// Registry user (string)
func (o ClusterNodeOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNode) string { return v.User }).(pulumi.StringOutput)
}

type ClusterNodeArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNode)(nil)).Elem()
}

func (o ClusterNodeArrayOutput) ToClusterNodeArrayOutput() ClusterNodeArrayOutput {
	return o
}

func (o ClusterNodeArrayOutput) ToClusterNodeArrayOutputWithContext(ctx context.Context) ClusterNodeArrayOutput {
	return o
}

func (o ClusterNodeArrayOutput) Index(i pulumi.IntInput) ClusterNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNode {
		return vs[0].([]ClusterNode)[vs[1].(int)]
	}).(ClusterNodeOutput)
}

type ClusterNodeTaint struct {
	// Taint effect. `NoExecute`, `NoSchedule` (default) and `PreferNoSchedule` are supported (string)
	Effect *string `pulumi:"effect"`
	// TLS key for etcd service (string)
	Key string `pulumi:"key"`
	// Taint value (string)
	Value string `pulumi:"value"`
}

// ClusterNodeTaintInput is an input type that accepts ClusterNodeTaintArgs and ClusterNodeTaintOutput values.
// You can construct a concrete instance of `ClusterNodeTaintInput` via:
//
//          ClusterNodeTaintArgs{...}
type ClusterNodeTaintInput interface {
	pulumi.Input

	ToClusterNodeTaintOutput() ClusterNodeTaintOutput
	ToClusterNodeTaintOutputWithContext(context.Context) ClusterNodeTaintOutput
}

type ClusterNodeTaintArgs struct {
	// Taint effect. `NoExecute`, `NoSchedule` (default) and `PreferNoSchedule` are supported (string)
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// TLS key for etcd service (string)
	Key pulumi.StringInput `pulumi:"key"`
	// Taint value (string)
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterNodeTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeTaint)(nil)).Elem()
}

func (i ClusterNodeTaintArgs) ToClusterNodeTaintOutput() ClusterNodeTaintOutput {
	return i.ToClusterNodeTaintOutputWithContext(context.Background())
}

func (i ClusterNodeTaintArgs) ToClusterNodeTaintOutputWithContext(ctx context.Context) ClusterNodeTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeTaintOutput)
}

// ClusterNodeTaintArrayInput is an input type that accepts ClusterNodeTaintArray and ClusterNodeTaintArrayOutput values.
// You can construct a concrete instance of `ClusterNodeTaintArrayInput` via:
//
//          ClusterNodeTaintArray{ ClusterNodeTaintArgs{...} }
type ClusterNodeTaintArrayInput interface {
	pulumi.Input

	ToClusterNodeTaintArrayOutput() ClusterNodeTaintArrayOutput
	ToClusterNodeTaintArrayOutputWithContext(context.Context) ClusterNodeTaintArrayOutput
}

type ClusterNodeTaintArray []ClusterNodeTaintInput

func (ClusterNodeTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeTaint)(nil)).Elem()
}

func (i ClusterNodeTaintArray) ToClusterNodeTaintArrayOutput() ClusterNodeTaintArrayOutput {
	return i.ToClusterNodeTaintArrayOutputWithContext(context.Background())
}

func (i ClusterNodeTaintArray) ToClusterNodeTaintArrayOutputWithContext(ctx context.Context) ClusterNodeTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeTaintArrayOutput)
}

type ClusterNodeTaintOutput struct{ *pulumi.OutputState }

func (ClusterNodeTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeTaint)(nil)).Elem()
}

func (o ClusterNodeTaintOutput) ToClusterNodeTaintOutput() ClusterNodeTaintOutput {
	return o
}

func (o ClusterNodeTaintOutput) ToClusterNodeTaintOutputWithContext(ctx context.Context) ClusterNodeTaintOutput {
	return o
}

// Taint effect. `NoExecute`, `NoSchedule` (default) and `PreferNoSchedule` are supported (string)
func (o ClusterNodeTaintOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterNodeTaint) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// TLS key for etcd service (string)
func (o ClusterNodeTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeTaint) string { return v.Key }).(pulumi.StringOutput)
}

// Taint value (string)
func (o ClusterNodeTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterNodeTaint) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterNodeTaintArrayOutput struct{ *pulumi.OutputState }

func (ClusterNodeTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterNodeTaint)(nil)).Elem()
}

func (o ClusterNodeTaintArrayOutput) ToClusterNodeTaintArrayOutput() ClusterNodeTaintArrayOutput {
	return o
}

func (o ClusterNodeTaintArrayOutput) ToClusterNodeTaintArrayOutputWithContext(ctx context.Context) ClusterNodeTaintArrayOutput {
	return o
}

func (o ClusterNodeTaintArrayOutput) Index(i pulumi.IntInput) ClusterNodeTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterNodeTaint {
		return vs[0].([]ClusterNodeTaint)[vs[1].(int)]
	}).(ClusterNodeTaintOutput)
}

type ClusterPrivateRegistry struct {
	// Set as default registry. Default `false` (bool)
	IsDefault *bool `pulumi:"isDefault"`
	// Registry password (string)
	Password *string `pulumi:"password"`
	// Registry URL (string)
	Url string `pulumi:"url"`
	// Registry user (string)
	User *string `pulumi:"user"`
}

// ClusterPrivateRegistryInput is an input type that accepts ClusterPrivateRegistryArgs and ClusterPrivateRegistryOutput values.
// You can construct a concrete instance of `ClusterPrivateRegistryInput` via:
//
//          ClusterPrivateRegistryArgs{...}
type ClusterPrivateRegistryInput interface {
	pulumi.Input

	ToClusterPrivateRegistryOutput() ClusterPrivateRegistryOutput
	ToClusterPrivateRegistryOutputWithContext(context.Context) ClusterPrivateRegistryOutput
}

type ClusterPrivateRegistryArgs struct {
	// Set as default registry. Default `false` (bool)
	IsDefault pulumi.BoolPtrInput `pulumi:"isDefault"`
	// Registry password (string)
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Registry URL (string)
	Url pulumi.StringInput `pulumi:"url"`
	// Registry user (string)
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (ClusterPrivateRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateRegistry)(nil)).Elem()
}

func (i ClusterPrivateRegistryArgs) ToClusterPrivateRegistryOutput() ClusterPrivateRegistryOutput {
	return i.ToClusterPrivateRegistryOutputWithContext(context.Background())
}

func (i ClusterPrivateRegistryArgs) ToClusterPrivateRegistryOutputWithContext(ctx context.Context) ClusterPrivateRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateRegistryOutput)
}

// ClusterPrivateRegistryArrayInput is an input type that accepts ClusterPrivateRegistryArray and ClusterPrivateRegistryArrayOutput values.
// You can construct a concrete instance of `ClusterPrivateRegistryArrayInput` via:
//
//          ClusterPrivateRegistryArray{ ClusterPrivateRegistryArgs{...} }
type ClusterPrivateRegistryArrayInput interface {
	pulumi.Input

	ToClusterPrivateRegistryArrayOutput() ClusterPrivateRegistryArrayOutput
	ToClusterPrivateRegistryArrayOutputWithContext(context.Context) ClusterPrivateRegistryArrayOutput
}

type ClusterPrivateRegistryArray []ClusterPrivateRegistryInput

func (ClusterPrivateRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPrivateRegistry)(nil)).Elem()
}

func (i ClusterPrivateRegistryArray) ToClusterPrivateRegistryArrayOutput() ClusterPrivateRegistryArrayOutput {
	return i.ToClusterPrivateRegistryArrayOutputWithContext(context.Background())
}

func (i ClusterPrivateRegistryArray) ToClusterPrivateRegistryArrayOutputWithContext(ctx context.Context) ClusterPrivateRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrivateRegistryArrayOutput)
}

type ClusterPrivateRegistryOutput struct{ *pulumi.OutputState }

func (ClusterPrivateRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrivateRegistry)(nil)).Elem()
}

func (o ClusterPrivateRegistryOutput) ToClusterPrivateRegistryOutput() ClusterPrivateRegistryOutput {
	return o
}

func (o ClusterPrivateRegistryOutput) ToClusterPrivateRegistryOutputWithContext(ctx context.Context) ClusterPrivateRegistryOutput {
	return o
}

// Set as default registry. Default `false` (bool)
func (o ClusterPrivateRegistryOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterPrivateRegistry) *bool { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// Registry password (string)
func (o ClusterPrivateRegistryOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateRegistry) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Registry URL (string)
func (o ClusterPrivateRegistryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterPrivateRegistry) string { return v.Url }).(pulumi.StringOutput)
}

// Registry user (string)
func (o ClusterPrivateRegistryOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterPrivateRegistry) *string { return v.User }).(pulumi.StringPtrOutput)
}

type ClusterPrivateRegistryArrayOutput struct{ *pulumi.OutputState }

func (ClusterPrivateRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterPrivateRegistry)(nil)).Elem()
}

func (o ClusterPrivateRegistryArrayOutput) ToClusterPrivateRegistryArrayOutput() ClusterPrivateRegistryArrayOutput {
	return o
}

func (o ClusterPrivateRegistryArrayOutput) ToClusterPrivateRegistryArrayOutputWithContext(ctx context.Context) ClusterPrivateRegistryArrayOutput {
	return o
}

func (o ClusterPrivateRegistryArrayOutput) Index(i pulumi.IntInput) ClusterPrivateRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterPrivateRegistry {
		return vs[0].([]ClusterPrivateRegistry)[vs[1].(int)]
	}).(ClusterPrivateRegistryOutput)
}

type ClusterRestore struct {
	// Restore cluster. Default `false` (bool)
	Restore *bool `pulumi:"restore"`
	// Snapshot name (string)
	SnapshotName *string `pulumi:"snapshotName"`
}

// ClusterRestoreInput is an input type that accepts ClusterRestoreArgs and ClusterRestoreOutput values.
// You can construct a concrete instance of `ClusterRestoreInput` via:
//
//          ClusterRestoreArgs{...}
type ClusterRestoreInput interface {
	pulumi.Input

	ToClusterRestoreOutput() ClusterRestoreOutput
	ToClusterRestoreOutputWithContext(context.Context) ClusterRestoreOutput
}

type ClusterRestoreArgs struct {
	// Restore cluster. Default `false` (bool)
	Restore pulumi.BoolPtrInput `pulumi:"restore"`
	// Snapshot name (string)
	SnapshotName pulumi.StringPtrInput `pulumi:"snapshotName"`
}

func (ClusterRestoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRestore)(nil)).Elem()
}

func (i ClusterRestoreArgs) ToClusterRestoreOutput() ClusterRestoreOutput {
	return i.ToClusterRestoreOutputWithContext(context.Background())
}

func (i ClusterRestoreArgs) ToClusterRestoreOutputWithContext(ctx context.Context) ClusterRestoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRestoreOutput)
}

func (i ClusterRestoreArgs) ToClusterRestorePtrOutput() ClusterRestorePtrOutput {
	return i.ToClusterRestorePtrOutputWithContext(context.Background())
}

func (i ClusterRestoreArgs) ToClusterRestorePtrOutputWithContext(ctx context.Context) ClusterRestorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRestoreOutput).ToClusterRestorePtrOutputWithContext(ctx)
}

// ClusterRestorePtrInput is an input type that accepts ClusterRestoreArgs, ClusterRestorePtr and ClusterRestorePtrOutput values.
// You can construct a concrete instance of `ClusterRestorePtrInput` via:
//
//          ClusterRestoreArgs{...}
//
//  or:
//
//          nil
type ClusterRestorePtrInput interface {
	pulumi.Input

	ToClusterRestorePtrOutput() ClusterRestorePtrOutput
	ToClusterRestorePtrOutputWithContext(context.Context) ClusterRestorePtrOutput
}

type clusterRestorePtrType ClusterRestoreArgs

func ClusterRestorePtr(v *ClusterRestoreArgs) ClusterRestorePtrInput {
	return (*clusterRestorePtrType)(v)
}

func (*clusterRestorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterRestore)(nil)).Elem()
}

func (i *clusterRestorePtrType) ToClusterRestorePtrOutput() ClusterRestorePtrOutput {
	return i.ToClusterRestorePtrOutputWithContext(context.Background())
}

func (i *clusterRestorePtrType) ToClusterRestorePtrOutputWithContext(ctx context.Context) ClusterRestorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRestorePtrOutput)
}

type ClusterRestoreOutput struct{ *pulumi.OutputState }

func (ClusterRestoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRestore)(nil)).Elem()
}

func (o ClusterRestoreOutput) ToClusterRestoreOutput() ClusterRestoreOutput {
	return o
}

func (o ClusterRestoreOutput) ToClusterRestoreOutputWithContext(ctx context.Context) ClusterRestoreOutput {
	return o
}

func (o ClusterRestoreOutput) ToClusterRestorePtrOutput() ClusterRestorePtrOutput {
	return o.ToClusterRestorePtrOutputWithContext(context.Background())
}

func (o ClusterRestoreOutput) ToClusterRestorePtrOutputWithContext(ctx context.Context) ClusterRestorePtrOutput {
	return o.ApplyT(func(v ClusterRestore) *ClusterRestore {
		return &v
	}).(ClusterRestorePtrOutput)
}

// Restore cluster. Default `false` (bool)
func (o ClusterRestoreOutput) Restore() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterRestore) *bool { return v.Restore }).(pulumi.BoolPtrOutput)
}

// Snapshot name (string)
func (o ClusterRestoreOutput) SnapshotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRestore) *string { return v.SnapshotName }).(pulumi.StringPtrOutput)
}

type ClusterRestorePtrOutput struct{ *pulumi.OutputState }

func (ClusterRestorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterRestore)(nil)).Elem()
}

func (o ClusterRestorePtrOutput) ToClusterRestorePtrOutput() ClusterRestorePtrOutput {
	return o
}

func (o ClusterRestorePtrOutput) ToClusterRestorePtrOutputWithContext(ctx context.Context) ClusterRestorePtrOutput {
	return o
}

func (o ClusterRestorePtrOutput) Elem() ClusterRestoreOutput {
	return o.ApplyT(func(v *ClusterRestore) ClusterRestore { return *v }).(ClusterRestoreOutput)
}

// Restore cluster. Default `false` (bool)
func (o ClusterRestorePtrOutput) Restore() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterRestore) *bool {
		if v == nil {
			return nil
		}
		return v.Restore
	}).(pulumi.BoolPtrOutput)
}

// Snapshot name (string)
func (o ClusterRestorePtrOutput) SnapshotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRestore) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotName
	}).(pulumi.StringPtrOutput)
}

type ClusterRotateCertificates struct {
	// Rotate CA Certificates. Default `false` (bool)
	CaCertificates *bool `pulumi:"caCertificates"`
	// Services to rotate their certs. `etcd`, `kubelet`, `kube-apiserver`, `kube-proxy`, `kube-scheduler` and `kube-controller-manager` are supported (list)
	Services []string `pulumi:"services"`
}

// ClusterRotateCertificatesInput is an input type that accepts ClusterRotateCertificatesArgs and ClusterRotateCertificatesOutput values.
// You can construct a concrete instance of `ClusterRotateCertificatesInput` via:
//
//          ClusterRotateCertificatesArgs{...}
type ClusterRotateCertificatesInput interface {
	pulumi.Input

	ToClusterRotateCertificatesOutput() ClusterRotateCertificatesOutput
	ToClusterRotateCertificatesOutputWithContext(context.Context) ClusterRotateCertificatesOutput
}

type ClusterRotateCertificatesArgs struct {
	// Rotate CA Certificates. Default `false` (bool)
	CaCertificates pulumi.BoolPtrInput `pulumi:"caCertificates"`
	// Services to rotate their certs. `etcd`, `kubelet`, `kube-apiserver`, `kube-proxy`, `kube-scheduler` and `kube-controller-manager` are supported (list)
	Services pulumi.StringArrayInput `pulumi:"services"`
}

func (ClusterRotateCertificatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRotateCertificates)(nil)).Elem()
}

func (i ClusterRotateCertificatesArgs) ToClusterRotateCertificatesOutput() ClusterRotateCertificatesOutput {
	return i.ToClusterRotateCertificatesOutputWithContext(context.Background())
}

func (i ClusterRotateCertificatesArgs) ToClusterRotateCertificatesOutputWithContext(ctx context.Context) ClusterRotateCertificatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRotateCertificatesOutput)
}

func (i ClusterRotateCertificatesArgs) ToClusterRotateCertificatesPtrOutput() ClusterRotateCertificatesPtrOutput {
	return i.ToClusterRotateCertificatesPtrOutputWithContext(context.Background())
}

func (i ClusterRotateCertificatesArgs) ToClusterRotateCertificatesPtrOutputWithContext(ctx context.Context) ClusterRotateCertificatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRotateCertificatesOutput).ToClusterRotateCertificatesPtrOutputWithContext(ctx)
}

// ClusterRotateCertificatesPtrInput is an input type that accepts ClusterRotateCertificatesArgs, ClusterRotateCertificatesPtr and ClusterRotateCertificatesPtrOutput values.
// You can construct a concrete instance of `ClusterRotateCertificatesPtrInput` via:
//
//          ClusterRotateCertificatesArgs{...}
//
//  or:
//
//          nil
type ClusterRotateCertificatesPtrInput interface {
	pulumi.Input

	ToClusterRotateCertificatesPtrOutput() ClusterRotateCertificatesPtrOutput
	ToClusterRotateCertificatesPtrOutputWithContext(context.Context) ClusterRotateCertificatesPtrOutput
}

type clusterRotateCertificatesPtrType ClusterRotateCertificatesArgs

func ClusterRotateCertificatesPtr(v *ClusterRotateCertificatesArgs) ClusterRotateCertificatesPtrInput {
	return (*clusterRotateCertificatesPtrType)(v)
}

func (*clusterRotateCertificatesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterRotateCertificates)(nil)).Elem()
}

func (i *clusterRotateCertificatesPtrType) ToClusterRotateCertificatesPtrOutput() ClusterRotateCertificatesPtrOutput {
	return i.ToClusterRotateCertificatesPtrOutputWithContext(context.Background())
}

func (i *clusterRotateCertificatesPtrType) ToClusterRotateCertificatesPtrOutputWithContext(ctx context.Context) ClusterRotateCertificatesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRotateCertificatesPtrOutput)
}

type ClusterRotateCertificatesOutput struct{ *pulumi.OutputState }

func (ClusterRotateCertificatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRotateCertificates)(nil)).Elem()
}

func (o ClusterRotateCertificatesOutput) ToClusterRotateCertificatesOutput() ClusterRotateCertificatesOutput {
	return o
}

func (o ClusterRotateCertificatesOutput) ToClusterRotateCertificatesOutputWithContext(ctx context.Context) ClusterRotateCertificatesOutput {
	return o
}

func (o ClusterRotateCertificatesOutput) ToClusterRotateCertificatesPtrOutput() ClusterRotateCertificatesPtrOutput {
	return o.ToClusterRotateCertificatesPtrOutputWithContext(context.Background())
}

func (o ClusterRotateCertificatesOutput) ToClusterRotateCertificatesPtrOutputWithContext(ctx context.Context) ClusterRotateCertificatesPtrOutput {
	return o.ApplyT(func(v ClusterRotateCertificates) *ClusterRotateCertificates {
		return &v
	}).(ClusterRotateCertificatesPtrOutput)
}

// Rotate CA Certificates. Default `false` (bool)
func (o ClusterRotateCertificatesOutput) CaCertificates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterRotateCertificates) *bool { return v.CaCertificates }).(pulumi.BoolPtrOutput)
}

// Services to rotate their certs. `etcd`, `kubelet`, `kube-apiserver`, `kube-proxy`, `kube-scheduler` and `kube-controller-manager` are supported (list)
func (o ClusterRotateCertificatesOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterRotateCertificates) []string { return v.Services }).(pulumi.StringArrayOutput)
}

type ClusterRotateCertificatesPtrOutput struct{ *pulumi.OutputState }

func (ClusterRotateCertificatesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterRotateCertificates)(nil)).Elem()
}

func (o ClusterRotateCertificatesPtrOutput) ToClusterRotateCertificatesPtrOutput() ClusterRotateCertificatesPtrOutput {
	return o
}

func (o ClusterRotateCertificatesPtrOutput) ToClusterRotateCertificatesPtrOutputWithContext(ctx context.Context) ClusterRotateCertificatesPtrOutput {
	return o
}

func (o ClusterRotateCertificatesPtrOutput) Elem() ClusterRotateCertificatesOutput {
	return o.ApplyT(func(v *ClusterRotateCertificates) ClusterRotateCertificates { return *v }).(ClusterRotateCertificatesOutput)
}

// Rotate CA Certificates. Default `false` (bool)
func (o ClusterRotateCertificatesPtrOutput) CaCertificates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterRotateCertificates) *bool {
		if v == nil {
			return nil
		}
		return v.CaCertificates
	}).(pulumi.BoolPtrOutput)
}

// Services to rotate their certs. `etcd`, `kubelet`, `kube-apiserver`, `kube-proxy`, `kube-scheduler` and `kube-controller-manager` are supported (list)
func (o ClusterRotateCertificatesPtrOutput) Services() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterRotateCertificates) []string {
		if v == nil {
			return nil
		}
		return v.Services
	}).(pulumi.StringArrayOutput)
}

type ClusterRunningSystemImages struct {
	// Docker image for aciCniDeployContainer (string)
	AciCniDeployContainer *string `pulumi:"aciCniDeployContainer"`
	// Docker image for aciControllerContainer (string)
	AciControllerContainer *string `pulumi:"aciControllerContainer"`
	// Docker image for aciHostContainer (string)
	AciHostContainer *string `pulumi:"aciHostContainer"`
	// Docker image for aciMcastContainer (string)
	AciMcastContainer *string `pulumi:"aciMcastContainer"`
	// Docker image for aciOpflexContainer (string)
	AciOpflexContainer *string `pulumi:"aciOpflexContainer"`
	// Docker image for aciOvsContainer (string)
	AciOvsContainer *string `pulumi:"aciOvsContainer"`
	// Docker image for alpine (string)
	Alpine *string `pulumi:"alpine"`
	// Docker image for calicoCni (string)
	CalicoCni *string `pulumi:"calicoCni"`
	// Docker image for calicoControllers (string)
	CalicoControllers *string `pulumi:"calicoControllers"`
	// Docker image for calicoCtl (string)
	CalicoCtl *string `pulumi:"calicoCtl"`
	// Docker image for calicoFlexVol (string)
	CalicoFlexVol *string `pulumi:"calicoFlexVol"`
	// Docker image for calicoNode (string)
	CalicoNode *string `pulumi:"calicoNode"`
	// Docker image for canalCni (string)
	CanalCni *string `pulumi:"canalCni"`
	// Docker image for canalFlannel (string)
	CanalFlannel *string `pulumi:"canalFlannel"`
	// Docker image for canalFlexVol (string)
	CanalFlexVol *string `pulumi:"canalFlexVol"`
	// Docker image for canalNode (string)
	CanalNode *string `pulumi:"canalNode"`
	// Docker image for certDownloader (string)
	CertDownloader *string `pulumi:"certDownloader"`
	// Docker image for coredns (string)
	Coredns *string `pulumi:"coredns"`
	// Docker image for corednsAutoscaler (string)
	CorednsAutoscaler *string `pulumi:"corednsAutoscaler"`
	// Docker image for dnsmasq (string)
	Dnsmasq *string `pulumi:"dnsmasq"`
	// Docker image for etcd (string)
	Etcd *string `pulumi:"etcd"`
	// Docker image for flannel (string)
	Flannel *string `pulumi:"flannel"`
	// Docker image for flannelCni (string)
	FlannelCni *string `pulumi:"flannelCni"`
	// Docker image for ingress (string)
	Ingress *string `pulumi:"ingress"`
	// Docker image for ingressBackend (string)
	IngressBackend *string `pulumi:"ingressBackend"`
	// Docker image for kubeDns (string)
	KubeDns *string `pulumi:"kubeDns"`
	// Docker image for kubeDnsAutoscaler (string)
	KubeDnsAutoscaler *string `pulumi:"kubeDnsAutoscaler"`
	// Docker image for kubeDnsSidecar (string)
	KubeDnsSidecar *string `pulumi:"kubeDnsSidecar"`
	// Docker image for kubernetes (string)
	Kubernetes *string `pulumi:"kubernetes"`
	// Docker image for kubernetesServicesSidecar (string)
	KubernetesServicesSidecar *string `pulumi:"kubernetesServicesSidecar"`
	// Docker image for metricsServer (string)
	MetricsServer *string `pulumi:"metricsServer"`
	// Docker image for nginxProxy (string)
	NginxProxy *string `pulumi:"nginxProxy"`
	// Docker image for nodelocal (string)
	Nodelocal *string `pulumi:"nodelocal"`
	// Docker image for podInfraContainer (string)
	PodInfraContainer *string `pulumi:"podInfraContainer"`
	// Docker image for weaveCni (string)
	WeaveCni *string `pulumi:"weaveCni"`
	// Docker image for weaveNode (string)
	WeaveNode *string `pulumi:"weaveNode"`
	// Docker image for windowsPodInfraContainer (string)
	WindowsPodInfraContainer *string `pulumi:"windowsPodInfraContainer"`
}

// ClusterRunningSystemImagesInput is an input type that accepts ClusterRunningSystemImagesArgs and ClusterRunningSystemImagesOutput values.
// You can construct a concrete instance of `ClusterRunningSystemImagesInput` via:
//
//          ClusterRunningSystemImagesArgs{...}
type ClusterRunningSystemImagesInput interface {
	pulumi.Input

	ToClusterRunningSystemImagesOutput() ClusterRunningSystemImagesOutput
	ToClusterRunningSystemImagesOutputWithContext(context.Context) ClusterRunningSystemImagesOutput
}

type ClusterRunningSystemImagesArgs struct {
	// Docker image for aciCniDeployContainer (string)
	AciCniDeployContainer pulumi.StringPtrInput `pulumi:"aciCniDeployContainer"`
	// Docker image for aciControllerContainer (string)
	AciControllerContainer pulumi.StringPtrInput `pulumi:"aciControllerContainer"`
	// Docker image for aciHostContainer (string)
	AciHostContainer pulumi.StringPtrInput `pulumi:"aciHostContainer"`
	// Docker image for aciMcastContainer (string)
	AciMcastContainer pulumi.StringPtrInput `pulumi:"aciMcastContainer"`
	// Docker image for aciOpflexContainer (string)
	AciOpflexContainer pulumi.StringPtrInput `pulumi:"aciOpflexContainer"`
	// Docker image for aciOvsContainer (string)
	AciOvsContainer pulumi.StringPtrInput `pulumi:"aciOvsContainer"`
	// Docker image for alpine (string)
	Alpine pulumi.StringPtrInput `pulumi:"alpine"`
	// Docker image for calicoCni (string)
	CalicoCni pulumi.StringPtrInput `pulumi:"calicoCni"`
	// Docker image for calicoControllers (string)
	CalicoControllers pulumi.StringPtrInput `pulumi:"calicoControllers"`
	// Docker image for calicoCtl (string)
	CalicoCtl pulumi.StringPtrInput `pulumi:"calicoCtl"`
	// Docker image for calicoFlexVol (string)
	CalicoFlexVol pulumi.StringPtrInput `pulumi:"calicoFlexVol"`
	// Docker image for calicoNode (string)
	CalicoNode pulumi.StringPtrInput `pulumi:"calicoNode"`
	// Docker image for canalCni (string)
	CanalCni pulumi.StringPtrInput `pulumi:"canalCni"`
	// Docker image for canalFlannel (string)
	CanalFlannel pulumi.StringPtrInput `pulumi:"canalFlannel"`
	// Docker image for canalFlexVol (string)
	CanalFlexVol pulumi.StringPtrInput `pulumi:"canalFlexVol"`
	// Docker image for canalNode (string)
	CanalNode pulumi.StringPtrInput `pulumi:"canalNode"`
	// Docker image for certDownloader (string)
	CertDownloader pulumi.StringPtrInput `pulumi:"certDownloader"`
	// Docker image for coredns (string)
	Coredns pulumi.StringPtrInput `pulumi:"coredns"`
	// Docker image for corednsAutoscaler (string)
	CorednsAutoscaler pulumi.StringPtrInput `pulumi:"corednsAutoscaler"`
	// Docker image for dnsmasq (string)
	Dnsmasq pulumi.StringPtrInput `pulumi:"dnsmasq"`
	// Docker image for etcd (string)
	Etcd pulumi.StringPtrInput `pulumi:"etcd"`
	// Docker image for flannel (string)
	Flannel pulumi.StringPtrInput `pulumi:"flannel"`
	// Docker image for flannelCni (string)
	FlannelCni pulumi.StringPtrInput `pulumi:"flannelCni"`
	// Docker image for ingress (string)
	Ingress pulumi.StringPtrInput `pulumi:"ingress"`
	// Docker image for ingressBackend (string)
	IngressBackend pulumi.StringPtrInput `pulumi:"ingressBackend"`
	// Docker image for kubeDns (string)
	KubeDns pulumi.StringPtrInput `pulumi:"kubeDns"`
	// Docker image for kubeDnsAutoscaler (string)
	KubeDnsAutoscaler pulumi.StringPtrInput `pulumi:"kubeDnsAutoscaler"`
	// Docker image for kubeDnsSidecar (string)
	KubeDnsSidecar pulumi.StringPtrInput `pulumi:"kubeDnsSidecar"`
	// Docker image for kubernetes (string)
	Kubernetes pulumi.StringPtrInput `pulumi:"kubernetes"`
	// Docker image for kubernetesServicesSidecar (string)
	KubernetesServicesSidecar pulumi.StringPtrInput `pulumi:"kubernetesServicesSidecar"`
	// Docker image for metricsServer (string)
	MetricsServer pulumi.StringPtrInput `pulumi:"metricsServer"`
	// Docker image for nginxProxy (string)
	NginxProxy pulumi.StringPtrInput `pulumi:"nginxProxy"`
	// Docker image for nodelocal (string)
	Nodelocal pulumi.StringPtrInput `pulumi:"nodelocal"`
	// Docker image for podInfraContainer (string)
	PodInfraContainer pulumi.StringPtrInput `pulumi:"podInfraContainer"`
	// Docker image for weaveCni (string)
	WeaveCni pulumi.StringPtrInput `pulumi:"weaveCni"`
	// Docker image for weaveNode (string)
	WeaveNode pulumi.StringPtrInput `pulumi:"weaveNode"`
	// Docker image for windowsPodInfraContainer (string)
	WindowsPodInfraContainer pulumi.StringPtrInput `pulumi:"windowsPodInfraContainer"`
}

func (ClusterRunningSystemImagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRunningSystemImages)(nil)).Elem()
}

func (i ClusterRunningSystemImagesArgs) ToClusterRunningSystemImagesOutput() ClusterRunningSystemImagesOutput {
	return i.ToClusterRunningSystemImagesOutputWithContext(context.Background())
}

func (i ClusterRunningSystemImagesArgs) ToClusterRunningSystemImagesOutputWithContext(ctx context.Context) ClusterRunningSystemImagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRunningSystemImagesOutput)
}

func (i ClusterRunningSystemImagesArgs) ToClusterRunningSystemImagesPtrOutput() ClusterRunningSystemImagesPtrOutput {
	return i.ToClusterRunningSystemImagesPtrOutputWithContext(context.Background())
}

func (i ClusterRunningSystemImagesArgs) ToClusterRunningSystemImagesPtrOutputWithContext(ctx context.Context) ClusterRunningSystemImagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRunningSystemImagesOutput).ToClusterRunningSystemImagesPtrOutputWithContext(ctx)
}

// ClusterRunningSystemImagesPtrInput is an input type that accepts ClusterRunningSystemImagesArgs, ClusterRunningSystemImagesPtr and ClusterRunningSystemImagesPtrOutput values.
// You can construct a concrete instance of `ClusterRunningSystemImagesPtrInput` via:
//
//          ClusterRunningSystemImagesArgs{...}
//
//  or:
//
//          nil
type ClusterRunningSystemImagesPtrInput interface {
	pulumi.Input

	ToClusterRunningSystemImagesPtrOutput() ClusterRunningSystemImagesPtrOutput
	ToClusterRunningSystemImagesPtrOutputWithContext(context.Context) ClusterRunningSystemImagesPtrOutput
}

type clusterRunningSystemImagesPtrType ClusterRunningSystemImagesArgs

func ClusterRunningSystemImagesPtr(v *ClusterRunningSystemImagesArgs) ClusterRunningSystemImagesPtrInput {
	return (*clusterRunningSystemImagesPtrType)(v)
}

func (*clusterRunningSystemImagesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterRunningSystemImages)(nil)).Elem()
}

func (i *clusterRunningSystemImagesPtrType) ToClusterRunningSystemImagesPtrOutput() ClusterRunningSystemImagesPtrOutput {
	return i.ToClusterRunningSystemImagesPtrOutputWithContext(context.Background())
}

func (i *clusterRunningSystemImagesPtrType) ToClusterRunningSystemImagesPtrOutputWithContext(ctx context.Context) ClusterRunningSystemImagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRunningSystemImagesPtrOutput)
}

type ClusterRunningSystemImagesOutput struct{ *pulumi.OutputState }

func (ClusterRunningSystemImagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRunningSystemImages)(nil)).Elem()
}

func (o ClusterRunningSystemImagesOutput) ToClusterRunningSystemImagesOutput() ClusterRunningSystemImagesOutput {
	return o
}

func (o ClusterRunningSystemImagesOutput) ToClusterRunningSystemImagesOutputWithContext(ctx context.Context) ClusterRunningSystemImagesOutput {
	return o
}

func (o ClusterRunningSystemImagesOutput) ToClusterRunningSystemImagesPtrOutput() ClusterRunningSystemImagesPtrOutput {
	return o.ToClusterRunningSystemImagesPtrOutputWithContext(context.Background())
}

func (o ClusterRunningSystemImagesOutput) ToClusterRunningSystemImagesPtrOutputWithContext(ctx context.Context) ClusterRunningSystemImagesPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *ClusterRunningSystemImages {
		return &v
	}).(ClusterRunningSystemImagesPtrOutput)
}

// Docker image for aciCniDeployContainer (string)
func (o ClusterRunningSystemImagesOutput) AciCniDeployContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.AciCniDeployContainer }).(pulumi.StringPtrOutput)
}

// Docker image for aciControllerContainer (string)
func (o ClusterRunningSystemImagesOutput) AciControllerContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.AciControllerContainer }).(pulumi.StringPtrOutput)
}

// Docker image for aciHostContainer (string)
func (o ClusterRunningSystemImagesOutput) AciHostContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.AciHostContainer }).(pulumi.StringPtrOutput)
}

// Docker image for aciMcastContainer (string)
func (o ClusterRunningSystemImagesOutput) AciMcastContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.AciMcastContainer }).(pulumi.StringPtrOutput)
}

// Docker image for aciOpflexContainer (string)
func (o ClusterRunningSystemImagesOutput) AciOpflexContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.AciOpflexContainer }).(pulumi.StringPtrOutput)
}

// Docker image for aciOvsContainer (string)
func (o ClusterRunningSystemImagesOutput) AciOvsContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.AciOvsContainer }).(pulumi.StringPtrOutput)
}

// Docker image for alpine (string)
func (o ClusterRunningSystemImagesOutput) Alpine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.Alpine }).(pulumi.StringPtrOutput)
}

// Docker image for calicoCni (string)
func (o ClusterRunningSystemImagesOutput) CalicoCni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.CalicoCni }).(pulumi.StringPtrOutput)
}

// Docker image for calicoControllers (string)
func (o ClusterRunningSystemImagesOutput) CalicoControllers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.CalicoControllers }).(pulumi.StringPtrOutput)
}

// Docker image for calicoCtl (string)
func (o ClusterRunningSystemImagesOutput) CalicoCtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.CalicoCtl }).(pulumi.StringPtrOutput)
}

// Docker image for calicoFlexVol (string)
func (o ClusterRunningSystemImagesOutput) CalicoFlexVol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.CalicoFlexVol }).(pulumi.StringPtrOutput)
}

// Docker image for calicoNode (string)
func (o ClusterRunningSystemImagesOutput) CalicoNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.CalicoNode }).(pulumi.StringPtrOutput)
}

// Docker image for canalCni (string)
func (o ClusterRunningSystemImagesOutput) CanalCni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.CanalCni }).(pulumi.StringPtrOutput)
}

// Docker image for canalFlannel (string)
func (o ClusterRunningSystemImagesOutput) CanalFlannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.CanalFlannel }).(pulumi.StringPtrOutput)
}

// Docker image for canalFlexVol (string)
func (o ClusterRunningSystemImagesOutput) CanalFlexVol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.CanalFlexVol }).(pulumi.StringPtrOutput)
}

// Docker image for canalNode (string)
func (o ClusterRunningSystemImagesOutput) CanalNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.CanalNode }).(pulumi.StringPtrOutput)
}

// Docker image for certDownloader (string)
func (o ClusterRunningSystemImagesOutput) CertDownloader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.CertDownloader }).(pulumi.StringPtrOutput)
}

// Docker image for coredns (string)
func (o ClusterRunningSystemImagesOutput) Coredns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.Coredns }).(pulumi.StringPtrOutput)
}

// Docker image for corednsAutoscaler (string)
func (o ClusterRunningSystemImagesOutput) CorednsAutoscaler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.CorednsAutoscaler }).(pulumi.StringPtrOutput)
}

// Docker image for dnsmasq (string)
func (o ClusterRunningSystemImagesOutput) Dnsmasq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.Dnsmasq }).(pulumi.StringPtrOutput)
}

// Docker image for etcd (string)
func (o ClusterRunningSystemImagesOutput) Etcd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.Etcd }).(pulumi.StringPtrOutput)
}

// Docker image for flannel (string)
func (o ClusterRunningSystemImagesOutput) Flannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.Flannel }).(pulumi.StringPtrOutput)
}

// Docker image for flannelCni (string)
func (o ClusterRunningSystemImagesOutput) FlannelCni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.FlannelCni }).(pulumi.StringPtrOutput)
}

// Docker image for ingress (string)
func (o ClusterRunningSystemImagesOutput) Ingress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.Ingress }).(pulumi.StringPtrOutput)
}

// Docker image for ingressBackend (string)
func (o ClusterRunningSystemImagesOutput) IngressBackend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.IngressBackend }).(pulumi.StringPtrOutput)
}

// Docker image for kubeDns (string)
func (o ClusterRunningSystemImagesOutput) KubeDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.KubeDns }).(pulumi.StringPtrOutput)
}

// Docker image for kubeDnsAutoscaler (string)
func (o ClusterRunningSystemImagesOutput) KubeDnsAutoscaler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.KubeDnsAutoscaler }).(pulumi.StringPtrOutput)
}

// Docker image for kubeDnsSidecar (string)
func (o ClusterRunningSystemImagesOutput) KubeDnsSidecar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.KubeDnsSidecar }).(pulumi.StringPtrOutput)
}

// Docker image for kubernetes (string)
func (o ClusterRunningSystemImagesOutput) Kubernetes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.Kubernetes }).(pulumi.StringPtrOutput)
}

// Docker image for kubernetesServicesSidecar (string)
func (o ClusterRunningSystemImagesOutput) KubernetesServicesSidecar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.KubernetesServicesSidecar }).(pulumi.StringPtrOutput)
}

// Docker image for metricsServer (string)
func (o ClusterRunningSystemImagesOutput) MetricsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.MetricsServer }).(pulumi.StringPtrOutput)
}

// Docker image for nginxProxy (string)
func (o ClusterRunningSystemImagesOutput) NginxProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.NginxProxy }).(pulumi.StringPtrOutput)
}

// Docker image for nodelocal (string)
func (o ClusterRunningSystemImagesOutput) Nodelocal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.Nodelocal }).(pulumi.StringPtrOutput)
}

// Docker image for podInfraContainer (string)
func (o ClusterRunningSystemImagesOutput) PodInfraContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.PodInfraContainer }).(pulumi.StringPtrOutput)
}

// Docker image for weaveCni (string)
func (o ClusterRunningSystemImagesOutput) WeaveCni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.WeaveCni }).(pulumi.StringPtrOutput)
}

// Docker image for weaveNode (string)
func (o ClusterRunningSystemImagesOutput) WeaveNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.WeaveNode }).(pulumi.StringPtrOutput)
}

// Docker image for windowsPodInfraContainer (string)
func (o ClusterRunningSystemImagesOutput) WindowsPodInfraContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRunningSystemImages) *string { return v.WindowsPodInfraContainer }).(pulumi.StringPtrOutput)
}

type ClusterRunningSystemImagesPtrOutput struct{ *pulumi.OutputState }

func (ClusterRunningSystemImagesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterRunningSystemImages)(nil)).Elem()
}

func (o ClusterRunningSystemImagesPtrOutput) ToClusterRunningSystemImagesPtrOutput() ClusterRunningSystemImagesPtrOutput {
	return o
}

func (o ClusterRunningSystemImagesPtrOutput) ToClusterRunningSystemImagesPtrOutputWithContext(ctx context.Context) ClusterRunningSystemImagesPtrOutput {
	return o
}

func (o ClusterRunningSystemImagesPtrOutput) Elem() ClusterRunningSystemImagesOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) ClusterRunningSystemImages { return *v }).(ClusterRunningSystemImagesOutput)
}

// Docker image for aciCniDeployContainer (string)
func (o ClusterRunningSystemImagesPtrOutput) AciCniDeployContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.AciCniDeployContainer
	}).(pulumi.StringPtrOutput)
}

// Docker image for aciControllerContainer (string)
func (o ClusterRunningSystemImagesPtrOutput) AciControllerContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.AciControllerContainer
	}).(pulumi.StringPtrOutput)
}

// Docker image for aciHostContainer (string)
func (o ClusterRunningSystemImagesPtrOutput) AciHostContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.AciHostContainer
	}).(pulumi.StringPtrOutput)
}

// Docker image for aciMcastContainer (string)
func (o ClusterRunningSystemImagesPtrOutput) AciMcastContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.AciMcastContainer
	}).(pulumi.StringPtrOutput)
}

// Docker image for aciOpflexContainer (string)
func (o ClusterRunningSystemImagesPtrOutput) AciOpflexContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.AciOpflexContainer
	}).(pulumi.StringPtrOutput)
}

// Docker image for aciOvsContainer (string)
func (o ClusterRunningSystemImagesPtrOutput) AciOvsContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.AciOvsContainer
	}).(pulumi.StringPtrOutput)
}

// Docker image for alpine (string)
func (o ClusterRunningSystemImagesPtrOutput) Alpine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.Alpine
	}).(pulumi.StringPtrOutput)
}

// Docker image for calicoCni (string)
func (o ClusterRunningSystemImagesPtrOutput) CalicoCni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CalicoCni
	}).(pulumi.StringPtrOutput)
}

// Docker image for calicoControllers (string)
func (o ClusterRunningSystemImagesPtrOutput) CalicoControllers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CalicoControllers
	}).(pulumi.StringPtrOutput)
}

// Docker image for calicoCtl (string)
func (o ClusterRunningSystemImagesPtrOutput) CalicoCtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CalicoCtl
	}).(pulumi.StringPtrOutput)
}

// Docker image for calicoFlexVol (string)
func (o ClusterRunningSystemImagesPtrOutput) CalicoFlexVol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CalicoFlexVol
	}).(pulumi.StringPtrOutput)
}

// Docker image for calicoNode (string)
func (o ClusterRunningSystemImagesPtrOutput) CalicoNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CalicoNode
	}).(pulumi.StringPtrOutput)
}

// Docker image for canalCni (string)
func (o ClusterRunningSystemImagesPtrOutput) CanalCni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CanalCni
	}).(pulumi.StringPtrOutput)
}

// Docker image for canalFlannel (string)
func (o ClusterRunningSystemImagesPtrOutput) CanalFlannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CanalFlannel
	}).(pulumi.StringPtrOutput)
}

// Docker image for canalFlexVol (string)
func (o ClusterRunningSystemImagesPtrOutput) CanalFlexVol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CanalFlexVol
	}).(pulumi.StringPtrOutput)
}

// Docker image for canalNode (string)
func (o ClusterRunningSystemImagesPtrOutput) CanalNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CanalNode
	}).(pulumi.StringPtrOutput)
}

// Docker image for certDownloader (string)
func (o ClusterRunningSystemImagesPtrOutput) CertDownloader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CertDownloader
	}).(pulumi.StringPtrOutput)
}

// Docker image for coredns (string)
func (o ClusterRunningSystemImagesPtrOutput) Coredns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.Coredns
	}).(pulumi.StringPtrOutput)
}

// Docker image for corednsAutoscaler (string)
func (o ClusterRunningSystemImagesPtrOutput) CorednsAutoscaler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CorednsAutoscaler
	}).(pulumi.StringPtrOutput)
}

// Docker image for dnsmasq (string)
func (o ClusterRunningSystemImagesPtrOutput) Dnsmasq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.Dnsmasq
	}).(pulumi.StringPtrOutput)
}

// Docker image for etcd (string)
func (o ClusterRunningSystemImagesPtrOutput) Etcd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.Etcd
	}).(pulumi.StringPtrOutput)
}

// Docker image for flannel (string)
func (o ClusterRunningSystemImagesPtrOutput) Flannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.Flannel
	}).(pulumi.StringPtrOutput)
}

// Docker image for flannelCni (string)
func (o ClusterRunningSystemImagesPtrOutput) FlannelCni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.FlannelCni
	}).(pulumi.StringPtrOutput)
}

// Docker image for ingress (string)
func (o ClusterRunningSystemImagesPtrOutput) Ingress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.Ingress
	}).(pulumi.StringPtrOutput)
}

// Docker image for ingressBackend (string)
func (o ClusterRunningSystemImagesPtrOutput) IngressBackend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.IngressBackend
	}).(pulumi.StringPtrOutput)
}

// Docker image for kubeDns (string)
func (o ClusterRunningSystemImagesPtrOutput) KubeDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.KubeDns
	}).(pulumi.StringPtrOutput)
}

// Docker image for kubeDnsAutoscaler (string)
func (o ClusterRunningSystemImagesPtrOutput) KubeDnsAutoscaler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.KubeDnsAutoscaler
	}).(pulumi.StringPtrOutput)
}

// Docker image for kubeDnsSidecar (string)
func (o ClusterRunningSystemImagesPtrOutput) KubeDnsSidecar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.KubeDnsSidecar
	}).(pulumi.StringPtrOutput)
}

// Docker image for kubernetes (string)
func (o ClusterRunningSystemImagesPtrOutput) Kubernetes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(pulumi.StringPtrOutput)
}

// Docker image for kubernetesServicesSidecar (string)
func (o ClusterRunningSystemImagesPtrOutput) KubernetesServicesSidecar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.KubernetesServicesSidecar
	}).(pulumi.StringPtrOutput)
}

// Docker image for metricsServer (string)
func (o ClusterRunningSystemImagesPtrOutput) MetricsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.MetricsServer
	}).(pulumi.StringPtrOutput)
}

// Docker image for nginxProxy (string)
func (o ClusterRunningSystemImagesPtrOutput) NginxProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.NginxProxy
	}).(pulumi.StringPtrOutput)
}

// Docker image for nodelocal (string)
func (o ClusterRunningSystemImagesPtrOutput) Nodelocal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.Nodelocal
	}).(pulumi.StringPtrOutput)
}

// Docker image for podInfraContainer (string)
func (o ClusterRunningSystemImagesPtrOutput) PodInfraContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.PodInfraContainer
	}).(pulumi.StringPtrOutput)
}

// Docker image for weaveCni (string)
func (o ClusterRunningSystemImagesPtrOutput) WeaveCni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.WeaveCni
	}).(pulumi.StringPtrOutput)
}

// Docker image for weaveNode (string)
func (o ClusterRunningSystemImagesPtrOutput) WeaveNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.WeaveNode
	}).(pulumi.StringPtrOutput)
}

// Docker image for windowsPodInfraContainer (string)
func (o ClusterRunningSystemImagesPtrOutput) WindowsPodInfraContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRunningSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.WindowsPodInfraContainer
	}).(pulumi.StringPtrOutput)
}

type ClusterServices struct {
	// Docker image for etcd (string)
	Etcd *ClusterServicesEtcd `pulumi:"etcd"`
	// Kube API options for RKE services (list maxitems:1)
	KubeApi *ClusterServicesKubeApi `pulumi:"kubeApi"`
	// Kube Controller options for RKE services (list maxitems:1)
	KubeController *ClusterServicesKubeController `pulumi:"kubeController"`
	// Kubelet options for RKE services (list maxitems:1)
	Kubelet *ClusterServicesKubelet `pulumi:"kubelet"`
	// Kubeproxy options for RKE services (list maxitems:1)
	Kubeproxy *ClusterServicesKubeproxy `pulumi:"kubeproxy"`
	// Scheduler options for RKE services (list maxitems:1)
	Scheduler *ClusterServicesScheduler `pulumi:"scheduler"`
}

// ClusterServicesInput is an input type that accepts ClusterServicesArgs and ClusterServicesOutput values.
// You can construct a concrete instance of `ClusterServicesInput` via:
//
//          ClusterServicesArgs{...}
type ClusterServicesInput interface {
	pulumi.Input

	ToClusterServicesOutput() ClusterServicesOutput
	ToClusterServicesOutputWithContext(context.Context) ClusterServicesOutput
}

type ClusterServicesArgs struct {
	// Docker image for etcd (string)
	Etcd ClusterServicesEtcdPtrInput `pulumi:"etcd"`
	// Kube API options for RKE services (list maxitems:1)
	KubeApi ClusterServicesKubeApiPtrInput `pulumi:"kubeApi"`
	// Kube Controller options for RKE services (list maxitems:1)
	KubeController ClusterServicesKubeControllerPtrInput `pulumi:"kubeController"`
	// Kubelet options for RKE services (list maxitems:1)
	Kubelet ClusterServicesKubeletPtrInput `pulumi:"kubelet"`
	// Kubeproxy options for RKE services (list maxitems:1)
	Kubeproxy ClusterServicesKubeproxyPtrInput `pulumi:"kubeproxy"`
	// Scheduler options for RKE services (list maxitems:1)
	Scheduler ClusterServicesSchedulerPtrInput `pulumi:"scheduler"`
}

func (ClusterServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServices)(nil)).Elem()
}

func (i ClusterServicesArgs) ToClusterServicesOutput() ClusterServicesOutput {
	return i.ToClusterServicesOutputWithContext(context.Background())
}

func (i ClusterServicesArgs) ToClusterServicesOutputWithContext(ctx context.Context) ClusterServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesOutput)
}

func (i ClusterServicesArgs) ToClusterServicesPtrOutput() ClusterServicesPtrOutput {
	return i.ToClusterServicesPtrOutputWithContext(context.Background())
}

func (i ClusterServicesArgs) ToClusterServicesPtrOutputWithContext(ctx context.Context) ClusterServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesOutput).ToClusterServicesPtrOutputWithContext(ctx)
}

// ClusterServicesPtrInput is an input type that accepts ClusterServicesArgs, ClusterServicesPtr and ClusterServicesPtrOutput values.
// You can construct a concrete instance of `ClusterServicesPtrInput` via:
//
//          ClusterServicesArgs{...}
//
//  or:
//
//          nil
type ClusterServicesPtrInput interface {
	pulumi.Input

	ToClusterServicesPtrOutput() ClusterServicesPtrOutput
	ToClusterServicesPtrOutputWithContext(context.Context) ClusterServicesPtrOutput
}

type clusterServicesPtrType ClusterServicesArgs

func ClusterServicesPtr(v *ClusterServicesArgs) ClusterServicesPtrInput {
	return (*clusterServicesPtrType)(v)
}

func (*clusterServicesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServices)(nil)).Elem()
}

func (i *clusterServicesPtrType) ToClusterServicesPtrOutput() ClusterServicesPtrOutput {
	return i.ToClusterServicesPtrOutputWithContext(context.Background())
}

func (i *clusterServicesPtrType) ToClusterServicesPtrOutputWithContext(ctx context.Context) ClusterServicesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesPtrOutput)
}

type ClusterServicesOutput struct{ *pulumi.OutputState }

func (ClusterServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServices)(nil)).Elem()
}

func (o ClusterServicesOutput) ToClusterServicesOutput() ClusterServicesOutput {
	return o
}

func (o ClusterServicesOutput) ToClusterServicesOutputWithContext(ctx context.Context) ClusterServicesOutput {
	return o
}

func (o ClusterServicesOutput) ToClusterServicesPtrOutput() ClusterServicesPtrOutput {
	return o.ToClusterServicesPtrOutputWithContext(context.Background())
}

func (o ClusterServicesOutput) ToClusterServicesPtrOutputWithContext(ctx context.Context) ClusterServicesPtrOutput {
	return o.ApplyT(func(v ClusterServices) *ClusterServices {
		return &v
	}).(ClusterServicesPtrOutput)
}

// Docker image for etcd (string)
func (o ClusterServicesOutput) Etcd() ClusterServicesEtcdPtrOutput {
	return o.ApplyT(func(v ClusterServices) *ClusterServicesEtcd { return v.Etcd }).(ClusterServicesEtcdPtrOutput)
}

// Kube API options for RKE services (list maxitems:1)
func (o ClusterServicesOutput) KubeApi() ClusterServicesKubeApiPtrOutput {
	return o.ApplyT(func(v ClusterServices) *ClusterServicesKubeApi { return v.KubeApi }).(ClusterServicesKubeApiPtrOutput)
}

// Kube Controller options for RKE services (list maxitems:1)
func (o ClusterServicesOutput) KubeController() ClusterServicesKubeControllerPtrOutput {
	return o.ApplyT(func(v ClusterServices) *ClusterServicesKubeController { return v.KubeController }).(ClusterServicesKubeControllerPtrOutput)
}

// Kubelet options for RKE services (list maxitems:1)
func (o ClusterServicesOutput) Kubelet() ClusterServicesKubeletPtrOutput {
	return o.ApplyT(func(v ClusterServices) *ClusterServicesKubelet { return v.Kubelet }).(ClusterServicesKubeletPtrOutput)
}

// Kubeproxy options for RKE services (list maxitems:1)
func (o ClusterServicesOutput) Kubeproxy() ClusterServicesKubeproxyPtrOutput {
	return o.ApplyT(func(v ClusterServices) *ClusterServicesKubeproxy { return v.Kubeproxy }).(ClusterServicesKubeproxyPtrOutput)
}

// Scheduler options for RKE services (list maxitems:1)
func (o ClusterServicesOutput) Scheduler() ClusterServicesSchedulerPtrOutput {
	return o.ApplyT(func(v ClusterServices) *ClusterServicesScheduler { return v.Scheduler }).(ClusterServicesSchedulerPtrOutput)
}

type ClusterServicesPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServices)(nil)).Elem()
}

func (o ClusterServicesPtrOutput) ToClusterServicesPtrOutput() ClusterServicesPtrOutput {
	return o
}

func (o ClusterServicesPtrOutput) ToClusterServicesPtrOutputWithContext(ctx context.Context) ClusterServicesPtrOutput {
	return o
}

func (o ClusterServicesPtrOutput) Elem() ClusterServicesOutput {
	return o.ApplyT(func(v *ClusterServices) ClusterServices { return *v }).(ClusterServicesOutput)
}

// Docker image for etcd (string)
func (o ClusterServicesPtrOutput) Etcd() ClusterServicesEtcdPtrOutput {
	return o.ApplyT(func(v *ClusterServices) *ClusterServicesEtcd {
		if v == nil {
			return nil
		}
		return v.Etcd
	}).(ClusterServicesEtcdPtrOutput)
}

// Kube API options for RKE services (list maxitems:1)
func (o ClusterServicesPtrOutput) KubeApi() ClusterServicesKubeApiPtrOutput {
	return o.ApplyT(func(v *ClusterServices) *ClusterServicesKubeApi {
		if v == nil {
			return nil
		}
		return v.KubeApi
	}).(ClusterServicesKubeApiPtrOutput)
}

// Kube Controller options for RKE services (list maxitems:1)
func (o ClusterServicesPtrOutput) KubeController() ClusterServicesKubeControllerPtrOutput {
	return o.ApplyT(func(v *ClusterServices) *ClusterServicesKubeController {
		if v == nil {
			return nil
		}
		return v.KubeController
	}).(ClusterServicesKubeControllerPtrOutput)
}

// Kubelet options for RKE services (list maxitems:1)
func (o ClusterServicesPtrOutput) Kubelet() ClusterServicesKubeletPtrOutput {
	return o.ApplyT(func(v *ClusterServices) *ClusterServicesKubelet {
		if v == nil {
			return nil
		}
		return v.Kubelet
	}).(ClusterServicesKubeletPtrOutput)
}

// Kubeproxy options for RKE services (list maxitems:1)
func (o ClusterServicesPtrOutput) Kubeproxy() ClusterServicesKubeproxyPtrOutput {
	return o.ApplyT(func(v *ClusterServices) *ClusterServicesKubeproxy {
		if v == nil {
			return nil
		}
		return v.Kubeproxy
	}).(ClusterServicesKubeproxyPtrOutput)
}

// Scheduler options for RKE services (list maxitems:1)
func (o ClusterServicesPtrOutput) Scheduler() ClusterServicesSchedulerPtrOutput {
	return o.ApplyT(func(v *ClusterServices) *ClusterServicesScheduler {
		if v == nil {
			return nil
		}
		return v.Scheduler
	}).(ClusterServicesSchedulerPtrOutput)
}

type ClusterServicesEtcd struct {
	// Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
	BackupConfig *ClusterServicesEtcdBackupConfig `pulumi:"backupConfig"`
	// TLS CA certificate for etcd service (string)
	CaCert *string `pulumi:"caCert"`
	// TLS certificate for etcd service (string)
	Cert *string `pulumi:"cert"`
	// Creation option for etcd service (string)
	Creation *string `pulumi:"creation"`
	// External urls for etcd service (list)
	ExternalUrls []string `pulumi:"externalUrls"`
	// Extra arguments for scheduler service (map)
	ExtraArgs map[string]interface{} `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds []string `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs []string `pulumi:"extraEnvs"`
	// Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
	Gid *int `pulumi:"gid"`
	// Docker image for scheduler service (string)
	Image *string `pulumi:"image"`
	// TLS key for etcd service (string)
	Key *string `pulumi:"key"`
	// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
	Path *string `pulumi:"path"`
	// Retention for etcd backup. Default `6` (int)
	Retention *string `pulumi:"retention"`
	// Snapshot option for etcd service. Default `true` (bool)
	Snapshot *bool `pulumi:"snapshot"`
	// Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
	Uid *int `pulumi:"uid"`
}

// ClusterServicesEtcdInput is an input type that accepts ClusterServicesEtcdArgs and ClusterServicesEtcdOutput values.
// You can construct a concrete instance of `ClusterServicesEtcdInput` via:
//
//          ClusterServicesEtcdArgs{...}
type ClusterServicesEtcdInput interface {
	pulumi.Input

	ToClusterServicesEtcdOutput() ClusterServicesEtcdOutput
	ToClusterServicesEtcdOutputWithContext(context.Context) ClusterServicesEtcdOutput
}

type ClusterServicesEtcdArgs struct {
	// Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
	BackupConfig ClusterServicesEtcdBackupConfigPtrInput `pulumi:"backupConfig"`
	// TLS CA certificate for etcd service (string)
	CaCert pulumi.StringPtrInput `pulumi:"caCert"`
	// TLS certificate for etcd service (string)
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// Creation option for etcd service (string)
	Creation pulumi.StringPtrInput `pulumi:"creation"`
	// External urls for etcd service (list)
	ExternalUrls pulumi.StringArrayInput `pulumi:"externalUrls"`
	// Extra arguments for scheduler service (map)
	ExtraArgs pulumi.MapInput `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds pulumi.StringArrayInput `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs pulumi.StringArrayInput `pulumi:"extraEnvs"`
	// Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
	Gid pulumi.IntPtrInput `pulumi:"gid"`
	// Docker image for scheduler service (string)
	Image pulumi.StringPtrInput `pulumi:"image"`
	// TLS key for etcd service (string)
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Retention for etcd backup. Default `6` (int)
	Retention pulumi.StringPtrInput `pulumi:"retention"`
	// Snapshot option for etcd service. Default `true` (bool)
	Snapshot pulumi.BoolPtrInput `pulumi:"snapshot"`
	// Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
	Uid pulumi.IntPtrInput `pulumi:"uid"`
}

func (ClusterServicesEtcdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesEtcd)(nil)).Elem()
}

func (i ClusterServicesEtcdArgs) ToClusterServicesEtcdOutput() ClusterServicesEtcdOutput {
	return i.ToClusterServicesEtcdOutputWithContext(context.Background())
}

func (i ClusterServicesEtcdArgs) ToClusterServicesEtcdOutputWithContext(ctx context.Context) ClusterServicesEtcdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdOutput)
}

func (i ClusterServicesEtcdArgs) ToClusterServicesEtcdPtrOutput() ClusterServicesEtcdPtrOutput {
	return i.ToClusterServicesEtcdPtrOutputWithContext(context.Background())
}

func (i ClusterServicesEtcdArgs) ToClusterServicesEtcdPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdOutput).ToClusterServicesEtcdPtrOutputWithContext(ctx)
}

// ClusterServicesEtcdPtrInput is an input type that accepts ClusterServicesEtcdArgs, ClusterServicesEtcdPtr and ClusterServicesEtcdPtrOutput values.
// You can construct a concrete instance of `ClusterServicesEtcdPtrInput` via:
//
//          ClusterServicesEtcdArgs{...}
//
//  or:
//
//          nil
type ClusterServicesEtcdPtrInput interface {
	pulumi.Input

	ToClusterServicesEtcdPtrOutput() ClusterServicesEtcdPtrOutput
	ToClusterServicesEtcdPtrOutputWithContext(context.Context) ClusterServicesEtcdPtrOutput
}

type clusterServicesEtcdPtrType ClusterServicesEtcdArgs

func ClusterServicesEtcdPtr(v *ClusterServicesEtcdArgs) ClusterServicesEtcdPtrInput {
	return (*clusterServicesEtcdPtrType)(v)
}

func (*clusterServicesEtcdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesEtcd)(nil)).Elem()
}

func (i *clusterServicesEtcdPtrType) ToClusterServicesEtcdPtrOutput() ClusterServicesEtcdPtrOutput {
	return i.ToClusterServicesEtcdPtrOutputWithContext(context.Background())
}

func (i *clusterServicesEtcdPtrType) ToClusterServicesEtcdPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdPtrOutput)
}

type ClusterServicesEtcdOutput struct{ *pulumi.OutputState }

func (ClusterServicesEtcdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesEtcd)(nil)).Elem()
}

func (o ClusterServicesEtcdOutput) ToClusterServicesEtcdOutput() ClusterServicesEtcdOutput {
	return o
}

func (o ClusterServicesEtcdOutput) ToClusterServicesEtcdOutputWithContext(ctx context.Context) ClusterServicesEtcdOutput {
	return o
}

func (o ClusterServicesEtcdOutput) ToClusterServicesEtcdPtrOutput() ClusterServicesEtcdPtrOutput {
	return o.ToClusterServicesEtcdPtrOutputWithContext(context.Background())
}

func (o ClusterServicesEtcdOutput) ToClusterServicesEtcdPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcd) *ClusterServicesEtcd {
		return &v
	}).(ClusterServicesEtcdPtrOutput)
}

// Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
func (o ClusterServicesEtcdOutput) BackupConfig() ClusterServicesEtcdBackupConfigPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcd) *ClusterServicesEtcdBackupConfig { return v.BackupConfig }).(ClusterServicesEtcdBackupConfigPtrOutput)
}

// TLS CA certificate for etcd service (string)
func (o ClusterServicesEtcdOutput) CaCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcd) *string { return v.CaCert }).(pulumi.StringPtrOutput)
}

// TLS certificate for etcd service (string)
func (o ClusterServicesEtcdOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcd) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// Creation option for etcd service (string)
func (o ClusterServicesEtcdOutput) Creation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcd) *string { return v.Creation }).(pulumi.StringPtrOutput)
}

// External urls for etcd service (list)
func (o ClusterServicesEtcdOutput) ExternalUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesEtcd) []string { return v.ExternalUrls }).(pulumi.StringArrayOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesEtcdOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterServicesEtcd) map[string]interface{} { return v.ExtraArgs }).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesEtcdOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesEtcd) []string { return v.ExtraBinds }).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesEtcdOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesEtcd) []string { return v.ExtraEnvs }).(pulumi.StringArrayOutput)
}

// Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
func (o ClusterServicesEtcdOutput) Gid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcd) *int { return v.Gid }).(pulumi.IntPtrOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesEtcdOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcd) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// TLS key for etcd service (string)
func (o ClusterServicesEtcdOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcd) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
func (o ClusterServicesEtcdOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcd) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Retention for etcd backup. Default `6` (int)
func (o ClusterServicesEtcdOutput) Retention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcd) *string { return v.Retention }).(pulumi.StringPtrOutput)
}

// Snapshot option for etcd service. Default `true` (bool)
func (o ClusterServicesEtcdOutput) Snapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcd) *bool { return v.Snapshot }).(pulumi.BoolPtrOutput)
}

// Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
func (o ClusterServicesEtcdOutput) Uid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcd) *int { return v.Uid }).(pulumi.IntPtrOutput)
}

type ClusterServicesEtcdPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesEtcdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesEtcd)(nil)).Elem()
}

func (o ClusterServicesEtcdPtrOutput) ToClusterServicesEtcdPtrOutput() ClusterServicesEtcdPtrOutput {
	return o
}

func (o ClusterServicesEtcdPtrOutput) ToClusterServicesEtcdPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdPtrOutput {
	return o
}

func (o ClusterServicesEtcdPtrOutput) Elem() ClusterServicesEtcdOutput {
	return o.ApplyT(func(v *ClusterServicesEtcd) ClusterServicesEtcd { return *v }).(ClusterServicesEtcdOutput)
}

// Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
func (o ClusterServicesEtcdPtrOutput) BackupConfig() ClusterServicesEtcdBackupConfigPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcd) *ClusterServicesEtcdBackupConfig {
		if v == nil {
			return nil
		}
		return v.BackupConfig
	}).(ClusterServicesEtcdBackupConfigPtrOutput)
}

// TLS CA certificate for etcd service (string)
func (o ClusterServicesEtcdPtrOutput) CaCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcd) *string {
		if v == nil {
			return nil
		}
		return v.CaCert
	}).(pulumi.StringPtrOutput)
}

// TLS certificate for etcd service (string)
func (o ClusterServicesEtcdPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcd) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// Creation option for etcd service (string)
func (o ClusterServicesEtcdPtrOutput) Creation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcd) *string {
		if v == nil {
			return nil
		}
		return v.Creation
	}).(pulumi.StringPtrOutput)
}

// External urls for etcd service (list)
func (o ClusterServicesEtcdPtrOutput) ExternalUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesEtcd) []string {
		if v == nil {
			return nil
		}
		return v.ExternalUrls
	}).(pulumi.StringArrayOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesEtcdPtrOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterServicesEtcd) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesEtcdPtrOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesEtcd) []string {
		if v == nil {
			return nil
		}
		return v.ExtraBinds
	}).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesEtcdPtrOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesEtcd) []string {
		if v == nil {
			return nil
		}
		return v.ExtraEnvs
	}).(pulumi.StringArrayOutput)
}

// Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
func (o ClusterServicesEtcdPtrOutput) Gid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcd) *int {
		if v == nil {
			return nil
		}
		return v.Gid
	}).(pulumi.IntPtrOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesEtcdPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcd) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// TLS key for etcd service (string)
func (o ClusterServicesEtcdPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcd) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
func (o ClusterServicesEtcdPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcd) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Retention for etcd backup. Default `6` (int)
func (o ClusterServicesEtcdPtrOutput) Retention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcd) *string {
		if v == nil {
			return nil
		}
		return v.Retention
	}).(pulumi.StringPtrOutput)
}

// Snapshot option for etcd service. Default `true` (bool)
func (o ClusterServicesEtcdPtrOutput) Snapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcd) *bool {
		if v == nil {
			return nil
		}
		return v.Snapshot
	}).(pulumi.BoolPtrOutput)
}

// Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
func (o ClusterServicesEtcdPtrOutput) Uid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcd) *int {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.IntPtrOutput)
}

type ClusterServicesEtcdBackupConfig struct {
	// Enable secrets encryption (bool)
	Enabled *bool `pulumi:"enabled"`
	// Interval hours for etcd backup. Default `12` (int)
	IntervalHours *int `pulumi:"intervalHours"`
	// Retention for etcd backup. Default `6` (int)
	Retention *int `pulumi:"retention"`
	// S3 config options for etcd backup (list maxitems:1)
	S3BackupConfig *ClusterServicesEtcdBackupConfigS3BackupConfig `pulumi:"s3BackupConfig"`
	// Safe timestamp for etcd backup. Default: `false` (bool)
	SafeTimestamp *bool `pulumi:"safeTimestamp"`
	// RKE node drain timeout (int)
	Timeout *int `pulumi:"timeout"`
}

// ClusterServicesEtcdBackupConfigInput is an input type that accepts ClusterServicesEtcdBackupConfigArgs and ClusterServicesEtcdBackupConfigOutput values.
// You can construct a concrete instance of `ClusterServicesEtcdBackupConfigInput` via:
//
//          ClusterServicesEtcdBackupConfigArgs{...}
type ClusterServicesEtcdBackupConfigInput interface {
	pulumi.Input

	ToClusterServicesEtcdBackupConfigOutput() ClusterServicesEtcdBackupConfigOutput
	ToClusterServicesEtcdBackupConfigOutputWithContext(context.Context) ClusterServicesEtcdBackupConfigOutput
}

type ClusterServicesEtcdBackupConfigArgs struct {
	// Enable secrets encryption (bool)
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Interval hours for etcd backup. Default `12` (int)
	IntervalHours pulumi.IntPtrInput `pulumi:"intervalHours"`
	// Retention for etcd backup. Default `6` (int)
	Retention pulumi.IntPtrInput `pulumi:"retention"`
	// S3 config options for etcd backup (list maxitems:1)
	S3BackupConfig ClusterServicesEtcdBackupConfigS3BackupConfigPtrInput `pulumi:"s3BackupConfig"`
	// Safe timestamp for etcd backup. Default: `false` (bool)
	SafeTimestamp pulumi.BoolPtrInput `pulumi:"safeTimestamp"`
	// RKE node drain timeout (int)
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (ClusterServicesEtcdBackupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesEtcdBackupConfig)(nil)).Elem()
}

func (i ClusterServicesEtcdBackupConfigArgs) ToClusterServicesEtcdBackupConfigOutput() ClusterServicesEtcdBackupConfigOutput {
	return i.ToClusterServicesEtcdBackupConfigOutputWithContext(context.Background())
}

func (i ClusterServicesEtcdBackupConfigArgs) ToClusterServicesEtcdBackupConfigOutputWithContext(ctx context.Context) ClusterServicesEtcdBackupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdBackupConfigOutput)
}

func (i ClusterServicesEtcdBackupConfigArgs) ToClusterServicesEtcdBackupConfigPtrOutput() ClusterServicesEtcdBackupConfigPtrOutput {
	return i.ToClusterServicesEtcdBackupConfigPtrOutputWithContext(context.Background())
}

func (i ClusterServicesEtcdBackupConfigArgs) ToClusterServicesEtcdBackupConfigPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdBackupConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdBackupConfigOutput).ToClusterServicesEtcdBackupConfigPtrOutputWithContext(ctx)
}

// ClusterServicesEtcdBackupConfigPtrInput is an input type that accepts ClusterServicesEtcdBackupConfigArgs, ClusterServicesEtcdBackupConfigPtr and ClusterServicesEtcdBackupConfigPtrOutput values.
// You can construct a concrete instance of `ClusterServicesEtcdBackupConfigPtrInput` via:
//
//          ClusterServicesEtcdBackupConfigArgs{...}
//
//  or:
//
//          nil
type ClusterServicesEtcdBackupConfigPtrInput interface {
	pulumi.Input

	ToClusterServicesEtcdBackupConfigPtrOutput() ClusterServicesEtcdBackupConfigPtrOutput
	ToClusterServicesEtcdBackupConfigPtrOutputWithContext(context.Context) ClusterServicesEtcdBackupConfigPtrOutput
}

type clusterServicesEtcdBackupConfigPtrType ClusterServicesEtcdBackupConfigArgs

func ClusterServicesEtcdBackupConfigPtr(v *ClusterServicesEtcdBackupConfigArgs) ClusterServicesEtcdBackupConfigPtrInput {
	return (*clusterServicesEtcdBackupConfigPtrType)(v)
}

func (*clusterServicesEtcdBackupConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesEtcdBackupConfig)(nil)).Elem()
}

func (i *clusterServicesEtcdBackupConfigPtrType) ToClusterServicesEtcdBackupConfigPtrOutput() ClusterServicesEtcdBackupConfigPtrOutput {
	return i.ToClusterServicesEtcdBackupConfigPtrOutputWithContext(context.Background())
}

func (i *clusterServicesEtcdBackupConfigPtrType) ToClusterServicesEtcdBackupConfigPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdBackupConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdBackupConfigPtrOutput)
}

type ClusterServicesEtcdBackupConfigOutput struct{ *pulumi.OutputState }

func (ClusterServicesEtcdBackupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesEtcdBackupConfig)(nil)).Elem()
}

func (o ClusterServicesEtcdBackupConfigOutput) ToClusterServicesEtcdBackupConfigOutput() ClusterServicesEtcdBackupConfigOutput {
	return o
}

func (o ClusterServicesEtcdBackupConfigOutput) ToClusterServicesEtcdBackupConfigOutputWithContext(ctx context.Context) ClusterServicesEtcdBackupConfigOutput {
	return o
}

func (o ClusterServicesEtcdBackupConfigOutput) ToClusterServicesEtcdBackupConfigPtrOutput() ClusterServicesEtcdBackupConfigPtrOutput {
	return o.ToClusterServicesEtcdBackupConfigPtrOutputWithContext(context.Background())
}

func (o ClusterServicesEtcdBackupConfigOutput) ToClusterServicesEtcdBackupConfigPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdBackupConfigPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdBackupConfig) *ClusterServicesEtcdBackupConfig {
		return &v
	}).(ClusterServicesEtcdBackupConfigPtrOutput)
}

// Enable secrets encryption (bool)
func (o ClusterServicesEtcdBackupConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdBackupConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Interval hours for etcd backup. Default `12` (int)
func (o ClusterServicesEtcdBackupConfigOutput) IntervalHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdBackupConfig) *int { return v.IntervalHours }).(pulumi.IntPtrOutput)
}

// Retention for etcd backup. Default `6` (int)
func (o ClusterServicesEtcdBackupConfigOutput) Retention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdBackupConfig) *int { return v.Retention }).(pulumi.IntPtrOutput)
}

// S3 config options for etcd backup (list maxitems:1)
func (o ClusterServicesEtcdBackupConfigOutput) S3BackupConfig() ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdBackupConfig) *ClusterServicesEtcdBackupConfigS3BackupConfig {
		return v.S3BackupConfig
	}).(ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput)
}

// Safe timestamp for etcd backup. Default: `false` (bool)
func (o ClusterServicesEtcdBackupConfigOutput) SafeTimestamp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdBackupConfig) *bool { return v.SafeTimestamp }).(pulumi.BoolPtrOutput)
}

// RKE node drain timeout (int)
func (o ClusterServicesEtcdBackupConfigOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdBackupConfig) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type ClusterServicesEtcdBackupConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesEtcdBackupConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesEtcdBackupConfig)(nil)).Elem()
}

func (o ClusterServicesEtcdBackupConfigPtrOutput) ToClusterServicesEtcdBackupConfigPtrOutput() ClusterServicesEtcdBackupConfigPtrOutput {
	return o
}

func (o ClusterServicesEtcdBackupConfigPtrOutput) ToClusterServicesEtcdBackupConfigPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdBackupConfigPtrOutput {
	return o
}

func (o ClusterServicesEtcdBackupConfigPtrOutput) Elem() ClusterServicesEtcdBackupConfigOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdBackupConfig) ClusterServicesEtcdBackupConfig { return *v }).(ClusterServicesEtcdBackupConfigOutput)
}

// Enable secrets encryption (bool)
func (o ClusterServicesEtcdBackupConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdBackupConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Interval hours for etcd backup. Default `12` (int)
func (o ClusterServicesEtcdBackupConfigPtrOutput) IntervalHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdBackupConfig) *int {
		if v == nil {
			return nil
		}
		return v.IntervalHours
	}).(pulumi.IntPtrOutput)
}

// Retention for etcd backup. Default `6` (int)
func (o ClusterServicesEtcdBackupConfigPtrOutput) Retention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdBackupConfig) *int {
		if v == nil {
			return nil
		}
		return v.Retention
	}).(pulumi.IntPtrOutput)
}

// S3 config options for etcd backup (list maxitems:1)
func (o ClusterServicesEtcdBackupConfigPtrOutput) S3BackupConfig() ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdBackupConfig) *ClusterServicesEtcdBackupConfigS3BackupConfig {
		if v == nil {
			return nil
		}
		return v.S3BackupConfig
	}).(ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput)
}

// Safe timestamp for etcd backup. Default: `false` (bool)
func (o ClusterServicesEtcdBackupConfigPtrOutput) SafeTimestamp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdBackupConfig) *bool {
		if v == nil {
			return nil
		}
		return v.SafeTimestamp
	}).(pulumi.BoolPtrOutput)
}

// RKE node drain timeout (int)
func (o ClusterServicesEtcdBackupConfigPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdBackupConfig) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

type ClusterServicesEtcdBackupConfigS3BackupConfig struct {
	// Access key for S3 service (string)
	AccessKey *string `pulumi:"accessKey"`
	// Bucket name for S3 service (string)
	BucketName *string `pulumi:"bucketName"`
	// Base64 encoded custom CA for S3 service. Use filebase64(<FILE>) for encoding file. Available from Rancher v2.2.5 (string)
	CustomCa *string `pulumi:"customCa"`
	// Endpoint for S3 service (string)
	Endpoint *string `pulumi:"endpoint"`
	// Folder for S3 service. Available from Rancher v2.2.7 (string)
	Folder *string `pulumi:"folder"`
	// Region for S3 service (string)
	Region *string `pulumi:"region"`
	// Secret key for S3 service (string)
	SecretKey *string `pulumi:"secretKey"`
}

// ClusterServicesEtcdBackupConfigS3BackupConfigInput is an input type that accepts ClusterServicesEtcdBackupConfigS3BackupConfigArgs and ClusterServicesEtcdBackupConfigS3BackupConfigOutput values.
// You can construct a concrete instance of `ClusterServicesEtcdBackupConfigS3BackupConfigInput` via:
//
//          ClusterServicesEtcdBackupConfigS3BackupConfigArgs{...}
type ClusterServicesEtcdBackupConfigS3BackupConfigInput interface {
	pulumi.Input

	ToClusterServicesEtcdBackupConfigS3BackupConfigOutput() ClusterServicesEtcdBackupConfigS3BackupConfigOutput
	ToClusterServicesEtcdBackupConfigS3BackupConfigOutputWithContext(context.Context) ClusterServicesEtcdBackupConfigS3BackupConfigOutput
}

type ClusterServicesEtcdBackupConfigS3BackupConfigArgs struct {
	// Access key for S3 service (string)
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Bucket name for S3 service (string)
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Base64 encoded custom CA for S3 service. Use filebase64(<FILE>) for encoding file. Available from Rancher v2.2.5 (string)
	CustomCa pulumi.StringPtrInput `pulumi:"customCa"`
	// Endpoint for S3 service (string)
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// Folder for S3 service. Available from Rancher v2.2.7 (string)
	Folder pulumi.StringPtrInput `pulumi:"folder"`
	// Region for S3 service (string)
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Secret key for S3 service (string)
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (ClusterServicesEtcdBackupConfigS3BackupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesEtcdBackupConfigS3BackupConfig)(nil)).Elem()
}

func (i ClusterServicesEtcdBackupConfigS3BackupConfigArgs) ToClusterServicesEtcdBackupConfigS3BackupConfigOutput() ClusterServicesEtcdBackupConfigS3BackupConfigOutput {
	return i.ToClusterServicesEtcdBackupConfigS3BackupConfigOutputWithContext(context.Background())
}

func (i ClusterServicesEtcdBackupConfigS3BackupConfigArgs) ToClusterServicesEtcdBackupConfigS3BackupConfigOutputWithContext(ctx context.Context) ClusterServicesEtcdBackupConfigS3BackupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdBackupConfigS3BackupConfigOutput)
}

func (i ClusterServicesEtcdBackupConfigS3BackupConfigArgs) ToClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput() ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput {
	return i.ToClusterServicesEtcdBackupConfigS3BackupConfigPtrOutputWithContext(context.Background())
}

func (i ClusterServicesEtcdBackupConfigS3BackupConfigArgs) ToClusterServicesEtcdBackupConfigS3BackupConfigPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdBackupConfigS3BackupConfigOutput).ToClusterServicesEtcdBackupConfigS3BackupConfigPtrOutputWithContext(ctx)
}

// ClusterServicesEtcdBackupConfigS3BackupConfigPtrInput is an input type that accepts ClusterServicesEtcdBackupConfigS3BackupConfigArgs, ClusterServicesEtcdBackupConfigS3BackupConfigPtr and ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput values.
// You can construct a concrete instance of `ClusterServicesEtcdBackupConfigS3BackupConfigPtrInput` via:
//
//          ClusterServicesEtcdBackupConfigS3BackupConfigArgs{...}
//
//  or:
//
//          nil
type ClusterServicesEtcdBackupConfigS3BackupConfigPtrInput interface {
	pulumi.Input

	ToClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput() ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput
	ToClusterServicesEtcdBackupConfigS3BackupConfigPtrOutputWithContext(context.Context) ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput
}

type clusterServicesEtcdBackupConfigS3BackupConfigPtrType ClusterServicesEtcdBackupConfigS3BackupConfigArgs

func ClusterServicesEtcdBackupConfigS3BackupConfigPtr(v *ClusterServicesEtcdBackupConfigS3BackupConfigArgs) ClusterServicesEtcdBackupConfigS3BackupConfigPtrInput {
	return (*clusterServicesEtcdBackupConfigS3BackupConfigPtrType)(v)
}

func (*clusterServicesEtcdBackupConfigS3BackupConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesEtcdBackupConfigS3BackupConfig)(nil)).Elem()
}

func (i *clusterServicesEtcdBackupConfigS3BackupConfigPtrType) ToClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput() ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput {
	return i.ToClusterServicesEtcdBackupConfigS3BackupConfigPtrOutputWithContext(context.Background())
}

func (i *clusterServicesEtcdBackupConfigS3BackupConfigPtrType) ToClusterServicesEtcdBackupConfigS3BackupConfigPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput)
}

type ClusterServicesEtcdBackupConfigS3BackupConfigOutput struct{ *pulumi.OutputState }

func (ClusterServicesEtcdBackupConfigS3BackupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesEtcdBackupConfigS3BackupConfig)(nil)).Elem()
}

func (o ClusterServicesEtcdBackupConfigS3BackupConfigOutput) ToClusterServicesEtcdBackupConfigS3BackupConfigOutput() ClusterServicesEtcdBackupConfigS3BackupConfigOutput {
	return o
}

func (o ClusterServicesEtcdBackupConfigS3BackupConfigOutput) ToClusterServicesEtcdBackupConfigS3BackupConfigOutputWithContext(ctx context.Context) ClusterServicesEtcdBackupConfigS3BackupConfigOutput {
	return o
}

func (o ClusterServicesEtcdBackupConfigS3BackupConfigOutput) ToClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput() ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput {
	return o.ToClusterServicesEtcdBackupConfigS3BackupConfigPtrOutputWithContext(context.Background())
}

func (o ClusterServicesEtcdBackupConfigS3BackupConfigOutput) ToClusterServicesEtcdBackupConfigS3BackupConfigPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdBackupConfigS3BackupConfig) *ClusterServicesEtcdBackupConfigS3BackupConfig {
		return &v
	}).(ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput)
}

// Access key for S3 service (string)
func (o ClusterServicesEtcdBackupConfigS3BackupConfigOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdBackupConfigS3BackupConfig) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Bucket name for S3 service (string)
func (o ClusterServicesEtcdBackupConfigS3BackupConfigOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdBackupConfigS3BackupConfig) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// Base64 encoded custom CA for S3 service. Use filebase64(<FILE>) for encoding file. Available from Rancher v2.2.5 (string)
func (o ClusterServicesEtcdBackupConfigS3BackupConfigOutput) CustomCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdBackupConfigS3BackupConfig) *string { return v.CustomCa }).(pulumi.StringPtrOutput)
}

// Endpoint for S3 service (string)
func (o ClusterServicesEtcdBackupConfigS3BackupConfigOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdBackupConfigS3BackupConfig) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// Folder for S3 service. Available from Rancher v2.2.7 (string)
func (o ClusterServicesEtcdBackupConfigS3BackupConfigOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdBackupConfigS3BackupConfig) *string { return v.Folder }).(pulumi.StringPtrOutput)
}

// Region for S3 service (string)
func (o ClusterServicesEtcdBackupConfigS3BackupConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdBackupConfigS3BackupConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Secret key for S3 service (string)
func (o ClusterServicesEtcdBackupConfigS3BackupConfigOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdBackupConfigS3BackupConfig) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

type ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesEtcdBackupConfigS3BackupConfig)(nil)).Elem()
}

func (o ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput) ToClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput() ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput {
	return o
}

func (o ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput) ToClusterServicesEtcdBackupConfigS3BackupConfigPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput {
	return o
}

func (o ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput) Elem() ClusterServicesEtcdBackupConfigS3BackupConfigOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdBackupConfigS3BackupConfig) ClusterServicesEtcdBackupConfigS3BackupConfig {
		return *v
	}).(ClusterServicesEtcdBackupConfigS3BackupConfigOutput)
}

// Access key for S3 service (string)
func (o ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdBackupConfigS3BackupConfig) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Bucket name for S3 service (string)
func (o ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdBackupConfigS3BackupConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Base64 encoded custom CA for S3 service. Use filebase64(<FILE>) for encoding file. Available from Rancher v2.2.5 (string)
func (o ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput) CustomCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdBackupConfigS3BackupConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomCa
	}).(pulumi.StringPtrOutput)
}

// Endpoint for S3 service (string)
func (o ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdBackupConfigS3BackupConfig) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// Folder for S3 service. Available from Rancher v2.2.7 (string)
func (o ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdBackupConfigS3BackupConfig) *string {
		if v == nil {
			return nil
		}
		return v.Folder
	}).(pulumi.StringPtrOutput)
}

// Region for S3 service (string)
func (o ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdBackupConfigS3BackupConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Secret key for S3 service (string)
func (o ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdBackupConfigS3BackupConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type ClusterServicesEtcdDeprecated struct {
	// Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
	BackupConfig *ClusterServicesEtcdDeprecatedBackupConfig `pulumi:"backupConfig"`
	// TLS CA certificate for etcd service (string)
	CaCert *string `pulumi:"caCert"`
	// TLS certificate for etcd service (string)
	Cert *string `pulumi:"cert"`
	// Creation option for etcd service (string)
	Creation *string `pulumi:"creation"`
	// External urls for etcd service (list)
	ExternalUrls []string `pulumi:"externalUrls"`
	// Extra arguments for scheduler service (map)
	ExtraArgs map[string]interface{} `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds []string `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs []string `pulumi:"extraEnvs"`
	// Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
	Gid *int `pulumi:"gid"`
	// Docker image for scheduler service (string)
	Image *string `pulumi:"image"`
	// TLS key for etcd service (string)
	Key *string `pulumi:"key"`
	// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
	Path *string `pulumi:"path"`
	// Retention for etcd backup. Default `6` (int)
	Retention *string `pulumi:"retention"`
	// Snapshot option for etcd service. Default `true` (bool)
	Snapshot *bool `pulumi:"snapshot"`
	// Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
	Uid *int `pulumi:"uid"`
}

// ClusterServicesEtcdDeprecatedInput is an input type that accepts ClusterServicesEtcdDeprecatedArgs and ClusterServicesEtcdDeprecatedOutput values.
// You can construct a concrete instance of `ClusterServicesEtcdDeprecatedInput` via:
//
//          ClusterServicesEtcdDeprecatedArgs{...}
type ClusterServicesEtcdDeprecatedInput interface {
	pulumi.Input

	ToClusterServicesEtcdDeprecatedOutput() ClusterServicesEtcdDeprecatedOutput
	ToClusterServicesEtcdDeprecatedOutputWithContext(context.Context) ClusterServicesEtcdDeprecatedOutput
}

type ClusterServicesEtcdDeprecatedArgs struct {
	// Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
	BackupConfig ClusterServicesEtcdDeprecatedBackupConfigPtrInput `pulumi:"backupConfig"`
	// TLS CA certificate for etcd service (string)
	CaCert pulumi.StringPtrInput `pulumi:"caCert"`
	// TLS certificate for etcd service (string)
	Cert pulumi.StringPtrInput `pulumi:"cert"`
	// Creation option for etcd service (string)
	Creation pulumi.StringPtrInput `pulumi:"creation"`
	// External urls for etcd service (list)
	ExternalUrls pulumi.StringArrayInput `pulumi:"externalUrls"`
	// Extra arguments for scheduler service (map)
	ExtraArgs pulumi.MapInput `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds pulumi.StringArrayInput `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs pulumi.StringArrayInput `pulumi:"extraEnvs"`
	// Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
	Gid pulumi.IntPtrInput `pulumi:"gid"`
	// Docker image for scheduler service (string)
	Image pulumi.StringPtrInput `pulumi:"image"`
	// TLS key for etcd service (string)
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Retention for etcd backup. Default `6` (int)
	Retention pulumi.StringPtrInput `pulumi:"retention"`
	// Snapshot option for etcd service. Default `true` (bool)
	Snapshot pulumi.BoolPtrInput `pulumi:"snapshot"`
	// Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
	Uid pulumi.IntPtrInput `pulumi:"uid"`
}

func (ClusterServicesEtcdDeprecatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesEtcdDeprecated)(nil)).Elem()
}

func (i ClusterServicesEtcdDeprecatedArgs) ToClusterServicesEtcdDeprecatedOutput() ClusterServicesEtcdDeprecatedOutput {
	return i.ToClusterServicesEtcdDeprecatedOutputWithContext(context.Background())
}

func (i ClusterServicesEtcdDeprecatedArgs) ToClusterServicesEtcdDeprecatedOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdDeprecatedOutput)
}

func (i ClusterServicesEtcdDeprecatedArgs) ToClusterServicesEtcdDeprecatedPtrOutput() ClusterServicesEtcdDeprecatedPtrOutput {
	return i.ToClusterServicesEtcdDeprecatedPtrOutputWithContext(context.Background())
}

func (i ClusterServicesEtcdDeprecatedArgs) ToClusterServicesEtcdDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdDeprecatedOutput).ToClusterServicesEtcdDeprecatedPtrOutputWithContext(ctx)
}

// ClusterServicesEtcdDeprecatedPtrInput is an input type that accepts ClusterServicesEtcdDeprecatedArgs, ClusterServicesEtcdDeprecatedPtr and ClusterServicesEtcdDeprecatedPtrOutput values.
// You can construct a concrete instance of `ClusterServicesEtcdDeprecatedPtrInput` via:
//
//          ClusterServicesEtcdDeprecatedArgs{...}
//
//  or:
//
//          nil
type ClusterServicesEtcdDeprecatedPtrInput interface {
	pulumi.Input

	ToClusterServicesEtcdDeprecatedPtrOutput() ClusterServicesEtcdDeprecatedPtrOutput
	ToClusterServicesEtcdDeprecatedPtrOutputWithContext(context.Context) ClusterServicesEtcdDeprecatedPtrOutput
}

type clusterServicesEtcdDeprecatedPtrType ClusterServicesEtcdDeprecatedArgs

func ClusterServicesEtcdDeprecatedPtr(v *ClusterServicesEtcdDeprecatedArgs) ClusterServicesEtcdDeprecatedPtrInput {
	return (*clusterServicesEtcdDeprecatedPtrType)(v)
}

func (*clusterServicesEtcdDeprecatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesEtcdDeprecated)(nil)).Elem()
}

func (i *clusterServicesEtcdDeprecatedPtrType) ToClusterServicesEtcdDeprecatedPtrOutput() ClusterServicesEtcdDeprecatedPtrOutput {
	return i.ToClusterServicesEtcdDeprecatedPtrOutputWithContext(context.Background())
}

func (i *clusterServicesEtcdDeprecatedPtrType) ToClusterServicesEtcdDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdDeprecatedPtrOutput)
}

type ClusterServicesEtcdDeprecatedOutput struct{ *pulumi.OutputState }

func (ClusterServicesEtcdDeprecatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesEtcdDeprecated)(nil)).Elem()
}

func (o ClusterServicesEtcdDeprecatedOutput) ToClusterServicesEtcdDeprecatedOutput() ClusterServicesEtcdDeprecatedOutput {
	return o
}

func (o ClusterServicesEtcdDeprecatedOutput) ToClusterServicesEtcdDeprecatedOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedOutput {
	return o
}

func (o ClusterServicesEtcdDeprecatedOutput) ToClusterServicesEtcdDeprecatedPtrOutput() ClusterServicesEtcdDeprecatedPtrOutput {
	return o.ToClusterServicesEtcdDeprecatedPtrOutputWithContext(context.Background())
}

func (o ClusterServicesEtcdDeprecatedOutput) ToClusterServicesEtcdDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecated) *ClusterServicesEtcdDeprecated {
		return &v
	}).(ClusterServicesEtcdDeprecatedPtrOutput)
}

// Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
func (o ClusterServicesEtcdDeprecatedOutput) BackupConfig() ClusterServicesEtcdDeprecatedBackupConfigPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecated) *ClusterServicesEtcdDeprecatedBackupConfig {
		return v.BackupConfig
	}).(ClusterServicesEtcdDeprecatedBackupConfigPtrOutput)
}

// TLS CA certificate for etcd service (string)
func (o ClusterServicesEtcdDeprecatedOutput) CaCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecated) *string { return v.CaCert }).(pulumi.StringPtrOutput)
}

// TLS certificate for etcd service (string)
func (o ClusterServicesEtcdDeprecatedOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecated) *string { return v.Cert }).(pulumi.StringPtrOutput)
}

// Creation option for etcd service (string)
func (o ClusterServicesEtcdDeprecatedOutput) Creation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecated) *string { return v.Creation }).(pulumi.StringPtrOutput)
}

// External urls for etcd service (list)
func (o ClusterServicesEtcdDeprecatedOutput) ExternalUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecated) []string { return v.ExternalUrls }).(pulumi.StringArrayOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesEtcdDeprecatedOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecated) map[string]interface{} { return v.ExtraArgs }).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesEtcdDeprecatedOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecated) []string { return v.ExtraBinds }).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesEtcdDeprecatedOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecated) []string { return v.ExtraEnvs }).(pulumi.StringArrayOutput)
}

// Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
func (o ClusterServicesEtcdDeprecatedOutput) Gid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecated) *int { return v.Gid }).(pulumi.IntPtrOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesEtcdDeprecatedOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecated) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// TLS key for etcd service (string)
func (o ClusterServicesEtcdDeprecatedOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecated) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
func (o ClusterServicesEtcdDeprecatedOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecated) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Retention for etcd backup. Default `6` (int)
func (o ClusterServicesEtcdDeprecatedOutput) Retention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecated) *string { return v.Retention }).(pulumi.StringPtrOutput)
}

// Snapshot option for etcd service. Default `true` (bool)
func (o ClusterServicesEtcdDeprecatedOutput) Snapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecated) *bool { return v.Snapshot }).(pulumi.BoolPtrOutput)
}

// Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
func (o ClusterServicesEtcdDeprecatedOutput) Uid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecated) *int { return v.Uid }).(pulumi.IntPtrOutput)
}

type ClusterServicesEtcdDeprecatedPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesEtcdDeprecatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesEtcdDeprecated)(nil)).Elem()
}

func (o ClusterServicesEtcdDeprecatedPtrOutput) ToClusterServicesEtcdDeprecatedPtrOutput() ClusterServicesEtcdDeprecatedPtrOutput {
	return o
}

func (o ClusterServicesEtcdDeprecatedPtrOutput) ToClusterServicesEtcdDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedPtrOutput {
	return o
}

func (o ClusterServicesEtcdDeprecatedPtrOutput) Elem() ClusterServicesEtcdDeprecatedOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecated) ClusterServicesEtcdDeprecated { return *v }).(ClusterServicesEtcdDeprecatedOutput)
}

// Backup options for etcd service. Just for Rancher v2.2.x (list maxitems:1)
func (o ClusterServicesEtcdDeprecatedPtrOutput) BackupConfig() ClusterServicesEtcdDeprecatedBackupConfigPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecated) *ClusterServicesEtcdDeprecatedBackupConfig {
		if v == nil {
			return nil
		}
		return v.BackupConfig
	}).(ClusterServicesEtcdDeprecatedBackupConfigPtrOutput)
}

// TLS CA certificate for etcd service (string)
func (o ClusterServicesEtcdDeprecatedPtrOutput) CaCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.CaCert
	}).(pulumi.StringPtrOutput)
}

// TLS certificate for etcd service (string)
func (o ClusterServicesEtcdDeprecatedPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.Cert
	}).(pulumi.StringPtrOutput)
}

// Creation option for etcd service (string)
func (o ClusterServicesEtcdDeprecatedPtrOutput) Creation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.Creation
	}).(pulumi.StringPtrOutput)
}

// External urls for etcd service (list)
func (o ClusterServicesEtcdDeprecatedPtrOutput) ExternalUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecated) []string {
		if v == nil {
			return nil
		}
		return v.ExternalUrls
	}).(pulumi.StringArrayOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesEtcdDeprecatedPtrOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecated) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesEtcdDeprecatedPtrOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecated) []string {
		if v == nil {
			return nil
		}
		return v.ExtraBinds
	}).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesEtcdDeprecatedPtrOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecated) []string {
		if v == nil {
			return nil
		}
		return v.ExtraEnvs
	}).(pulumi.StringArrayOutput)
}

// Etcd service GID. Default: `0`. For Rancher v2.3.x or above (int)
func (o ClusterServicesEtcdDeprecatedPtrOutput) Gid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecated) *int {
		if v == nil {
			return nil
		}
		return v.Gid
	}).(pulumi.IntPtrOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesEtcdDeprecatedPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// TLS key for etcd service (string)
func (o ClusterServicesEtcdDeprecatedPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
func (o ClusterServicesEtcdDeprecatedPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Retention for etcd backup. Default `6` (int)
func (o ClusterServicesEtcdDeprecatedPtrOutput) Retention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.Retention
	}).(pulumi.StringPtrOutput)
}

// Snapshot option for etcd service. Default `true` (bool)
func (o ClusterServicesEtcdDeprecatedPtrOutput) Snapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecated) *bool {
		if v == nil {
			return nil
		}
		return v.Snapshot
	}).(pulumi.BoolPtrOutput)
}

// Etcd service UID. Default: `0`. For Rancher v2.3.x or above (int)
func (o ClusterServicesEtcdDeprecatedPtrOutput) Uid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecated) *int {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.IntPtrOutput)
}

type ClusterServicesEtcdDeprecatedBackupConfig struct {
	// Enable secrets encryption (bool)
	Enabled *bool `pulumi:"enabled"`
	// Interval hours for etcd backup. Default `12` (int)
	IntervalHours *int `pulumi:"intervalHours"`
	// Retention for etcd backup. Default `6` (int)
	Retention *int `pulumi:"retention"`
	// S3 config options for etcd backup (list maxitems:1)
	S3BackupConfig *ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig `pulumi:"s3BackupConfig"`
	// Safe timestamp for etcd backup. Default: `false` (bool)
	SafeTimestamp *bool `pulumi:"safeTimestamp"`
	// RKE node drain timeout (int)
	Timeout *int `pulumi:"timeout"`
}

// ClusterServicesEtcdDeprecatedBackupConfigInput is an input type that accepts ClusterServicesEtcdDeprecatedBackupConfigArgs and ClusterServicesEtcdDeprecatedBackupConfigOutput values.
// You can construct a concrete instance of `ClusterServicesEtcdDeprecatedBackupConfigInput` via:
//
//          ClusterServicesEtcdDeprecatedBackupConfigArgs{...}
type ClusterServicesEtcdDeprecatedBackupConfigInput interface {
	pulumi.Input

	ToClusterServicesEtcdDeprecatedBackupConfigOutput() ClusterServicesEtcdDeprecatedBackupConfigOutput
	ToClusterServicesEtcdDeprecatedBackupConfigOutputWithContext(context.Context) ClusterServicesEtcdDeprecatedBackupConfigOutput
}

type ClusterServicesEtcdDeprecatedBackupConfigArgs struct {
	// Enable secrets encryption (bool)
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Interval hours for etcd backup. Default `12` (int)
	IntervalHours pulumi.IntPtrInput `pulumi:"intervalHours"`
	// Retention for etcd backup. Default `6` (int)
	Retention pulumi.IntPtrInput `pulumi:"retention"`
	// S3 config options for etcd backup (list maxitems:1)
	S3BackupConfig ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrInput `pulumi:"s3BackupConfig"`
	// Safe timestamp for etcd backup. Default: `false` (bool)
	SafeTimestamp pulumi.BoolPtrInput `pulumi:"safeTimestamp"`
	// RKE node drain timeout (int)
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (ClusterServicesEtcdDeprecatedBackupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesEtcdDeprecatedBackupConfig)(nil)).Elem()
}

func (i ClusterServicesEtcdDeprecatedBackupConfigArgs) ToClusterServicesEtcdDeprecatedBackupConfigOutput() ClusterServicesEtcdDeprecatedBackupConfigOutput {
	return i.ToClusterServicesEtcdDeprecatedBackupConfigOutputWithContext(context.Background())
}

func (i ClusterServicesEtcdDeprecatedBackupConfigArgs) ToClusterServicesEtcdDeprecatedBackupConfigOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedBackupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdDeprecatedBackupConfigOutput)
}

func (i ClusterServicesEtcdDeprecatedBackupConfigArgs) ToClusterServicesEtcdDeprecatedBackupConfigPtrOutput() ClusterServicesEtcdDeprecatedBackupConfigPtrOutput {
	return i.ToClusterServicesEtcdDeprecatedBackupConfigPtrOutputWithContext(context.Background())
}

func (i ClusterServicesEtcdDeprecatedBackupConfigArgs) ToClusterServicesEtcdDeprecatedBackupConfigPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedBackupConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdDeprecatedBackupConfigOutput).ToClusterServicesEtcdDeprecatedBackupConfigPtrOutputWithContext(ctx)
}

// ClusterServicesEtcdDeprecatedBackupConfigPtrInput is an input type that accepts ClusterServicesEtcdDeprecatedBackupConfigArgs, ClusterServicesEtcdDeprecatedBackupConfigPtr and ClusterServicesEtcdDeprecatedBackupConfigPtrOutput values.
// You can construct a concrete instance of `ClusterServicesEtcdDeprecatedBackupConfigPtrInput` via:
//
//          ClusterServicesEtcdDeprecatedBackupConfigArgs{...}
//
//  or:
//
//          nil
type ClusterServicesEtcdDeprecatedBackupConfigPtrInput interface {
	pulumi.Input

	ToClusterServicesEtcdDeprecatedBackupConfigPtrOutput() ClusterServicesEtcdDeprecatedBackupConfigPtrOutput
	ToClusterServicesEtcdDeprecatedBackupConfigPtrOutputWithContext(context.Context) ClusterServicesEtcdDeprecatedBackupConfigPtrOutput
}

type clusterServicesEtcdDeprecatedBackupConfigPtrType ClusterServicesEtcdDeprecatedBackupConfigArgs

func ClusterServicesEtcdDeprecatedBackupConfigPtr(v *ClusterServicesEtcdDeprecatedBackupConfigArgs) ClusterServicesEtcdDeprecatedBackupConfigPtrInput {
	return (*clusterServicesEtcdDeprecatedBackupConfigPtrType)(v)
}

func (*clusterServicesEtcdDeprecatedBackupConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesEtcdDeprecatedBackupConfig)(nil)).Elem()
}

func (i *clusterServicesEtcdDeprecatedBackupConfigPtrType) ToClusterServicesEtcdDeprecatedBackupConfigPtrOutput() ClusterServicesEtcdDeprecatedBackupConfigPtrOutput {
	return i.ToClusterServicesEtcdDeprecatedBackupConfigPtrOutputWithContext(context.Background())
}

func (i *clusterServicesEtcdDeprecatedBackupConfigPtrType) ToClusterServicesEtcdDeprecatedBackupConfigPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedBackupConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdDeprecatedBackupConfigPtrOutput)
}

type ClusterServicesEtcdDeprecatedBackupConfigOutput struct{ *pulumi.OutputState }

func (ClusterServicesEtcdDeprecatedBackupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesEtcdDeprecatedBackupConfig)(nil)).Elem()
}

func (o ClusterServicesEtcdDeprecatedBackupConfigOutput) ToClusterServicesEtcdDeprecatedBackupConfigOutput() ClusterServicesEtcdDeprecatedBackupConfigOutput {
	return o
}

func (o ClusterServicesEtcdDeprecatedBackupConfigOutput) ToClusterServicesEtcdDeprecatedBackupConfigOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedBackupConfigOutput {
	return o
}

func (o ClusterServicesEtcdDeprecatedBackupConfigOutput) ToClusterServicesEtcdDeprecatedBackupConfigPtrOutput() ClusterServicesEtcdDeprecatedBackupConfigPtrOutput {
	return o.ToClusterServicesEtcdDeprecatedBackupConfigPtrOutputWithContext(context.Background())
}

func (o ClusterServicesEtcdDeprecatedBackupConfigOutput) ToClusterServicesEtcdDeprecatedBackupConfigPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedBackupConfigPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecatedBackupConfig) *ClusterServicesEtcdDeprecatedBackupConfig {
		return &v
	}).(ClusterServicesEtcdDeprecatedBackupConfigPtrOutput)
}

// Enable secrets encryption (bool)
func (o ClusterServicesEtcdDeprecatedBackupConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecatedBackupConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Interval hours for etcd backup. Default `12` (int)
func (o ClusterServicesEtcdDeprecatedBackupConfigOutput) IntervalHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecatedBackupConfig) *int { return v.IntervalHours }).(pulumi.IntPtrOutput)
}

// Retention for etcd backup. Default `6` (int)
func (o ClusterServicesEtcdDeprecatedBackupConfigOutput) Retention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecatedBackupConfig) *int { return v.Retention }).(pulumi.IntPtrOutput)
}

// S3 config options for etcd backup (list maxitems:1)
func (o ClusterServicesEtcdDeprecatedBackupConfigOutput) S3BackupConfig() ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecatedBackupConfig) *ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig {
		return v.S3BackupConfig
	}).(ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput)
}

// Safe timestamp for etcd backup. Default: `false` (bool)
func (o ClusterServicesEtcdDeprecatedBackupConfigOutput) SafeTimestamp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecatedBackupConfig) *bool { return v.SafeTimestamp }).(pulumi.BoolPtrOutput)
}

// RKE node drain timeout (int)
func (o ClusterServicesEtcdDeprecatedBackupConfigOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecatedBackupConfig) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type ClusterServicesEtcdDeprecatedBackupConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesEtcdDeprecatedBackupConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesEtcdDeprecatedBackupConfig)(nil)).Elem()
}

func (o ClusterServicesEtcdDeprecatedBackupConfigPtrOutput) ToClusterServicesEtcdDeprecatedBackupConfigPtrOutput() ClusterServicesEtcdDeprecatedBackupConfigPtrOutput {
	return o
}

func (o ClusterServicesEtcdDeprecatedBackupConfigPtrOutput) ToClusterServicesEtcdDeprecatedBackupConfigPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedBackupConfigPtrOutput {
	return o
}

func (o ClusterServicesEtcdDeprecatedBackupConfigPtrOutput) Elem() ClusterServicesEtcdDeprecatedBackupConfigOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecatedBackupConfig) ClusterServicesEtcdDeprecatedBackupConfig {
		return *v
	}).(ClusterServicesEtcdDeprecatedBackupConfigOutput)
}

// Enable secrets encryption (bool)
func (o ClusterServicesEtcdDeprecatedBackupConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecatedBackupConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Interval hours for etcd backup. Default `12` (int)
func (o ClusterServicesEtcdDeprecatedBackupConfigPtrOutput) IntervalHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecatedBackupConfig) *int {
		if v == nil {
			return nil
		}
		return v.IntervalHours
	}).(pulumi.IntPtrOutput)
}

// Retention for etcd backup. Default `6` (int)
func (o ClusterServicesEtcdDeprecatedBackupConfigPtrOutput) Retention() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecatedBackupConfig) *int {
		if v == nil {
			return nil
		}
		return v.Retention
	}).(pulumi.IntPtrOutput)
}

// S3 config options for etcd backup (list maxitems:1)
func (o ClusterServicesEtcdDeprecatedBackupConfigPtrOutput) S3BackupConfig() ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecatedBackupConfig) *ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig {
		if v == nil {
			return nil
		}
		return v.S3BackupConfig
	}).(ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput)
}

// Safe timestamp for etcd backup. Default: `false` (bool)
func (o ClusterServicesEtcdDeprecatedBackupConfigPtrOutput) SafeTimestamp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecatedBackupConfig) *bool {
		if v == nil {
			return nil
		}
		return v.SafeTimestamp
	}).(pulumi.BoolPtrOutput)
}

// RKE node drain timeout (int)
func (o ClusterServicesEtcdDeprecatedBackupConfigPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecatedBackupConfig) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

type ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig struct {
	// Access key for S3 service (string)
	AccessKey *string `pulumi:"accessKey"`
	// Bucket name for S3 service (string)
	BucketName *string `pulumi:"bucketName"`
	// Base64 encoded custom CA for S3 service. Use filebase64(<FILE>) for encoding file. Available from Rancher v2.2.5 (string)
	CustomCa *string `pulumi:"customCa"`
	// Endpoint for S3 service (string)
	Endpoint *string `pulumi:"endpoint"`
	// Folder for S3 service. Available from Rancher v2.2.7 (string)
	Folder *string `pulumi:"folder"`
	// Region for S3 service (string)
	Region *string `pulumi:"region"`
	// Secret key for S3 service (string)
	SecretKey *string `pulumi:"secretKey"`
}

// ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigInput is an input type that accepts ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigArgs and ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput values.
// You can construct a concrete instance of `ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigInput` via:
//
//          ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigArgs{...}
type ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigInput interface {
	pulumi.Input

	ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput() ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput
	ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutputWithContext(context.Context) ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput
}

type ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigArgs struct {
	// Access key for S3 service (string)
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// Bucket name for S3 service (string)
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Base64 encoded custom CA for S3 service. Use filebase64(<FILE>) for encoding file. Available from Rancher v2.2.5 (string)
	CustomCa pulumi.StringPtrInput `pulumi:"customCa"`
	// Endpoint for S3 service (string)
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// Folder for S3 service. Available from Rancher v2.2.7 (string)
	Folder pulumi.StringPtrInput `pulumi:"folder"`
	// Region for S3 service (string)
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Secret key for S3 service (string)
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig)(nil)).Elem()
}

func (i ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigArgs) ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput() ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput {
	return i.ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutputWithContext(context.Background())
}

func (i ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigArgs) ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput)
}

func (i ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigArgs) ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput() ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput {
	return i.ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutputWithContext(context.Background())
}

func (i ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigArgs) ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput).ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutputWithContext(ctx)
}

// ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrInput is an input type that accepts ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigArgs, ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtr and ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput values.
// You can construct a concrete instance of `ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrInput` via:
//
//          ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigArgs{...}
//
//  or:
//
//          nil
type ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrInput interface {
	pulumi.Input

	ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput() ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput
	ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutputWithContext(context.Context) ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput
}

type clusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrType ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigArgs

func ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtr(v *ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigArgs) ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrInput {
	return (*clusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrType)(v)
}

func (*clusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig)(nil)).Elem()
}

func (i *clusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrType) ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput() ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput {
	return i.ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutputWithContext(context.Background())
}

func (i *clusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrType) ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput)
}

type ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput struct{ *pulumi.OutputState }

func (ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig)(nil)).Elem()
}

func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput) ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput() ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput {
	return o
}

func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput) ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput {
	return o
}

func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput) ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput() ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput {
	return o.ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutputWithContext(context.Background())
}

func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput) ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig) *ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig {
		return &v
	}).(ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput)
}

// Access key for S3 service (string)
func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// Bucket name for S3 service (string)
func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// Base64 encoded custom CA for S3 service. Use filebase64(<FILE>) for encoding file. Available from Rancher v2.2.5 (string)
func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput) CustomCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig) *string { return v.CustomCa }).(pulumi.StringPtrOutput)
}

// Endpoint for S3 service (string)
func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// Folder for S3 service. Available from Rancher v2.2.7 (string)
func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig) *string { return v.Folder }).(pulumi.StringPtrOutput)
}

// Region for S3 service (string)
func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Secret key for S3 service (string)
func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

type ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig)(nil)).Elem()
}

func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput) ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput() ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput {
	return o
}

func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput) ToClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutputWithContext(ctx context.Context) ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput {
	return o
}

func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput) Elem() ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig) ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig {
		return *v
	}).(ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput)
}

// Access key for S3 service (string)
func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// Bucket name for S3 service (string)
func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Base64 encoded custom CA for S3 service. Use filebase64(<FILE>) for encoding file. Available from Rancher v2.2.5 (string)
func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput) CustomCa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomCa
	}).(pulumi.StringPtrOutput)
}

// Endpoint for S3 service (string)
func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// Folder for S3 service. Available from Rancher v2.2.7 (string)
func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput) Folder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig) *string {
		if v == nil {
			return nil
		}
		return v.Folder
	}).(pulumi.StringPtrOutput)
}

// Region for S3 service (string)
func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Secret key for S3 service (string)
func (o ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeApi struct {
	// Enable [AlwaysPullImages](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages) Admission controller plugin. [Rancher docs](https://rancher.com/docs/rke/latest/en/config-options/services/#kubernetes-api-server-options) (bool)
	AlwaysPullImages *bool `pulumi:"alwaysPullImages"`
	// K8s audit log configuration. (list maxitem: 1)
	AuditLog *ClusterServicesKubeApiAuditLog `pulumi:"auditLog"`
	// K8s event rate limit configuration. (list maxitem: 1)
	EventRateLimit *ClusterServicesKubeApiEventRateLimit `pulumi:"eventRateLimit"`
	// Extra arguments for scheduler service (map)
	ExtraArgs map[string]interface{} `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds []string `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs []string `pulumi:"extraEnvs"`
	// Docker image for scheduler service (string)
	Image *string `pulumi:"image"`
	// Pod Security Policy option for kube API service (bool)
	PodSecurityPolicy *bool `pulumi:"podSecurityPolicy"`
	// [Encrypt k8s secret data configration](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/). (list maxitem: 1)
	SecretsEncryptionConfig *ClusterServicesKubeApiSecretsEncryptionConfig `pulumi:"secretsEncryptionConfig"`
	// Service Cluster ip Range option for kube controller service (string)
	ServiceClusterIpRange *string `pulumi:"serviceClusterIpRange"`
	// Service Node Port Range option for kube API service (string)
	ServiceNodePortRange *string `pulumi:"serviceNodePortRange"`
}

// ClusterServicesKubeApiInput is an input type that accepts ClusterServicesKubeApiArgs and ClusterServicesKubeApiOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiInput` via:
//
//          ClusterServicesKubeApiArgs{...}
type ClusterServicesKubeApiInput interface {
	pulumi.Input

	ToClusterServicesKubeApiOutput() ClusterServicesKubeApiOutput
	ToClusterServicesKubeApiOutputWithContext(context.Context) ClusterServicesKubeApiOutput
}

type ClusterServicesKubeApiArgs struct {
	// Enable [AlwaysPullImages](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages) Admission controller plugin. [Rancher docs](https://rancher.com/docs/rke/latest/en/config-options/services/#kubernetes-api-server-options) (bool)
	AlwaysPullImages pulumi.BoolPtrInput `pulumi:"alwaysPullImages"`
	// K8s audit log configuration. (list maxitem: 1)
	AuditLog ClusterServicesKubeApiAuditLogPtrInput `pulumi:"auditLog"`
	// K8s event rate limit configuration. (list maxitem: 1)
	EventRateLimit ClusterServicesKubeApiEventRateLimitPtrInput `pulumi:"eventRateLimit"`
	// Extra arguments for scheduler service (map)
	ExtraArgs pulumi.MapInput `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds pulumi.StringArrayInput `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs pulumi.StringArrayInput `pulumi:"extraEnvs"`
	// Docker image for scheduler service (string)
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Pod Security Policy option for kube API service (bool)
	PodSecurityPolicy pulumi.BoolPtrInput `pulumi:"podSecurityPolicy"`
	// [Encrypt k8s secret data configration](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/). (list maxitem: 1)
	SecretsEncryptionConfig ClusterServicesKubeApiSecretsEncryptionConfigPtrInput `pulumi:"secretsEncryptionConfig"`
	// Service Cluster ip Range option for kube controller service (string)
	ServiceClusterIpRange pulumi.StringPtrInput `pulumi:"serviceClusterIpRange"`
	// Service Node Port Range option for kube API service (string)
	ServiceNodePortRange pulumi.StringPtrInput `pulumi:"serviceNodePortRange"`
}

func (ClusterServicesKubeApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApi)(nil)).Elem()
}

func (i ClusterServicesKubeApiArgs) ToClusterServicesKubeApiOutput() ClusterServicesKubeApiOutput {
	return i.ToClusterServicesKubeApiOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiArgs) ToClusterServicesKubeApiOutputWithContext(ctx context.Context) ClusterServicesKubeApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiOutput)
}

func (i ClusterServicesKubeApiArgs) ToClusterServicesKubeApiPtrOutput() ClusterServicesKubeApiPtrOutput {
	return i.ToClusterServicesKubeApiPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiArgs) ToClusterServicesKubeApiPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiOutput).ToClusterServicesKubeApiPtrOutputWithContext(ctx)
}

// ClusterServicesKubeApiPtrInput is an input type that accepts ClusterServicesKubeApiArgs, ClusterServicesKubeApiPtr and ClusterServicesKubeApiPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiPtrInput` via:
//
//          ClusterServicesKubeApiArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeApiPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeApiPtrOutput() ClusterServicesKubeApiPtrOutput
	ToClusterServicesKubeApiPtrOutputWithContext(context.Context) ClusterServicesKubeApiPtrOutput
}

type clusterServicesKubeApiPtrType ClusterServicesKubeApiArgs

func ClusterServicesKubeApiPtr(v *ClusterServicesKubeApiArgs) ClusterServicesKubeApiPtrInput {
	return (*clusterServicesKubeApiPtrType)(v)
}

func (*clusterServicesKubeApiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApi)(nil)).Elem()
}

func (i *clusterServicesKubeApiPtrType) ToClusterServicesKubeApiPtrOutput() ClusterServicesKubeApiPtrOutput {
	return i.ToClusterServicesKubeApiPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeApiPtrType) ToClusterServicesKubeApiPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiPtrOutput)
}

type ClusterServicesKubeApiOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApi)(nil)).Elem()
}

func (o ClusterServicesKubeApiOutput) ToClusterServicesKubeApiOutput() ClusterServicesKubeApiOutput {
	return o
}

func (o ClusterServicesKubeApiOutput) ToClusterServicesKubeApiOutputWithContext(ctx context.Context) ClusterServicesKubeApiOutput {
	return o
}

func (o ClusterServicesKubeApiOutput) ToClusterServicesKubeApiPtrOutput() ClusterServicesKubeApiPtrOutput {
	return o.ToClusterServicesKubeApiPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeApiOutput) ToClusterServicesKubeApiPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApi) *ClusterServicesKubeApi {
		return &v
	}).(ClusterServicesKubeApiPtrOutput)
}

// Enable [AlwaysPullImages](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages) Admission controller plugin. [Rancher docs](https://rancher.com/docs/rke/latest/en/config-options/services/#kubernetes-api-server-options) (bool)
func (o ClusterServicesKubeApiOutput) AlwaysPullImages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApi) *bool { return v.AlwaysPullImages }).(pulumi.BoolPtrOutput)
}

// K8s audit log configuration. (list maxitem: 1)
func (o ClusterServicesKubeApiOutput) AuditLog() ClusterServicesKubeApiAuditLogPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApi) *ClusterServicesKubeApiAuditLog { return v.AuditLog }).(ClusterServicesKubeApiAuditLogPtrOutput)
}

// K8s event rate limit configuration. (list maxitem: 1)
func (o ClusterServicesKubeApiOutput) EventRateLimit() ClusterServicesKubeApiEventRateLimitPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApi) *ClusterServicesKubeApiEventRateLimit { return v.EventRateLimit }).(ClusterServicesKubeApiEventRateLimitPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeApiOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterServicesKubeApi) map[string]interface{} { return v.ExtraArgs }).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeApiOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubeApi) []string { return v.ExtraBinds }).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeApiOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubeApi) []string { return v.ExtraEnvs }).(pulumi.StringArrayOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeApiOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApi) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Pod Security Policy option for kube API service (bool)
func (o ClusterServicesKubeApiOutput) PodSecurityPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApi) *bool { return v.PodSecurityPolicy }).(pulumi.BoolPtrOutput)
}

// [Encrypt k8s secret data configration](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/). (list maxitem: 1)
func (o ClusterServicesKubeApiOutput) SecretsEncryptionConfig() ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApi) *ClusterServicesKubeApiSecretsEncryptionConfig {
		return v.SecretsEncryptionConfig
	}).(ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput)
}

// Service Cluster ip Range option for kube controller service (string)
func (o ClusterServicesKubeApiOutput) ServiceClusterIpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApi) *string { return v.ServiceClusterIpRange }).(pulumi.StringPtrOutput)
}

// Service Node Port Range option for kube API service (string)
func (o ClusterServicesKubeApiOutput) ServiceNodePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApi) *string { return v.ServiceNodePortRange }).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeApiPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApi)(nil)).Elem()
}

func (o ClusterServicesKubeApiPtrOutput) ToClusterServicesKubeApiPtrOutput() ClusterServicesKubeApiPtrOutput {
	return o
}

func (o ClusterServicesKubeApiPtrOutput) ToClusterServicesKubeApiPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiPtrOutput {
	return o
}

func (o ClusterServicesKubeApiPtrOutput) Elem() ClusterServicesKubeApiOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApi) ClusterServicesKubeApi { return *v }).(ClusterServicesKubeApiOutput)
}

// Enable [AlwaysPullImages](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages) Admission controller plugin. [Rancher docs](https://rancher.com/docs/rke/latest/en/config-options/services/#kubernetes-api-server-options) (bool)
func (o ClusterServicesKubeApiPtrOutput) AlwaysPullImages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApi) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysPullImages
	}).(pulumi.BoolPtrOutput)
}

// K8s audit log configuration. (list maxitem: 1)
func (o ClusterServicesKubeApiPtrOutput) AuditLog() ClusterServicesKubeApiAuditLogPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApi) *ClusterServicesKubeApiAuditLog {
		if v == nil {
			return nil
		}
		return v.AuditLog
	}).(ClusterServicesKubeApiAuditLogPtrOutput)
}

// K8s event rate limit configuration. (list maxitem: 1)
func (o ClusterServicesKubeApiPtrOutput) EventRateLimit() ClusterServicesKubeApiEventRateLimitPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApi) *ClusterServicesKubeApiEventRateLimit {
		if v == nil {
			return nil
		}
		return v.EventRateLimit
	}).(ClusterServicesKubeApiEventRateLimitPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeApiPtrOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApi) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeApiPtrOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApi) []string {
		if v == nil {
			return nil
		}
		return v.ExtraBinds
	}).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeApiPtrOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApi) []string {
		if v == nil {
			return nil
		}
		return v.ExtraEnvs
	}).(pulumi.StringArrayOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeApiPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApi) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// Pod Security Policy option for kube API service (bool)
func (o ClusterServicesKubeApiPtrOutput) PodSecurityPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApi) *bool {
		if v == nil {
			return nil
		}
		return v.PodSecurityPolicy
	}).(pulumi.BoolPtrOutput)
}

// [Encrypt k8s secret data configration](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/). (list maxitem: 1)
func (o ClusterServicesKubeApiPtrOutput) SecretsEncryptionConfig() ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApi) *ClusterServicesKubeApiSecretsEncryptionConfig {
		if v == nil {
			return nil
		}
		return v.SecretsEncryptionConfig
	}).(ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput)
}

// Service Cluster ip Range option for kube controller service (string)
func (o ClusterServicesKubeApiPtrOutput) ServiceClusterIpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApi) *string {
		if v == nil {
			return nil
		}
		return v.ServiceClusterIpRange
	}).(pulumi.StringPtrOutput)
}

// Service Node Port Range option for kube API service (string)
func (o ClusterServicesKubeApiPtrOutput) ServiceNodePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApi) *string {
		if v == nil {
			return nil
		}
		return v.ServiceNodePortRange
	}).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeApiAuditLog struct {
	// Event rate limit yaml encoded configuration. `"apiVersion"` and `"kind":"Configuration"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\nkind: Configuration\nlimits:\n- type: Server\n  burst: 30000\n  qps: 6000\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)
	Configuration *ClusterServicesKubeApiAuditLogConfiguration `pulumi:"configuration"`
	// Enable secrets encryption (bool)
	Enabled *bool `pulumi:"enabled"`
}

// ClusterServicesKubeApiAuditLogInput is an input type that accepts ClusterServicesKubeApiAuditLogArgs and ClusterServicesKubeApiAuditLogOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiAuditLogInput` via:
//
//          ClusterServicesKubeApiAuditLogArgs{...}
type ClusterServicesKubeApiAuditLogInput interface {
	pulumi.Input

	ToClusterServicesKubeApiAuditLogOutput() ClusterServicesKubeApiAuditLogOutput
	ToClusterServicesKubeApiAuditLogOutputWithContext(context.Context) ClusterServicesKubeApiAuditLogOutput
}

type ClusterServicesKubeApiAuditLogArgs struct {
	// Event rate limit yaml encoded configuration. `"apiVersion"` and `"kind":"Configuration"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\nkind: Configuration\nlimits:\n- type: Server\n  burst: 30000\n  qps: 6000\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)
	Configuration ClusterServicesKubeApiAuditLogConfigurationPtrInput `pulumi:"configuration"`
	// Enable secrets encryption (bool)
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClusterServicesKubeApiAuditLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiAuditLog)(nil)).Elem()
}

func (i ClusterServicesKubeApiAuditLogArgs) ToClusterServicesKubeApiAuditLogOutput() ClusterServicesKubeApiAuditLogOutput {
	return i.ToClusterServicesKubeApiAuditLogOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiAuditLogArgs) ToClusterServicesKubeApiAuditLogOutputWithContext(ctx context.Context) ClusterServicesKubeApiAuditLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiAuditLogOutput)
}

func (i ClusterServicesKubeApiAuditLogArgs) ToClusterServicesKubeApiAuditLogPtrOutput() ClusterServicesKubeApiAuditLogPtrOutput {
	return i.ToClusterServicesKubeApiAuditLogPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiAuditLogArgs) ToClusterServicesKubeApiAuditLogPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiAuditLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiAuditLogOutput).ToClusterServicesKubeApiAuditLogPtrOutputWithContext(ctx)
}

// ClusterServicesKubeApiAuditLogPtrInput is an input type that accepts ClusterServicesKubeApiAuditLogArgs, ClusterServicesKubeApiAuditLogPtr and ClusterServicesKubeApiAuditLogPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiAuditLogPtrInput` via:
//
//          ClusterServicesKubeApiAuditLogArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeApiAuditLogPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeApiAuditLogPtrOutput() ClusterServicesKubeApiAuditLogPtrOutput
	ToClusterServicesKubeApiAuditLogPtrOutputWithContext(context.Context) ClusterServicesKubeApiAuditLogPtrOutput
}

type clusterServicesKubeApiAuditLogPtrType ClusterServicesKubeApiAuditLogArgs

func ClusterServicesKubeApiAuditLogPtr(v *ClusterServicesKubeApiAuditLogArgs) ClusterServicesKubeApiAuditLogPtrInput {
	return (*clusterServicesKubeApiAuditLogPtrType)(v)
}

func (*clusterServicesKubeApiAuditLogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiAuditLog)(nil)).Elem()
}

func (i *clusterServicesKubeApiAuditLogPtrType) ToClusterServicesKubeApiAuditLogPtrOutput() ClusterServicesKubeApiAuditLogPtrOutput {
	return i.ToClusterServicesKubeApiAuditLogPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeApiAuditLogPtrType) ToClusterServicesKubeApiAuditLogPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiAuditLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiAuditLogPtrOutput)
}

type ClusterServicesKubeApiAuditLogOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiAuditLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiAuditLog)(nil)).Elem()
}

func (o ClusterServicesKubeApiAuditLogOutput) ToClusterServicesKubeApiAuditLogOutput() ClusterServicesKubeApiAuditLogOutput {
	return o
}

func (o ClusterServicesKubeApiAuditLogOutput) ToClusterServicesKubeApiAuditLogOutputWithContext(ctx context.Context) ClusterServicesKubeApiAuditLogOutput {
	return o
}

func (o ClusterServicesKubeApiAuditLogOutput) ToClusterServicesKubeApiAuditLogPtrOutput() ClusterServicesKubeApiAuditLogPtrOutput {
	return o.ToClusterServicesKubeApiAuditLogPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeApiAuditLogOutput) ToClusterServicesKubeApiAuditLogPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiAuditLogPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiAuditLog) *ClusterServicesKubeApiAuditLog {
		return &v
	}).(ClusterServicesKubeApiAuditLogPtrOutput)
}

// Event rate limit yaml encoded configuration. `"apiVersion"` and `"kind":"Configuration"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\nkind: Configuration\nlimits:\n- type: Server\n  burst: 30000\n  qps: 6000\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)
func (o ClusterServicesKubeApiAuditLogOutput) Configuration() ClusterServicesKubeApiAuditLogConfigurationPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiAuditLog) *ClusterServicesKubeApiAuditLogConfiguration {
		return v.Configuration
	}).(ClusterServicesKubeApiAuditLogConfigurationPtrOutput)
}

// Enable secrets encryption (bool)
func (o ClusterServicesKubeApiAuditLogOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiAuditLog) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClusterServicesKubeApiAuditLogPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiAuditLogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiAuditLog)(nil)).Elem()
}

func (o ClusterServicesKubeApiAuditLogPtrOutput) ToClusterServicesKubeApiAuditLogPtrOutput() ClusterServicesKubeApiAuditLogPtrOutput {
	return o
}

func (o ClusterServicesKubeApiAuditLogPtrOutput) ToClusterServicesKubeApiAuditLogPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiAuditLogPtrOutput {
	return o
}

func (o ClusterServicesKubeApiAuditLogPtrOutput) Elem() ClusterServicesKubeApiAuditLogOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiAuditLog) ClusterServicesKubeApiAuditLog { return *v }).(ClusterServicesKubeApiAuditLogOutput)
}

// Event rate limit yaml encoded configuration. `"apiVersion"` and `"kind":"Configuration"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\nkind: Configuration\nlimits:\n- type: Server\n  burst: 30000\n  qps: 6000\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)
func (o ClusterServicesKubeApiAuditLogPtrOutput) Configuration() ClusterServicesKubeApiAuditLogConfigurationPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiAuditLog) *ClusterServicesKubeApiAuditLogConfiguration {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(ClusterServicesKubeApiAuditLogConfigurationPtrOutput)
}

// Enable secrets encryption (bool)
func (o ClusterServicesKubeApiAuditLogPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiAuditLog) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterServicesKubeApiAuditLogConfiguration struct {
	// Audit log format (string)
	Format *string `pulumi:"format"`
	// Audit log max age (int)
	MaxAge *int `pulumi:"maxAge"`
	// Audit log max backup. Default: `10` (int)
	MaxBackup *int `pulumi:"maxBackup"`
	// Audit log max size. Default: `100` (int)
	MaxSize *int `pulumi:"maxSize"`
	// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
	Path *string `pulumi:"path"`
	// Audit policy json encoded definition. `"apiVersion"` and `"kind":"Policy","rules"` fields are required in the json. Ex. `jsonencode({"apiVersion":"audit.k8s.io/v1","kind":"Policy","rules":[{"level":"RequestResponse","resources":[{"group":"","resources":["pods"]}]}]})` [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string)
	Policy *string `pulumi:"policy"`
}

// ClusterServicesKubeApiAuditLogConfigurationInput is an input type that accepts ClusterServicesKubeApiAuditLogConfigurationArgs and ClusterServicesKubeApiAuditLogConfigurationOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiAuditLogConfigurationInput` via:
//
//          ClusterServicesKubeApiAuditLogConfigurationArgs{...}
type ClusterServicesKubeApiAuditLogConfigurationInput interface {
	pulumi.Input

	ToClusterServicesKubeApiAuditLogConfigurationOutput() ClusterServicesKubeApiAuditLogConfigurationOutput
	ToClusterServicesKubeApiAuditLogConfigurationOutputWithContext(context.Context) ClusterServicesKubeApiAuditLogConfigurationOutput
}

type ClusterServicesKubeApiAuditLogConfigurationArgs struct {
	// Audit log format (string)
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Audit log max age (int)
	MaxAge pulumi.IntPtrInput `pulumi:"maxAge"`
	// Audit log max backup. Default: `10` (int)
	MaxBackup pulumi.IntPtrInput `pulumi:"maxBackup"`
	// Audit log max size. Default: `100` (int)
	MaxSize pulumi.IntPtrInput `pulumi:"maxSize"`
	// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Audit policy json encoded definition. `"apiVersion"` and `"kind":"Policy","rules"` fields are required in the json. Ex. `jsonencode({"apiVersion":"audit.k8s.io/v1","kind":"Policy","rules":[{"level":"RequestResponse","resources":[{"group":"","resources":["pods"]}]}]})` [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string)
	Policy pulumi.StringPtrInput `pulumi:"policy"`
}

func (ClusterServicesKubeApiAuditLogConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiAuditLogConfiguration)(nil)).Elem()
}

func (i ClusterServicesKubeApiAuditLogConfigurationArgs) ToClusterServicesKubeApiAuditLogConfigurationOutput() ClusterServicesKubeApiAuditLogConfigurationOutput {
	return i.ToClusterServicesKubeApiAuditLogConfigurationOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiAuditLogConfigurationArgs) ToClusterServicesKubeApiAuditLogConfigurationOutputWithContext(ctx context.Context) ClusterServicesKubeApiAuditLogConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiAuditLogConfigurationOutput)
}

func (i ClusterServicesKubeApiAuditLogConfigurationArgs) ToClusterServicesKubeApiAuditLogConfigurationPtrOutput() ClusterServicesKubeApiAuditLogConfigurationPtrOutput {
	return i.ToClusterServicesKubeApiAuditLogConfigurationPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiAuditLogConfigurationArgs) ToClusterServicesKubeApiAuditLogConfigurationPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiAuditLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiAuditLogConfigurationOutput).ToClusterServicesKubeApiAuditLogConfigurationPtrOutputWithContext(ctx)
}

// ClusterServicesKubeApiAuditLogConfigurationPtrInput is an input type that accepts ClusterServicesKubeApiAuditLogConfigurationArgs, ClusterServicesKubeApiAuditLogConfigurationPtr and ClusterServicesKubeApiAuditLogConfigurationPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiAuditLogConfigurationPtrInput` via:
//
//          ClusterServicesKubeApiAuditLogConfigurationArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeApiAuditLogConfigurationPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeApiAuditLogConfigurationPtrOutput() ClusterServicesKubeApiAuditLogConfigurationPtrOutput
	ToClusterServicesKubeApiAuditLogConfigurationPtrOutputWithContext(context.Context) ClusterServicesKubeApiAuditLogConfigurationPtrOutput
}

type clusterServicesKubeApiAuditLogConfigurationPtrType ClusterServicesKubeApiAuditLogConfigurationArgs

func ClusterServicesKubeApiAuditLogConfigurationPtr(v *ClusterServicesKubeApiAuditLogConfigurationArgs) ClusterServicesKubeApiAuditLogConfigurationPtrInput {
	return (*clusterServicesKubeApiAuditLogConfigurationPtrType)(v)
}

func (*clusterServicesKubeApiAuditLogConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiAuditLogConfiguration)(nil)).Elem()
}

func (i *clusterServicesKubeApiAuditLogConfigurationPtrType) ToClusterServicesKubeApiAuditLogConfigurationPtrOutput() ClusterServicesKubeApiAuditLogConfigurationPtrOutput {
	return i.ToClusterServicesKubeApiAuditLogConfigurationPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeApiAuditLogConfigurationPtrType) ToClusterServicesKubeApiAuditLogConfigurationPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiAuditLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiAuditLogConfigurationPtrOutput)
}

type ClusterServicesKubeApiAuditLogConfigurationOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiAuditLogConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiAuditLogConfiguration)(nil)).Elem()
}

func (o ClusterServicesKubeApiAuditLogConfigurationOutput) ToClusterServicesKubeApiAuditLogConfigurationOutput() ClusterServicesKubeApiAuditLogConfigurationOutput {
	return o
}

func (o ClusterServicesKubeApiAuditLogConfigurationOutput) ToClusterServicesKubeApiAuditLogConfigurationOutputWithContext(ctx context.Context) ClusterServicesKubeApiAuditLogConfigurationOutput {
	return o
}

func (o ClusterServicesKubeApiAuditLogConfigurationOutput) ToClusterServicesKubeApiAuditLogConfigurationPtrOutput() ClusterServicesKubeApiAuditLogConfigurationPtrOutput {
	return o.ToClusterServicesKubeApiAuditLogConfigurationPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeApiAuditLogConfigurationOutput) ToClusterServicesKubeApiAuditLogConfigurationPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiAuditLogConfigurationPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiAuditLogConfiguration) *ClusterServicesKubeApiAuditLogConfiguration {
		return &v
	}).(ClusterServicesKubeApiAuditLogConfigurationPtrOutput)
}

// Audit log format (string)
func (o ClusterServicesKubeApiAuditLogConfigurationOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiAuditLogConfiguration) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Audit log max age (int)
func (o ClusterServicesKubeApiAuditLogConfigurationOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiAuditLogConfiguration) *int { return v.MaxAge }).(pulumi.IntPtrOutput)
}

// Audit log max backup. Default: `10` (int)
func (o ClusterServicesKubeApiAuditLogConfigurationOutput) MaxBackup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiAuditLogConfiguration) *int { return v.MaxBackup }).(pulumi.IntPtrOutput)
}

// Audit log max size. Default: `100` (int)
func (o ClusterServicesKubeApiAuditLogConfigurationOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiAuditLogConfiguration) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
func (o ClusterServicesKubeApiAuditLogConfigurationOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiAuditLogConfiguration) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Audit policy json encoded definition. `"apiVersion"` and `"kind":"Policy","rules"` fields are required in the json. Ex. `jsonencode({"apiVersion":"audit.k8s.io/v1","kind":"Policy","rules":[{"level":"RequestResponse","resources":[{"group":"","resources":["pods"]}]}]})` [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string)
func (o ClusterServicesKubeApiAuditLogConfigurationOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiAuditLogConfiguration) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeApiAuditLogConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiAuditLogConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiAuditLogConfiguration)(nil)).Elem()
}

func (o ClusterServicesKubeApiAuditLogConfigurationPtrOutput) ToClusterServicesKubeApiAuditLogConfigurationPtrOutput() ClusterServicesKubeApiAuditLogConfigurationPtrOutput {
	return o
}

func (o ClusterServicesKubeApiAuditLogConfigurationPtrOutput) ToClusterServicesKubeApiAuditLogConfigurationPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiAuditLogConfigurationPtrOutput {
	return o
}

func (o ClusterServicesKubeApiAuditLogConfigurationPtrOutput) Elem() ClusterServicesKubeApiAuditLogConfigurationOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiAuditLogConfiguration) ClusterServicesKubeApiAuditLogConfiguration {
		return *v
	}).(ClusterServicesKubeApiAuditLogConfigurationOutput)
}

// Audit log format (string)
func (o ClusterServicesKubeApiAuditLogConfigurationPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiAuditLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// Audit log max age (int)
func (o ClusterServicesKubeApiAuditLogConfigurationPtrOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiAuditLogConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.IntPtrOutput)
}

// Audit log max backup. Default: `10` (int)
func (o ClusterServicesKubeApiAuditLogConfigurationPtrOutput) MaxBackup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiAuditLogConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxBackup
	}).(pulumi.IntPtrOutput)
}

// Audit log max size. Default: `100` (int)
func (o ClusterServicesKubeApiAuditLogConfigurationPtrOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiAuditLogConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.IntPtrOutput)
}

// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
func (o ClusterServicesKubeApiAuditLogConfigurationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiAuditLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Audit policy json encoded definition. `"apiVersion"` and `"kind":"Policy","rules"` fields are required in the json. Ex. `jsonencode({"apiVersion":"audit.k8s.io/v1","kind":"Policy","rules":[{"level":"RequestResponse","resources":[{"group":"","resources":["pods"]}]}]})` [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string)
func (o ClusterServicesKubeApiAuditLogConfigurationPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiAuditLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeApiDeprecated struct {
	// Enable [AlwaysPullImages](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages) Admission controller plugin. [Rancher docs](https://rancher.com/docs/rke/latest/en/config-options/services/#kubernetes-api-server-options) (bool)
	AlwaysPullImages *bool `pulumi:"alwaysPullImages"`
	// K8s audit log configuration. (list maxitem: 1)
	AuditLog *ClusterServicesKubeApiDeprecatedAuditLog `pulumi:"auditLog"`
	// K8s event rate limit configuration. (list maxitem: 1)
	EventRateLimit *ClusterServicesKubeApiDeprecatedEventRateLimit `pulumi:"eventRateLimit"`
	// Extra arguments for scheduler service (map)
	ExtraArgs map[string]interface{} `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds []string `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs []string `pulumi:"extraEnvs"`
	// Docker image for scheduler service (string)
	Image *string `pulumi:"image"`
	// Pod Security Policy option for kube API service (bool)
	PodSecurityPolicy *bool `pulumi:"podSecurityPolicy"`
	// [Encrypt k8s secret data configration](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/). (list maxitem: 1)
	SecretsEncryptionConfig *ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig `pulumi:"secretsEncryptionConfig"`
	// Service Cluster ip Range option for kube controller service (string)
	ServiceClusterIpRange *string `pulumi:"serviceClusterIpRange"`
	// Service Node Port Range option for kube API service (string)
	ServiceNodePortRange *string `pulumi:"serviceNodePortRange"`
}

// ClusterServicesKubeApiDeprecatedInput is an input type that accepts ClusterServicesKubeApiDeprecatedArgs and ClusterServicesKubeApiDeprecatedOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiDeprecatedInput` via:
//
//          ClusterServicesKubeApiDeprecatedArgs{...}
type ClusterServicesKubeApiDeprecatedInput interface {
	pulumi.Input

	ToClusterServicesKubeApiDeprecatedOutput() ClusterServicesKubeApiDeprecatedOutput
	ToClusterServicesKubeApiDeprecatedOutputWithContext(context.Context) ClusterServicesKubeApiDeprecatedOutput
}

type ClusterServicesKubeApiDeprecatedArgs struct {
	// Enable [AlwaysPullImages](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages) Admission controller plugin. [Rancher docs](https://rancher.com/docs/rke/latest/en/config-options/services/#kubernetes-api-server-options) (bool)
	AlwaysPullImages pulumi.BoolPtrInput `pulumi:"alwaysPullImages"`
	// K8s audit log configuration. (list maxitem: 1)
	AuditLog ClusterServicesKubeApiDeprecatedAuditLogPtrInput `pulumi:"auditLog"`
	// K8s event rate limit configuration. (list maxitem: 1)
	EventRateLimit ClusterServicesKubeApiDeprecatedEventRateLimitPtrInput `pulumi:"eventRateLimit"`
	// Extra arguments for scheduler service (map)
	ExtraArgs pulumi.MapInput `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds pulumi.StringArrayInput `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs pulumi.StringArrayInput `pulumi:"extraEnvs"`
	// Docker image for scheduler service (string)
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Pod Security Policy option for kube API service (bool)
	PodSecurityPolicy pulumi.BoolPtrInput `pulumi:"podSecurityPolicy"`
	// [Encrypt k8s secret data configration](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/). (list maxitem: 1)
	SecretsEncryptionConfig ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrInput `pulumi:"secretsEncryptionConfig"`
	// Service Cluster ip Range option for kube controller service (string)
	ServiceClusterIpRange pulumi.StringPtrInput `pulumi:"serviceClusterIpRange"`
	// Service Node Port Range option for kube API service (string)
	ServiceNodePortRange pulumi.StringPtrInput `pulumi:"serviceNodePortRange"`
}

func (ClusterServicesKubeApiDeprecatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiDeprecated)(nil)).Elem()
}

func (i ClusterServicesKubeApiDeprecatedArgs) ToClusterServicesKubeApiDeprecatedOutput() ClusterServicesKubeApiDeprecatedOutput {
	return i.ToClusterServicesKubeApiDeprecatedOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiDeprecatedArgs) ToClusterServicesKubeApiDeprecatedOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiDeprecatedOutput)
}

func (i ClusterServicesKubeApiDeprecatedArgs) ToClusterServicesKubeApiDeprecatedPtrOutput() ClusterServicesKubeApiDeprecatedPtrOutput {
	return i.ToClusterServicesKubeApiDeprecatedPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiDeprecatedArgs) ToClusterServicesKubeApiDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiDeprecatedOutput).ToClusterServicesKubeApiDeprecatedPtrOutputWithContext(ctx)
}

// ClusterServicesKubeApiDeprecatedPtrInput is an input type that accepts ClusterServicesKubeApiDeprecatedArgs, ClusterServicesKubeApiDeprecatedPtr and ClusterServicesKubeApiDeprecatedPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiDeprecatedPtrInput` via:
//
//          ClusterServicesKubeApiDeprecatedArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeApiDeprecatedPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeApiDeprecatedPtrOutput() ClusterServicesKubeApiDeprecatedPtrOutput
	ToClusterServicesKubeApiDeprecatedPtrOutputWithContext(context.Context) ClusterServicesKubeApiDeprecatedPtrOutput
}

type clusterServicesKubeApiDeprecatedPtrType ClusterServicesKubeApiDeprecatedArgs

func ClusterServicesKubeApiDeprecatedPtr(v *ClusterServicesKubeApiDeprecatedArgs) ClusterServicesKubeApiDeprecatedPtrInput {
	return (*clusterServicesKubeApiDeprecatedPtrType)(v)
}

func (*clusterServicesKubeApiDeprecatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiDeprecated)(nil)).Elem()
}

func (i *clusterServicesKubeApiDeprecatedPtrType) ToClusterServicesKubeApiDeprecatedPtrOutput() ClusterServicesKubeApiDeprecatedPtrOutput {
	return i.ToClusterServicesKubeApiDeprecatedPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeApiDeprecatedPtrType) ToClusterServicesKubeApiDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiDeprecatedPtrOutput)
}

type ClusterServicesKubeApiDeprecatedOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiDeprecatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiDeprecated)(nil)).Elem()
}

func (o ClusterServicesKubeApiDeprecatedOutput) ToClusterServicesKubeApiDeprecatedOutput() ClusterServicesKubeApiDeprecatedOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedOutput) ToClusterServicesKubeApiDeprecatedOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedOutput) ToClusterServicesKubeApiDeprecatedPtrOutput() ClusterServicesKubeApiDeprecatedPtrOutput {
	return o.ToClusterServicesKubeApiDeprecatedPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeApiDeprecatedOutput) ToClusterServicesKubeApiDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecated) *ClusterServicesKubeApiDeprecated {
		return &v
	}).(ClusterServicesKubeApiDeprecatedPtrOutput)
}

// Enable [AlwaysPullImages](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages) Admission controller plugin. [Rancher docs](https://rancher.com/docs/rke/latest/en/config-options/services/#kubernetes-api-server-options) (bool)
func (o ClusterServicesKubeApiDeprecatedOutput) AlwaysPullImages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecated) *bool { return v.AlwaysPullImages }).(pulumi.BoolPtrOutput)
}

// K8s audit log configuration. (list maxitem: 1)
func (o ClusterServicesKubeApiDeprecatedOutput) AuditLog() ClusterServicesKubeApiDeprecatedAuditLogPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecated) *ClusterServicesKubeApiDeprecatedAuditLog { return v.AuditLog }).(ClusterServicesKubeApiDeprecatedAuditLogPtrOutput)
}

// K8s event rate limit configuration. (list maxitem: 1)
func (o ClusterServicesKubeApiDeprecatedOutput) EventRateLimit() ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecated) *ClusterServicesKubeApiDeprecatedEventRateLimit {
		return v.EventRateLimit
	}).(ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeApiDeprecatedOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecated) map[string]interface{} { return v.ExtraArgs }).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeApiDeprecatedOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecated) []string { return v.ExtraBinds }).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeApiDeprecatedOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecated) []string { return v.ExtraEnvs }).(pulumi.StringArrayOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeApiDeprecatedOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecated) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Pod Security Policy option for kube API service (bool)
func (o ClusterServicesKubeApiDeprecatedOutput) PodSecurityPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecated) *bool { return v.PodSecurityPolicy }).(pulumi.BoolPtrOutput)
}

// [Encrypt k8s secret data configration](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/). (list maxitem: 1)
func (o ClusterServicesKubeApiDeprecatedOutput) SecretsEncryptionConfig() ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecated) *ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig {
		return v.SecretsEncryptionConfig
	}).(ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput)
}

// Service Cluster ip Range option for kube controller service (string)
func (o ClusterServicesKubeApiDeprecatedOutput) ServiceClusterIpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecated) *string { return v.ServiceClusterIpRange }).(pulumi.StringPtrOutput)
}

// Service Node Port Range option for kube API service (string)
func (o ClusterServicesKubeApiDeprecatedOutput) ServiceNodePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecated) *string { return v.ServiceNodePortRange }).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeApiDeprecatedPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiDeprecatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiDeprecated)(nil)).Elem()
}

func (o ClusterServicesKubeApiDeprecatedPtrOutput) ToClusterServicesKubeApiDeprecatedPtrOutput() ClusterServicesKubeApiDeprecatedPtrOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedPtrOutput) ToClusterServicesKubeApiDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedPtrOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedPtrOutput) Elem() ClusterServicesKubeApiDeprecatedOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecated) ClusterServicesKubeApiDeprecated { return *v }).(ClusterServicesKubeApiDeprecatedOutput)
}

// Enable [AlwaysPullImages](https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages) Admission controller plugin. [Rancher docs](https://rancher.com/docs/rke/latest/en/config-options/services/#kubernetes-api-server-options) (bool)
func (o ClusterServicesKubeApiDeprecatedPtrOutput) AlwaysPullImages() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecated) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysPullImages
	}).(pulumi.BoolPtrOutput)
}

// K8s audit log configuration. (list maxitem: 1)
func (o ClusterServicesKubeApiDeprecatedPtrOutput) AuditLog() ClusterServicesKubeApiDeprecatedAuditLogPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecated) *ClusterServicesKubeApiDeprecatedAuditLog {
		if v == nil {
			return nil
		}
		return v.AuditLog
	}).(ClusterServicesKubeApiDeprecatedAuditLogPtrOutput)
}

// K8s event rate limit configuration. (list maxitem: 1)
func (o ClusterServicesKubeApiDeprecatedPtrOutput) EventRateLimit() ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecated) *ClusterServicesKubeApiDeprecatedEventRateLimit {
		if v == nil {
			return nil
		}
		return v.EventRateLimit
	}).(ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeApiDeprecatedPtrOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecated) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeApiDeprecatedPtrOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecated) []string {
		if v == nil {
			return nil
		}
		return v.ExtraBinds
	}).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeApiDeprecatedPtrOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecated) []string {
		if v == nil {
			return nil
		}
		return v.ExtraEnvs
	}).(pulumi.StringArrayOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeApiDeprecatedPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// Pod Security Policy option for kube API service (bool)
func (o ClusterServicesKubeApiDeprecatedPtrOutput) PodSecurityPolicy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecated) *bool {
		if v == nil {
			return nil
		}
		return v.PodSecurityPolicy
	}).(pulumi.BoolPtrOutput)
}

// [Encrypt k8s secret data configration](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/). (list maxitem: 1)
func (o ClusterServicesKubeApiDeprecatedPtrOutput) SecretsEncryptionConfig() ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecated) *ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig {
		if v == nil {
			return nil
		}
		return v.SecretsEncryptionConfig
	}).(ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput)
}

// Service Cluster ip Range option for kube controller service (string)
func (o ClusterServicesKubeApiDeprecatedPtrOutput) ServiceClusterIpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.ServiceClusterIpRange
	}).(pulumi.StringPtrOutput)
}

// Service Node Port Range option for kube API service (string)
func (o ClusterServicesKubeApiDeprecatedPtrOutput) ServiceNodePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.ServiceNodePortRange
	}).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeApiDeprecatedAuditLog struct {
	// Event rate limit yaml encoded configuration. `"apiVersion"` and `"kind":"Configuration"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\nkind: Configuration\nlimits:\n- type: Server\n  burst: 30000\n  qps: 6000\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)
	Configuration *ClusterServicesKubeApiDeprecatedAuditLogConfiguration `pulumi:"configuration"`
	// Enable secrets encryption (bool)
	Enabled *bool `pulumi:"enabled"`
}

// ClusterServicesKubeApiDeprecatedAuditLogInput is an input type that accepts ClusterServicesKubeApiDeprecatedAuditLogArgs and ClusterServicesKubeApiDeprecatedAuditLogOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiDeprecatedAuditLogInput` via:
//
//          ClusterServicesKubeApiDeprecatedAuditLogArgs{...}
type ClusterServicesKubeApiDeprecatedAuditLogInput interface {
	pulumi.Input

	ToClusterServicesKubeApiDeprecatedAuditLogOutput() ClusterServicesKubeApiDeprecatedAuditLogOutput
	ToClusterServicesKubeApiDeprecatedAuditLogOutputWithContext(context.Context) ClusterServicesKubeApiDeprecatedAuditLogOutput
}

type ClusterServicesKubeApiDeprecatedAuditLogArgs struct {
	// Event rate limit yaml encoded configuration. `"apiVersion"` and `"kind":"Configuration"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\nkind: Configuration\nlimits:\n- type: Server\n  burst: 30000\n  qps: 6000\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)
	Configuration ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrInput `pulumi:"configuration"`
	// Enable secrets encryption (bool)
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClusterServicesKubeApiDeprecatedAuditLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiDeprecatedAuditLog)(nil)).Elem()
}

func (i ClusterServicesKubeApiDeprecatedAuditLogArgs) ToClusterServicesKubeApiDeprecatedAuditLogOutput() ClusterServicesKubeApiDeprecatedAuditLogOutput {
	return i.ToClusterServicesKubeApiDeprecatedAuditLogOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiDeprecatedAuditLogArgs) ToClusterServicesKubeApiDeprecatedAuditLogOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedAuditLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiDeprecatedAuditLogOutput)
}

func (i ClusterServicesKubeApiDeprecatedAuditLogArgs) ToClusterServicesKubeApiDeprecatedAuditLogPtrOutput() ClusterServicesKubeApiDeprecatedAuditLogPtrOutput {
	return i.ToClusterServicesKubeApiDeprecatedAuditLogPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiDeprecatedAuditLogArgs) ToClusterServicesKubeApiDeprecatedAuditLogPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedAuditLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiDeprecatedAuditLogOutput).ToClusterServicesKubeApiDeprecatedAuditLogPtrOutputWithContext(ctx)
}

// ClusterServicesKubeApiDeprecatedAuditLogPtrInput is an input type that accepts ClusterServicesKubeApiDeprecatedAuditLogArgs, ClusterServicesKubeApiDeprecatedAuditLogPtr and ClusterServicesKubeApiDeprecatedAuditLogPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiDeprecatedAuditLogPtrInput` via:
//
//          ClusterServicesKubeApiDeprecatedAuditLogArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeApiDeprecatedAuditLogPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeApiDeprecatedAuditLogPtrOutput() ClusterServicesKubeApiDeprecatedAuditLogPtrOutput
	ToClusterServicesKubeApiDeprecatedAuditLogPtrOutputWithContext(context.Context) ClusterServicesKubeApiDeprecatedAuditLogPtrOutput
}

type clusterServicesKubeApiDeprecatedAuditLogPtrType ClusterServicesKubeApiDeprecatedAuditLogArgs

func ClusterServicesKubeApiDeprecatedAuditLogPtr(v *ClusterServicesKubeApiDeprecatedAuditLogArgs) ClusterServicesKubeApiDeprecatedAuditLogPtrInput {
	return (*clusterServicesKubeApiDeprecatedAuditLogPtrType)(v)
}

func (*clusterServicesKubeApiDeprecatedAuditLogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiDeprecatedAuditLog)(nil)).Elem()
}

func (i *clusterServicesKubeApiDeprecatedAuditLogPtrType) ToClusterServicesKubeApiDeprecatedAuditLogPtrOutput() ClusterServicesKubeApiDeprecatedAuditLogPtrOutput {
	return i.ToClusterServicesKubeApiDeprecatedAuditLogPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeApiDeprecatedAuditLogPtrType) ToClusterServicesKubeApiDeprecatedAuditLogPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedAuditLogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiDeprecatedAuditLogPtrOutput)
}

type ClusterServicesKubeApiDeprecatedAuditLogOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiDeprecatedAuditLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiDeprecatedAuditLog)(nil)).Elem()
}

func (o ClusterServicesKubeApiDeprecatedAuditLogOutput) ToClusterServicesKubeApiDeprecatedAuditLogOutput() ClusterServicesKubeApiDeprecatedAuditLogOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedAuditLogOutput) ToClusterServicesKubeApiDeprecatedAuditLogOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedAuditLogOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedAuditLogOutput) ToClusterServicesKubeApiDeprecatedAuditLogPtrOutput() ClusterServicesKubeApiDeprecatedAuditLogPtrOutput {
	return o.ToClusterServicesKubeApiDeprecatedAuditLogPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeApiDeprecatedAuditLogOutput) ToClusterServicesKubeApiDeprecatedAuditLogPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedAuditLogPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecatedAuditLog) *ClusterServicesKubeApiDeprecatedAuditLog {
		return &v
	}).(ClusterServicesKubeApiDeprecatedAuditLogPtrOutput)
}

// Event rate limit yaml encoded configuration. `"apiVersion"` and `"kind":"Configuration"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\nkind: Configuration\nlimits:\n- type: Server\n  burst: 30000\n  qps: 6000\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)
func (o ClusterServicesKubeApiDeprecatedAuditLogOutput) Configuration() ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecatedAuditLog) *ClusterServicesKubeApiDeprecatedAuditLogConfiguration {
		return v.Configuration
	}).(ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput)
}

// Enable secrets encryption (bool)
func (o ClusterServicesKubeApiDeprecatedAuditLogOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecatedAuditLog) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClusterServicesKubeApiDeprecatedAuditLogPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiDeprecatedAuditLogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiDeprecatedAuditLog)(nil)).Elem()
}

func (o ClusterServicesKubeApiDeprecatedAuditLogPtrOutput) ToClusterServicesKubeApiDeprecatedAuditLogPtrOutput() ClusterServicesKubeApiDeprecatedAuditLogPtrOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedAuditLogPtrOutput) ToClusterServicesKubeApiDeprecatedAuditLogPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedAuditLogPtrOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedAuditLogPtrOutput) Elem() ClusterServicesKubeApiDeprecatedAuditLogOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecatedAuditLog) ClusterServicesKubeApiDeprecatedAuditLog { return *v }).(ClusterServicesKubeApiDeprecatedAuditLogOutput)
}

// Event rate limit yaml encoded configuration. `"apiVersion"` and `"kind":"Configuration"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\nkind: Configuration\nlimits:\n- type: Server\n  burst: 30000\n  qps: 6000\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)
func (o ClusterServicesKubeApiDeprecatedAuditLogPtrOutput) Configuration() ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecatedAuditLog) *ClusterServicesKubeApiDeprecatedAuditLogConfiguration {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput)
}

// Enable secrets encryption (bool)
func (o ClusterServicesKubeApiDeprecatedAuditLogPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecatedAuditLog) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterServicesKubeApiDeprecatedAuditLogConfiguration struct {
	// Audit log format (string)
	Format *string `pulumi:"format"`
	// Audit log max age (int)
	MaxAge *int `pulumi:"maxAge"`
	// Audit log max backup. Default: `10` (int)
	MaxBackup *int `pulumi:"maxBackup"`
	// Audit log max size. Default: `100` (int)
	MaxSize *int `pulumi:"maxSize"`
	// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
	Path *string `pulumi:"path"`
	// Audit policy json encoded definition. `"apiVersion"` and `"kind":"Policy","rules"` fields are required in the json. Ex. `jsonencode({"apiVersion":"audit.k8s.io/v1","kind":"Policy","rules":[{"level":"RequestResponse","resources":[{"group":"","resources":["pods"]}]}]})` [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string)
	Policy *string `pulumi:"policy"`
}

// ClusterServicesKubeApiDeprecatedAuditLogConfigurationInput is an input type that accepts ClusterServicesKubeApiDeprecatedAuditLogConfigurationArgs and ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiDeprecatedAuditLogConfigurationInput` via:
//
//          ClusterServicesKubeApiDeprecatedAuditLogConfigurationArgs{...}
type ClusterServicesKubeApiDeprecatedAuditLogConfigurationInput interface {
	pulumi.Input

	ToClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput() ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput
	ToClusterServicesKubeApiDeprecatedAuditLogConfigurationOutputWithContext(context.Context) ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput
}

type ClusterServicesKubeApiDeprecatedAuditLogConfigurationArgs struct {
	// Audit log format (string)
	Format pulumi.StringPtrInput `pulumi:"format"`
	// Audit log max age (int)
	MaxAge pulumi.IntPtrInput `pulumi:"maxAge"`
	// Audit log max backup. Default: `10` (int)
	MaxBackup pulumi.IntPtrInput `pulumi:"maxBackup"`
	// Audit log max size. Default: `100` (int)
	MaxSize pulumi.IntPtrInput `pulumi:"maxSize"`
	// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Audit policy json encoded definition. `"apiVersion"` and `"kind":"Policy","rules"` fields are required in the json. Ex. `jsonencode({"apiVersion":"audit.k8s.io/v1","kind":"Policy","rules":[{"level":"RequestResponse","resources":[{"group":"","resources":["pods"]}]}]})` [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string)
	Policy pulumi.StringPtrInput `pulumi:"policy"`
}

func (ClusterServicesKubeApiDeprecatedAuditLogConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiDeprecatedAuditLogConfiguration)(nil)).Elem()
}

func (i ClusterServicesKubeApiDeprecatedAuditLogConfigurationArgs) ToClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput() ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput {
	return i.ToClusterServicesKubeApiDeprecatedAuditLogConfigurationOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiDeprecatedAuditLogConfigurationArgs) ToClusterServicesKubeApiDeprecatedAuditLogConfigurationOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput)
}

func (i ClusterServicesKubeApiDeprecatedAuditLogConfigurationArgs) ToClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput() ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput {
	return i.ToClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiDeprecatedAuditLogConfigurationArgs) ToClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput).ToClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutputWithContext(ctx)
}

// ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrInput is an input type that accepts ClusterServicesKubeApiDeprecatedAuditLogConfigurationArgs, ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtr and ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrInput` via:
//
//          ClusterServicesKubeApiDeprecatedAuditLogConfigurationArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput() ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput
	ToClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutputWithContext(context.Context) ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput
}

type clusterServicesKubeApiDeprecatedAuditLogConfigurationPtrType ClusterServicesKubeApiDeprecatedAuditLogConfigurationArgs

func ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtr(v *ClusterServicesKubeApiDeprecatedAuditLogConfigurationArgs) ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrInput {
	return (*clusterServicesKubeApiDeprecatedAuditLogConfigurationPtrType)(v)
}

func (*clusterServicesKubeApiDeprecatedAuditLogConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiDeprecatedAuditLogConfiguration)(nil)).Elem()
}

func (i *clusterServicesKubeApiDeprecatedAuditLogConfigurationPtrType) ToClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput() ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput {
	return i.ToClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeApiDeprecatedAuditLogConfigurationPtrType) ToClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput)
}

type ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiDeprecatedAuditLogConfiguration)(nil)).Elem()
}

func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput) ToClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput() ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput) ToClusterServicesKubeApiDeprecatedAuditLogConfigurationOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput) ToClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput() ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput {
	return o.ToClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput) ToClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecatedAuditLogConfiguration) *ClusterServicesKubeApiDeprecatedAuditLogConfiguration {
		return &v
	}).(ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput)
}

// Audit log format (string)
func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecatedAuditLogConfiguration) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// Audit log max age (int)
func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecatedAuditLogConfiguration) *int { return v.MaxAge }).(pulumi.IntPtrOutput)
}

// Audit log max backup. Default: `10` (int)
func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput) MaxBackup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecatedAuditLogConfiguration) *int { return v.MaxBackup }).(pulumi.IntPtrOutput)
}

// Audit log max size. Default: `100` (int)
func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecatedAuditLogConfiguration) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecatedAuditLogConfiguration) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Audit policy json encoded definition. `"apiVersion"` and `"kind":"Policy","rules"` fields are required in the json. Ex. `jsonencode({"apiVersion":"audit.k8s.io/v1","kind":"Policy","rules":[{"level":"RequestResponse","resources":[{"group":"","resources":["pods"]}]}]})` [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string)
func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecatedAuditLogConfiguration) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiDeprecatedAuditLogConfiguration)(nil)).Elem()
}

func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput) ToClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput() ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput) ToClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput) Elem() ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecatedAuditLogConfiguration) ClusterServicesKubeApiDeprecatedAuditLogConfiguration {
		return *v
	}).(ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput)
}

// Audit log format (string)
func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecatedAuditLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

// Audit log max age (int)
func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecatedAuditLogConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.IntPtrOutput)
}

// Audit log max backup. Default: `10` (int)
func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput) MaxBackup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecatedAuditLogConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxBackup
	}).(pulumi.IntPtrOutput)
}

// Audit log max size. Default: `100` (int)
func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecatedAuditLogConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.IntPtrOutput)
}

// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecatedAuditLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Audit policy json encoded definition. `"apiVersion"` and `"kind":"Policy","rules"` fields are required in the json. Ex. `jsonencode({"apiVersion":"audit.k8s.io/v1","kind":"Policy","rules":[{"level":"RequestResponse","resources":[{"group":"","resources":["pods"]}]}]})` [More info](https://rancher.com/docs/rke/latest/en/config-options/audit-log/) (string)
func (o ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecatedAuditLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeApiDeprecatedEventRateLimit struct {
	// Event rate limit yaml encoded configuration. `"apiVersion"` and `"kind":"Configuration"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\nkind: Configuration\nlimits:\n- type: Server\n  burst: 30000\n  qps: 6000\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)
	Configuration *string `pulumi:"configuration"`
	// Enable secrets encryption (bool)
	Enabled *bool `pulumi:"enabled"`
}

// ClusterServicesKubeApiDeprecatedEventRateLimitInput is an input type that accepts ClusterServicesKubeApiDeprecatedEventRateLimitArgs and ClusterServicesKubeApiDeprecatedEventRateLimitOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiDeprecatedEventRateLimitInput` via:
//
//          ClusterServicesKubeApiDeprecatedEventRateLimitArgs{...}
type ClusterServicesKubeApiDeprecatedEventRateLimitInput interface {
	pulumi.Input

	ToClusterServicesKubeApiDeprecatedEventRateLimitOutput() ClusterServicesKubeApiDeprecatedEventRateLimitOutput
	ToClusterServicesKubeApiDeprecatedEventRateLimitOutputWithContext(context.Context) ClusterServicesKubeApiDeprecatedEventRateLimitOutput
}

type ClusterServicesKubeApiDeprecatedEventRateLimitArgs struct {
	// Event rate limit yaml encoded configuration. `"apiVersion"` and `"kind":"Configuration"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\nkind: Configuration\nlimits:\n- type: Server\n  burst: 30000\n  qps: 6000\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)
	Configuration pulumi.StringPtrInput `pulumi:"configuration"`
	// Enable secrets encryption (bool)
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClusterServicesKubeApiDeprecatedEventRateLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiDeprecatedEventRateLimit)(nil)).Elem()
}

func (i ClusterServicesKubeApiDeprecatedEventRateLimitArgs) ToClusterServicesKubeApiDeprecatedEventRateLimitOutput() ClusterServicesKubeApiDeprecatedEventRateLimitOutput {
	return i.ToClusterServicesKubeApiDeprecatedEventRateLimitOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiDeprecatedEventRateLimitArgs) ToClusterServicesKubeApiDeprecatedEventRateLimitOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedEventRateLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiDeprecatedEventRateLimitOutput)
}

func (i ClusterServicesKubeApiDeprecatedEventRateLimitArgs) ToClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput() ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput {
	return i.ToClusterServicesKubeApiDeprecatedEventRateLimitPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiDeprecatedEventRateLimitArgs) ToClusterServicesKubeApiDeprecatedEventRateLimitPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiDeprecatedEventRateLimitOutput).ToClusterServicesKubeApiDeprecatedEventRateLimitPtrOutputWithContext(ctx)
}

// ClusterServicesKubeApiDeprecatedEventRateLimitPtrInput is an input type that accepts ClusterServicesKubeApiDeprecatedEventRateLimitArgs, ClusterServicesKubeApiDeprecatedEventRateLimitPtr and ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiDeprecatedEventRateLimitPtrInput` via:
//
//          ClusterServicesKubeApiDeprecatedEventRateLimitArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeApiDeprecatedEventRateLimitPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput() ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput
	ToClusterServicesKubeApiDeprecatedEventRateLimitPtrOutputWithContext(context.Context) ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput
}

type clusterServicesKubeApiDeprecatedEventRateLimitPtrType ClusterServicesKubeApiDeprecatedEventRateLimitArgs

func ClusterServicesKubeApiDeprecatedEventRateLimitPtr(v *ClusterServicesKubeApiDeprecatedEventRateLimitArgs) ClusterServicesKubeApiDeprecatedEventRateLimitPtrInput {
	return (*clusterServicesKubeApiDeprecatedEventRateLimitPtrType)(v)
}

func (*clusterServicesKubeApiDeprecatedEventRateLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiDeprecatedEventRateLimit)(nil)).Elem()
}

func (i *clusterServicesKubeApiDeprecatedEventRateLimitPtrType) ToClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput() ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput {
	return i.ToClusterServicesKubeApiDeprecatedEventRateLimitPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeApiDeprecatedEventRateLimitPtrType) ToClusterServicesKubeApiDeprecatedEventRateLimitPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput)
}

type ClusterServicesKubeApiDeprecatedEventRateLimitOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiDeprecatedEventRateLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiDeprecatedEventRateLimit)(nil)).Elem()
}

func (o ClusterServicesKubeApiDeprecatedEventRateLimitOutput) ToClusterServicesKubeApiDeprecatedEventRateLimitOutput() ClusterServicesKubeApiDeprecatedEventRateLimitOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedEventRateLimitOutput) ToClusterServicesKubeApiDeprecatedEventRateLimitOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedEventRateLimitOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedEventRateLimitOutput) ToClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput() ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput {
	return o.ToClusterServicesKubeApiDeprecatedEventRateLimitPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeApiDeprecatedEventRateLimitOutput) ToClusterServicesKubeApiDeprecatedEventRateLimitPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecatedEventRateLimit) *ClusterServicesKubeApiDeprecatedEventRateLimit {
		return &v
	}).(ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput)
}

// Event rate limit yaml encoded configuration. `"apiVersion"` and `"kind":"Configuration"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\nkind: Configuration\nlimits:\n- type: Server\n  burst: 30000\n  qps: 6000\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)
func (o ClusterServicesKubeApiDeprecatedEventRateLimitOutput) Configuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecatedEventRateLimit) *string { return v.Configuration }).(pulumi.StringPtrOutput)
}

// Enable secrets encryption (bool)
func (o ClusterServicesKubeApiDeprecatedEventRateLimitOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecatedEventRateLimit) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiDeprecatedEventRateLimit)(nil)).Elem()
}

func (o ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput) ToClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput() ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput) ToClusterServicesKubeApiDeprecatedEventRateLimitPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput) Elem() ClusterServicesKubeApiDeprecatedEventRateLimitOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecatedEventRateLimit) ClusterServicesKubeApiDeprecatedEventRateLimit {
		return *v
	}).(ClusterServicesKubeApiDeprecatedEventRateLimitOutput)
}

// Event rate limit yaml encoded configuration. `"apiVersion"` and `"kind":"Configuration"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\nkind: Configuration\nlimits:\n- type: Server\n  burst: 30000\n  qps: 6000\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)
func (o ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput) Configuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecatedEventRateLimit) *string {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(pulumi.StringPtrOutput)
}

// Enable secrets encryption (bool)
func (o ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecatedEventRateLimit) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig struct {
	// Secrets encryption yaml encoded custom configuration. `"apiVersion"` and `"kind":"EncryptionConfiguration"` fields are required in the yaml. Ex. `apiVersion: apiserver.config.k8s.io/v1\nkind: EncryptionConfiguration\nresources:\n- resources:\n  - secrets\n  providers:\n  - aescbc:\n      keys:\n      - name: k-fw5hn\n        secret: RTczRjFDODMwQzAyMDVBREU4NDJBMUZFNDhCNzM5N0I=\n    identity: {}\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/) (string)
	CustomConfig *string `pulumi:"customConfig"`
	// Enable secrets encryption (bool)
	Enabled *bool `pulumi:"enabled"`
}

// ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigInput is an input type that accepts ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigArgs and ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigInput` via:
//
//          ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigArgs{...}
type ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigInput interface {
	pulumi.Input

	ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput() ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput
	ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutputWithContext(context.Context) ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput
}

type ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigArgs struct {
	// Secrets encryption yaml encoded custom configuration. `"apiVersion"` and `"kind":"EncryptionConfiguration"` fields are required in the yaml. Ex. `apiVersion: apiserver.config.k8s.io/v1\nkind: EncryptionConfiguration\nresources:\n- resources:\n  - secrets\n  providers:\n  - aescbc:\n      keys:\n      - name: k-fw5hn\n        secret: RTczRjFDODMwQzAyMDVBREU4NDJBMUZFNDhCNzM5N0I=\n    identity: {}\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/) (string)
	CustomConfig pulumi.StringPtrInput `pulumi:"customConfig"`
	// Enable secrets encryption (bool)
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig)(nil)).Elem()
}

func (i ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigArgs) ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput() ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput {
	return i.ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigArgs) ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput)
}

func (i ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigArgs) ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput() ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput {
	return i.ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigArgs) ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput).ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutputWithContext(ctx)
}

// ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrInput is an input type that accepts ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigArgs, ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtr and ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrInput` via:
//
//          ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput() ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput
	ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutputWithContext(context.Context) ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput
}

type clusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrType ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigArgs

func ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtr(v *ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigArgs) ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrInput {
	return (*clusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrType)(v)
}

func (*clusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig)(nil)).Elem()
}

func (i *clusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrType) ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput() ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput {
	return i.ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrType) ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput)
}

type ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig)(nil)).Elem()
}

func (o ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput) ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput() ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput) ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput) ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput() ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput {
	return o.ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput) ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig) *ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig {
		return &v
	}).(ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput)
}

// Secrets encryption yaml encoded custom configuration. `"apiVersion"` and `"kind":"EncryptionConfiguration"` fields are required in the yaml. Ex. `apiVersion: apiserver.config.k8s.io/v1\nkind: EncryptionConfiguration\nresources:\n- resources:\n  - secrets\n  providers:\n  - aescbc:\n      keys:\n      - name: k-fw5hn\n        secret: RTczRjFDODMwQzAyMDVBREU4NDJBMUZFNDhCNzM5N0I=\n    identity: {}\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/) (string)
func (o ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput) CustomConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig) *string { return v.CustomConfig }).(pulumi.StringPtrOutput)
}

// Enable secrets encryption (bool)
func (o ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig)(nil)).Elem()
}

func (o ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput) ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput() ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput) ToClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput {
	return o
}

func (o ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput) Elem() ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig) ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig {
		return *v
	}).(ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput)
}

// Secrets encryption yaml encoded custom configuration. `"apiVersion"` and `"kind":"EncryptionConfiguration"` fields are required in the yaml. Ex. `apiVersion: apiserver.config.k8s.io/v1\nkind: EncryptionConfiguration\nresources:\n- resources:\n  - secrets\n  providers:\n  - aescbc:\n      keys:\n      - name: k-fw5hn\n        secret: RTczRjFDODMwQzAyMDVBREU4NDJBMUZFNDhCNzM5N0I=\n    identity: {}\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/) (string)
func (o ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput) CustomConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomConfig
	}).(pulumi.StringPtrOutput)
}

// Enable secrets encryption (bool)
func (o ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiDeprecatedSecretsEncryptionConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterServicesKubeApiEventRateLimit struct {
	// Event rate limit yaml encoded configuration. `"apiVersion"` and `"kind":"Configuration"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\nkind: Configuration\nlimits:\n- type: Server\n  burst: 30000\n  qps: 6000\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)
	Configuration *string `pulumi:"configuration"`
	// Enable secrets encryption (bool)
	Enabled *bool `pulumi:"enabled"`
}

// ClusterServicesKubeApiEventRateLimitInput is an input type that accepts ClusterServicesKubeApiEventRateLimitArgs and ClusterServicesKubeApiEventRateLimitOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiEventRateLimitInput` via:
//
//          ClusterServicesKubeApiEventRateLimitArgs{...}
type ClusterServicesKubeApiEventRateLimitInput interface {
	pulumi.Input

	ToClusterServicesKubeApiEventRateLimitOutput() ClusterServicesKubeApiEventRateLimitOutput
	ToClusterServicesKubeApiEventRateLimitOutputWithContext(context.Context) ClusterServicesKubeApiEventRateLimitOutput
}

type ClusterServicesKubeApiEventRateLimitArgs struct {
	// Event rate limit yaml encoded configuration. `"apiVersion"` and `"kind":"Configuration"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\nkind: Configuration\nlimits:\n- type: Server\n  burst: 30000\n  qps: 6000\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)
	Configuration pulumi.StringPtrInput `pulumi:"configuration"`
	// Enable secrets encryption (bool)
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClusterServicesKubeApiEventRateLimitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiEventRateLimit)(nil)).Elem()
}

func (i ClusterServicesKubeApiEventRateLimitArgs) ToClusterServicesKubeApiEventRateLimitOutput() ClusterServicesKubeApiEventRateLimitOutput {
	return i.ToClusterServicesKubeApiEventRateLimitOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiEventRateLimitArgs) ToClusterServicesKubeApiEventRateLimitOutputWithContext(ctx context.Context) ClusterServicesKubeApiEventRateLimitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiEventRateLimitOutput)
}

func (i ClusterServicesKubeApiEventRateLimitArgs) ToClusterServicesKubeApiEventRateLimitPtrOutput() ClusterServicesKubeApiEventRateLimitPtrOutput {
	return i.ToClusterServicesKubeApiEventRateLimitPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiEventRateLimitArgs) ToClusterServicesKubeApiEventRateLimitPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiEventRateLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiEventRateLimitOutput).ToClusterServicesKubeApiEventRateLimitPtrOutputWithContext(ctx)
}

// ClusterServicesKubeApiEventRateLimitPtrInput is an input type that accepts ClusterServicesKubeApiEventRateLimitArgs, ClusterServicesKubeApiEventRateLimitPtr and ClusterServicesKubeApiEventRateLimitPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiEventRateLimitPtrInput` via:
//
//          ClusterServicesKubeApiEventRateLimitArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeApiEventRateLimitPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeApiEventRateLimitPtrOutput() ClusterServicesKubeApiEventRateLimitPtrOutput
	ToClusterServicesKubeApiEventRateLimitPtrOutputWithContext(context.Context) ClusterServicesKubeApiEventRateLimitPtrOutput
}

type clusterServicesKubeApiEventRateLimitPtrType ClusterServicesKubeApiEventRateLimitArgs

func ClusterServicesKubeApiEventRateLimitPtr(v *ClusterServicesKubeApiEventRateLimitArgs) ClusterServicesKubeApiEventRateLimitPtrInput {
	return (*clusterServicesKubeApiEventRateLimitPtrType)(v)
}

func (*clusterServicesKubeApiEventRateLimitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiEventRateLimit)(nil)).Elem()
}

func (i *clusterServicesKubeApiEventRateLimitPtrType) ToClusterServicesKubeApiEventRateLimitPtrOutput() ClusterServicesKubeApiEventRateLimitPtrOutput {
	return i.ToClusterServicesKubeApiEventRateLimitPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeApiEventRateLimitPtrType) ToClusterServicesKubeApiEventRateLimitPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiEventRateLimitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiEventRateLimitPtrOutput)
}

type ClusterServicesKubeApiEventRateLimitOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiEventRateLimitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiEventRateLimit)(nil)).Elem()
}

func (o ClusterServicesKubeApiEventRateLimitOutput) ToClusterServicesKubeApiEventRateLimitOutput() ClusterServicesKubeApiEventRateLimitOutput {
	return o
}

func (o ClusterServicesKubeApiEventRateLimitOutput) ToClusterServicesKubeApiEventRateLimitOutputWithContext(ctx context.Context) ClusterServicesKubeApiEventRateLimitOutput {
	return o
}

func (o ClusterServicesKubeApiEventRateLimitOutput) ToClusterServicesKubeApiEventRateLimitPtrOutput() ClusterServicesKubeApiEventRateLimitPtrOutput {
	return o.ToClusterServicesKubeApiEventRateLimitPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeApiEventRateLimitOutput) ToClusterServicesKubeApiEventRateLimitPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiEventRateLimitPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiEventRateLimit) *ClusterServicesKubeApiEventRateLimit {
		return &v
	}).(ClusterServicesKubeApiEventRateLimitPtrOutput)
}

// Event rate limit yaml encoded configuration. `"apiVersion"` and `"kind":"Configuration"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\nkind: Configuration\nlimits:\n- type: Server\n  burst: 30000\n  qps: 6000\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)
func (o ClusterServicesKubeApiEventRateLimitOutput) Configuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiEventRateLimit) *string { return v.Configuration }).(pulumi.StringPtrOutput)
}

// Enable secrets encryption (bool)
func (o ClusterServicesKubeApiEventRateLimitOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiEventRateLimit) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClusterServicesKubeApiEventRateLimitPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiEventRateLimitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiEventRateLimit)(nil)).Elem()
}

func (o ClusterServicesKubeApiEventRateLimitPtrOutput) ToClusterServicesKubeApiEventRateLimitPtrOutput() ClusterServicesKubeApiEventRateLimitPtrOutput {
	return o
}

func (o ClusterServicesKubeApiEventRateLimitPtrOutput) ToClusterServicesKubeApiEventRateLimitPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiEventRateLimitPtrOutput {
	return o
}

func (o ClusterServicesKubeApiEventRateLimitPtrOutput) Elem() ClusterServicesKubeApiEventRateLimitOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiEventRateLimit) ClusterServicesKubeApiEventRateLimit { return *v }).(ClusterServicesKubeApiEventRateLimitOutput)
}

// Event rate limit yaml encoded configuration. `"apiVersion"` and `"kind":"Configuration"` fields are required in the yaml. Ex. `apiVersion: eventratelimit.admission.k8s.io/v1alpha1\nkind: Configuration\nlimits:\n- type: Server\n  burst: 30000\n  qps: 6000\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/rate-limiting/) (string)
func (o ClusterServicesKubeApiEventRateLimitPtrOutput) Configuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiEventRateLimit) *string {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(pulumi.StringPtrOutput)
}

// Enable secrets encryption (bool)
func (o ClusterServicesKubeApiEventRateLimitPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiEventRateLimit) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterServicesKubeApiSecretsEncryptionConfig struct {
	// Secrets encryption yaml encoded custom configuration. `"apiVersion"` and `"kind":"EncryptionConfiguration"` fields are required in the yaml. Ex. `apiVersion: apiserver.config.k8s.io/v1\nkind: EncryptionConfiguration\nresources:\n- resources:\n  - secrets\n  providers:\n  - aescbc:\n      keys:\n      - name: k-fw5hn\n        secret: RTczRjFDODMwQzAyMDVBREU4NDJBMUZFNDhCNzM5N0I=\n    identity: {}\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/) (string)
	CustomConfig *string `pulumi:"customConfig"`
	// Enable secrets encryption (bool)
	Enabled *bool `pulumi:"enabled"`
}

// ClusterServicesKubeApiSecretsEncryptionConfigInput is an input type that accepts ClusterServicesKubeApiSecretsEncryptionConfigArgs and ClusterServicesKubeApiSecretsEncryptionConfigOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiSecretsEncryptionConfigInput` via:
//
//          ClusterServicesKubeApiSecretsEncryptionConfigArgs{...}
type ClusterServicesKubeApiSecretsEncryptionConfigInput interface {
	pulumi.Input

	ToClusterServicesKubeApiSecretsEncryptionConfigOutput() ClusterServicesKubeApiSecretsEncryptionConfigOutput
	ToClusterServicesKubeApiSecretsEncryptionConfigOutputWithContext(context.Context) ClusterServicesKubeApiSecretsEncryptionConfigOutput
}

type ClusterServicesKubeApiSecretsEncryptionConfigArgs struct {
	// Secrets encryption yaml encoded custom configuration. `"apiVersion"` and `"kind":"EncryptionConfiguration"` fields are required in the yaml. Ex. `apiVersion: apiserver.config.k8s.io/v1\nkind: EncryptionConfiguration\nresources:\n- resources:\n  - secrets\n  providers:\n  - aescbc:\n      keys:\n      - name: k-fw5hn\n        secret: RTczRjFDODMwQzAyMDVBREU4NDJBMUZFNDhCNzM5N0I=\n    identity: {}\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/) (string)
	CustomConfig pulumi.StringPtrInput `pulumi:"customConfig"`
	// Enable secrets encryption (bool)
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClusterServicesKubeApiSecretsEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiSecretsEncryptionConfig)(nil)).Elem()
}

func (i ClusterServicesKubeApiSecretsEncryptionConfigArgs) ToClusterServicesKubeApiSecretsEncryptionConfigOutput() ClusterServicesKubeApiSecretsEncryptionConfigOutput {
	return i.ToClusterServicesKubeApiSecretsEncryptionConfigOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiSecretsEncryptionConfigArgs) ToClusterServicesKubeApiSecretsEncryptionConfigOutputWithContext(ctx context.Context) ClusterServicesKubeApiSecretsEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiSecretsEncryptionConfigOutput)
}

func (i ClusterServicesKubeApiSecretsEncryptionConfigArgs) ToClusterServicesKubeApiSecretsEncryptionConfigPtrOutput() ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput {
	return i.ToClusterServicesKubeApiSecretsEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeApiSecretsEncryptionConfigArgs) ToClusterServicesKubeApiSecretsEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiSecretsEncryptionConfigOutput).ToClusterServicesKubeApiSecretsEncryptionConfigPtrOutputWithContext(ctx)
}

// ClusterServicesKubeApiSecretsEncryptionConfigPtrInput is an input type that accepts ClusterServicesKubeApiSecretsEncryptionConfigArgs, ClusterServicesKubeApiSecretsEncryptionConfigPtr and ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeApiSecretsEncryptionConfigPtrInput` via:
//
//          ClusterServicesKubeApiSecretsEncryptionConfigArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeApiSecretsEncryptionConfigPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeApiSecretsEncryptionConfigPtrOutput() ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput
	ToClusterServicesKubeApiSecretsEncryptionConfigPtrOutputWithContext(context.Context) ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput
}

type clusterServicesKubeApiSecretsEncryptionConfigPtrType ClusterServicesKubeApiSecretsEncryptionConfigArgs

func ClusterServicesKubeApiSecretsEncryptionConfigPtr(v *ClusterServicesKubeApiSecretsEncryptionConfigArgs) ClusterServicesKubeApiSecretsEncryptionConfigPtrInput {
	return (*clusterServicesKubeApiSecretsEncryptionConfigPtrType)(v)
}

func (*clusterServicesKubeApiSecretsEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiSecretsEncryptionConfig)(nil)).Elem()
}

func (i *clusterServicesKubeApiSecretsEncryptionConfigPtrType) ToClusterServicesKubeApiSecretsEncryptionConfigPtrOutput() ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput {
	return i.ToClusterServicesKubeApiSecretsEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeApiSecretsEncryptionConfigPtrType) ToClusterServicesKubeApiSecretsEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput)
}

type ClusterServicesKubeApiSecretsEncryptionConfigOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiSecretsEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeApiSecretsEncryptionConfig)(nil)).Elem()
}

func (o ClusterServicesKubeApiSecretsEncryptionConfigOutput) ToClusterServicesKubeApiSecretsEncryptionConfigOutput() ClusterServicesKubeApiSecretsEncryptionConfigOutput {
	return o
}

func (o ClusterServicesKubeApiSecretsEncryptionConfigOutput) ToClusterServicesKubeApiSecretsEncryptionConfigOutputWithContext(ctx context.Context) ClusterServicesKubeApiSecretsEncryptionConfigOutput {
	return o
}

func (o ClusterServicesKubeApiSecretsEncryptionConfigOutput) ToClusterServicesKubeApiSecretsEncryptionConfigPtrOutput() ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput {
	return o.ToClusterServicesKubeApiSecretsEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeApiSecretsEncryptionConfigOutput) ToClusterServicesKubeApiSecretsEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiSecretsEncryptionConfig) *ClusterServicesKubeApiSecretsEncryptionConfig {
		return &v
	}).(ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput)
}

// Secrets encryption yaml encoded custom configuration. `"apiVersion"` and `"kind":"EncryptionConfiguration"` fields are required in the yaml. Ex. `apiVersion: apiserver.config.k8s.io/v1\nkind: EncryptionConfiguration\nresources:\n- resources:\n  - secrets\n  providers:\n  - aescbc:\n      keys:\n      - name: k-fw5hn\n        secret: RTczRjFDODMwQzAyMDVBREU4NDJBMUZFNDhCNzM5N0I=\n    identity: {}\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/) (string)
func (o ClusterServicesKubeApiSecretsEncryptionConfigOutput) CustomConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiSecretsEncryptionConfig) *string { return v.CustomConfig }).(pulumi.StringPtrOutput)
}

// Enable secrets encryption (bool)
func (o ClusterServicesKubeApiSecretsEncryptionConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeApiSecretsEncryptionConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeApiSecretsEncryptionConfig)(nil)).Elem()
}

func (o ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput) ToClusterServicesKubeApiSecretsEncryptionConfigPtrOutput() ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput {
	return o
}

func (o ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput) ToClusterServicesKubeApiSecretsEncryptionConfigPtrOutputWithContext(ctx context.Context) ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput {
	return o
}

func (o ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput) Elem() ClusterServicesKubeApiSecretsEncryptionConfigOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiSecretsEncryptionConfig) ClusterServicesKubeApiSecretsEncryptionConfig {
		return *v
	}).(ClusterServicesKubeApiSecretsEncryptionConfigOutput)
}

// Secrets encryption yaml encoded custom configuration. `"apiVersion"` and `"kind":"EncryptionConfiguration"` fields are required in the yaml. Ex. `apiVersion: apiserver.config.k8s.io/v1\nkind: EncryptionConfiguration\nresources:\n- resources:\n  - secrets\n  providers:\n  - aescbc:\n      keys:\n      - name: k-fw5hn\n        secret: RTczRjFDODMwQzAyMDVBREU4NDJBMUZFNDhCNzM5N0I=\n    identity: {}\n` [More info](https://rancher.com/docs/rke/latest/en/config-options/secrets-encryption/) (string)
func (o ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput) CustomConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiSecretsEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomConfig
	}).(pulumi.StringPtrOutput)
}

// Enable secrets encryption (bool)
func (o ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeApiSecretsEncryptionConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterServicesKubeController struct {
	// Cluster CIDR option for kube controller service (string)
	ClusterCidr *string `pulumi:"clusterCidr"`
	// Extra arguments for scheduler service (map)
	ExtraArgs map[string]interface{} `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds []string `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs []string `pulumi:"extraEnvs"`
	// Docker image for scheduler service (string)
	Image *string `pulumi:"image"`
	// Service Cluster ip Range option for kube controller service (string)
	ServiceClusterIpRange *string `pulumi:"serviceClusterIpRange"`
}

// ClusterServicesKubeControllerInput is an input type that accepts ClusterServicesKubeControllerArgs and ClusterServicesKubeControllerOutput values.
// You can construct a concrete instance of `ClusterServicesKubeControllerInput` via:
//
//          ClusterServicesKubeControllerArgs{...}
type ClusterServicesKubeControllerInput interface {
	pulumi.Input

	ToClusterServicesKubeControllerOutput() ClusterServicesKubeControllerOutput
	ToClusterServicesKubeControllerOutputWithContext(context.Context) ClusterServicesKubeControllerOutput
}

type ClusterServicesKubeControllerArgs struct {
	// Cluster CIDR option for kube controller service (string)
	ClusterCidr pulumi.StringPtrInput `pulumi:"clusterCidr"`
	// Extra arguments for scheduler service (map)
	ExtraArgs pulumi.MapInput `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds pulumi.StringArrayInput `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs pulumi.StringArrayInput `pulumi:"extraEnvs"`
	// Docker image for scheduler service (string)
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Service Cluster ip Range option for kube controller service (string)
	ServiceClusterIpRange pulumi.StringPtrInput `pulumi:"serviceClusterIpRange"`
}

func (ClusterServicesKubeControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeController)(nil)).Elem()
}

func (i ClusterServicesKubeControllerArgs) ToClusterServicesKubeControllerOutput() ClusterServicesKubeControllerOutput {
	return i.ToClusterServicesKubeControllerOutputWithContext(context.Background())
}

func (i ClusterServicesKubeControllerArgs) ToClusterServicesKubeControllerOutputWithContext(ctx context.Context) ClusterServicesKubeControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeControllerOutput)
}

func (i ClusterServicesKubeControllerArgs) ToClusterServicesKubeControllerPtrOutput() ClusterServicesKubeControllerPtrOutput {
	return i.ToClusterServicesKubeControllerPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeControllerArgs) ToClusterServicesKubeControllerPtrOutputWithContext(ctx context.Context) ClusterServicesKubeControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeControllerOutput).ToClusterServicesKubeControllerPtrOutputWithContext(ctx)
}

// ClusterServicesKubeControllerPtrInput is an input type that accepts ClusterServicesKubeControllerArgs, ClusterServicesKubeControllerPtr and ClusterServicesKubeControllerPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeControllerPtrInput` via:
//
//          ClusterServicesKubeControllerArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeControllerPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeControllerPtrOutput() ClusterServicesKubeControllerPtrOutput
	ToClusterServicesKubeControllerPtrOutputWithContext(context.Context) ClusterServicesKubeControllerPtrOutput
}

type clusterServicesKubeControllerPtrType ClusterServicesKubeControllerArgs

func ClusterServicesKubeControllerPtr(v *ClusterServicesKubeControllerArgs) ClusterServicesKubeControllerPtrInput {
	return (*clusterServicesKubeControllerPtrType)(v)
}

func (*clusterServicesKubeControllerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeController)(nil)).Elem()
}

func (i *clusterServicesKubeControllerPtrType) ToClusterServicesKubeControllerPtrOutput() ClusterServicesKubeControllerPtrOutput {
	return i.ToClusterServicesKubeControllerPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeControllerPtrType) ToClusterServicesKubeControllerPtrOutputWithContext(ctx context.Context) ClusterServicesKubeControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeControllerPtrOutput)
}

type ClusterServicesKubeControllerOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeController)(nil)).Elem()
}

func (o ClusterServicesKubeControllerOutput) ToClusterServicesKubeControllerOutput() ClusterServicesKubeControllerOutput {
	return o
}

func (o ClusterServicesKubeControllerOutput) ToClusterServicesKubeControllerOutputWithContext(ctx context.Context) ClusterServicesKubeControllerOutput {
	return o
}

func (o ClusterServicesKubeControllerOutput) ToClusterServicesKubeControllerPtrOutput() ClusterServicesKubeControllerPtrOutput {
	return o.ToClusterServicesKubeControllerPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeControllerOutput) ToClusterServicesKubeControllerPtrOutputWithContext(ctx context.Context) ClusterServicesKubeControllerPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeController) *ClusterServicesKubeController {
		return &v
	}).(ClusterServicesKubeControllerPtrOutput)
}

// Cluster CIDR option for kube controller service (string)
func (o ClusterServicesKubeControllerOutput) ClusterCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeController) *string { return v.ClusterCidr }).(pulumi.StringPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeControllerOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterServicesKubeController) map[string]interface{} { return v.ExtraArgs }).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeControllerOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubeController) []string { return v.ExtraBinds }).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeControllerOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubeController) []string { return v.ExtraEnvs }).(pulumi.StringArrayOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeControllerOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeController) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Service Cluster ip Range option for kube controller service (string)
func (o ClusterServicesKubeControllerOutput) ServiceClusterIpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeController) *string { return v.ServiceClusterIpRange }).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeControllerPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeControllerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeController)(nil)).Elem()
}

func (o ClusterServicesKubeControllerPtrOutput) ToClusterServicesKubeControllerPtrOutput() ClusterServicesKubeControllerPtrOutput {
	return o
}

func (o ClusterServicesKubeControllerPtrOutput) ToClusterServicesKubeControllerPtrOutputWithContext(ctx context.Context) ClusterServicesKubeControllerPtrOutput {
	return o
}

func (o ClusterServicesKubeControllerPtrOutput) Elem() ClusterServicesKubeControllerOutput {
	return o.ApplyT(func(v *ClusterServicesKubeController) ClusterServicesKubeController { return *v }).(ClusterServicesKubeControllerOutput)
}

// Cluster CIDR option for kube controller service (string)
func (o ClusterServicesKubeControllerPtrOutput) ClusterCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeController) *string {
		if v == nil {
			return nil
		}
		return v.ClusterCidr
	}).(pulumi.StringPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeControllerPtrOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterServicesKubeController) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeControllerPtrOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubeController) []string {
		if v == nil {
			return nil
		}
		return v.ExtraBinds
	}).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeControllerPtrOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubeController) []string {
		if v == nil {
			return nil
		}
		return v.ExtraEnvs
	}).(pulumi.StringArrayOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeControllerPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeController) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// Service Cluster ip Range option for kube controller service (string)
func (o ClusterServicesKubeControllerPtrOutput) ServiceClusterIpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeController) *string {
		if v == nil {
			return nil
		}
		return v.ServiceClusterIpRange
	}).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeControllerDeprecated struct {
	// Cluster CIDR option for kube controller service (string)
	ClusterCidr *string `pulumi:"clusterCidr"`
	// Extra arguments for scheduler service (map)
	ExtraArgs map[string]interface{} `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds []string `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs []string `pulumi:"extraEnvs"`
	// Docker image for scheduler service (string)
	Image *string `pulumi:"image"`
	// Service Cluster ip Range option for kube controller service (string)
	ServiceClusterIpRange *string `pulumi:"serviceClusterIpRange"`
}

// ClusterServicesKubeControllerDeprecatedInput is an input type that accepts ClusterServicesKubeControllerDeprecatedArgs and ClusterServicesKubeControllerDeprecatedOutput values.
// You can construct a concrete instance of `ClusterServicesKubeControllerDeprecatedInput` via:
//
//          ClusterServicesKubeControllerDeprecatedArgs{...}
type ClusterServicesKubeControllerDeprecatedInput interface {
	pulumi.Input

	ToClusterServicesKubeControllerDeprecatedOutput() ClusterServicesKubeControllerDeprecatedOutput
	ToClusterServicesKubeControllerDeprecatedOutputWithContext(context.Context) ClusterServicesKubeControllerDeprecatedOutput
}

type ClusterServicesKubeControllerDeprecatedArgs struct {
	// Cluster CIDR option for kube controller service (string)
	ClusterCidr pulumi.StringPtrInput `pulumi:"clusterCidr"`
	// Extra arguments for scheduler service (map)
	ExtraArgs pulumi.MapInput `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds pulumi.StringArrayInput `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs pulumi.StringArrayInput `pulumi:"extraEnvs"`
	// Docker image for scheduler service (string)
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Service Cluster ip Range option for kube controller service (string)
	ServiceClusterIpRange pulumi.StringPtrInput `pulumi:"serviceClusterIpRange"`
}

func (ClusterServicesKubeControllerDeprecatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeControllerDeprecated)(nil)).Elem()
}

func (i ClusterServicesKubeControllerDeprecatedArgs) ToClusterServicesKubeControllerDeprecatedOutput() ClusterServicesKubeControllerDeprecatedOutput {
	return i.ToClusterServicesKubeControllerDeprecatedOutputWithContext(context.Background())
}

func (i ClusterServicesKubeControllerDeprecatedArgs) ToClusterServicesKubeControllerDeprecatedOutputWithContext(ctx context.Context) ClusterServicesKubeControllerDeprecatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeControllerDeprecatedOutput)
}

func (i ClusterServicesKubeControllerDeprecatedArgs) ToClusterServicesKubeControllerDeprecatedPtrOutput() ClusterServicesKubeControllerDeprecatedPtrOutput {
	return i.ToClusterServicesKubeControllerDeprecatedPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeControllerDeprecatedArgs) ToClusterServicesKubeControllerDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeControllerDeprecatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeControllerDeprecatedOutput).ToClusterServicesKubeControllerDeprecatedPtrOutputWithContext(ctx)
}

// ClusterServicesKubeControllerDeprecatedPtrInput is an input type that accepts ClusterServicesKubeControllerDeprecatedArgs, ClusterServicesKubeControllerDeprecatedPtr and ClusterServicesKubeControllerDeprecatedPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeControllerDeprecatedPtrInput` via:
//
//          ClusterServicesKubeControllerDeprecatedArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeControllerDeprecatedPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeControllerDeprecatedPtrOutput() ClusterServicesKubeControllerDeprecatedPtrOutput
	ToClusterServicesKubeControllerDeprecatedPtrOutputWithContext(context.Context) ClusterServicesKubeControllerDeprecatedPtrOutput
}

type clusterServicesKubeControllerDeprecatedPtrType ClusterServicesKubeControllerDeprecatedArgs

func ClusterServicesKubeControllerDeprecatedPtr(v *ClusterServicesKubeControllerDeprecatedArgs) ClusterServicesKubeControllerDeprecatedPtrInput {
	return (*clusterServicesKubeControllerDeprecatedPtrType)(v)
}

func (*clusterServicesKubeControllerDeprecatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeControllerDeprecated)(nil)).Elem()
}

func (i *clusterServicesKubeControllerDeprecatedPtrType) ToClusterServicesKubeControllerDeprecatedPtrOutput() ClusterServicesKubeControllerDeprecatedPtrOutput {
	return i.ToClusterServicesKubeControllerDeprecatedPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeControllerDeprecatedPtrType) ToClusterServicesKubeControllerDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeControllerDeprecatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeControllerDeprecatedPtrOutput)
}

type ClusterServicesKubeControllerDeprecatedOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeControllerDeprecatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeControllerDeprecated)(nil)).Elem()
}

func (o ClusterServicesKubeControllerDeprecatedOutput) ToClusterServicesKubeControllerDeprecatedOutput() ClusterServicesKubeControllerDeprecatedOutput {
	return o
}

func (o ClusterServicesKubeControllerDeprecatedOutput) ToClusterServicesKubeControllerDeprecatedOutputWithContext(ctx context.Context) ClusterServicesKubeControllerDeprecatedOutput {
	return o
}

func (o ClusterServicesKubeControllerDeprecatedOutput) ToClusterServicesKubeControllerDeprecatedPtrOutput() ClusterServicesKubeControllerDeprecatedPtrOutput {
	return o.ToClusterServicesKubeControllerDeprecatedPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeControllerDeprecatedOutput) ToClusterServicesKubeControllerDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeControllerDeprecatedPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeControllerDeprecated) *ClusterServicesKubeControllerDeprecated {
		return &v
	}).(ClusterServicesKubeControllerDeprecatedPtrOutput)
}

// Cluster CIDR option for kube controller service (string)
func (o ClusterServicesKubeControllerDeprecatedOutput) ClusterCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeControllerDeprecated) *string { return v.ClusterCidr }).(pulumi.StringPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeControllerDeprecatedOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterServicesKubeControllerDeprecated) map[string]interface{} { return v.ExtraArgs }).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeControllerDeprecatedOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubeControllerDeprecated) []string { return v.ExtraBinds }).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeControllerDeprecatedOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubeControllerDeprecated) []string { return v.ExtraEnvs }).(pulumi.StringArrayOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeControllerDeprecatedOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeControllerDeprecated) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Service Cluster ip Range option for kube controller service (string)
func (o ClusterServicesKubeControllerDeprecatedOutput) ServiceClusterIpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeControllerDeprecated) *string { return v.ServiceClusterIpRange }).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeControllerDeprecatedPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeControllerDeprecatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeControllerDeprecated)(nil)).Elem()
}

func (o ClusterServicesKubeControllerDeprecatedPtrOutput) ToClusterServicesKubeControllerDeprecatedPtrOutput() ClusterServicesKubeControllerDeprecatedPtrOutput {
	return o
}

func (o ClusterServicesKubeControllerDeprecatedPtrOutput) ToClusterServicesKubeControllerDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeControllerDeprecatedPtrOutput {
	return o
}

func (o ClusterServicesKubeControllerDeprecatedPtrOutput) Elem() ClusterServicesKubeControllerDeprecatedOutput {
	return o.ApplyT(func(v *ClusterServicesKubeControllerDeprecated) ClusterServicesKubeControllerDeprecated { return *v }).(ClusterServicesKubeControllerDeprecatedOutput)
}

// Cluster CIDR option for kube controller service (string)
func (o ClusterServicesKubeControllerDeprecatedPtrOutput) ClusterCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeControllerDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.ClusterCidr
	}).(pulumi.StringPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeControllerDeprecatedPtrOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterServicesKubeControllerDeprecated) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeControllerDeprecatedPtrOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubeControllerDeprecated) []string {
		if v == nil {
			return nil
		}
		return v.ExtraBinds
	}).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeControllerDeprecatedPtrOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubeControllerDeprecated) []string {
		if v == nil {
			return nil
		}
		return v.ExtraEnvs
	}).(pulumi.StringArrayOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeControllerDeprecatedPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeControllerDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// Service Cluster ip Range option for kube controller service (string)
func (o ClusterServicesKubeControllerDeprecatedPtrOutput) ServiceClusterIpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeControllerDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.ServiceClusterIpRange
	}).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeProxyDeprecated struct {
	// Extra arguments for scheduler service (map)
	ExtraArgs map[string]interface{} `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds []string `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs []string `pulumi:"extraEnvs"`
	// Docker image for scheduler service (string)
	Image *string `pulumi:"image"`
}

// ClusterServicesKubeProxyDeprecatedInput is an input type that accepts ClusterServicesKubeProxyDeprecatedArgs and ClusterServicesKubeProxyDeprecatedOutput values.
// You can construct a concrete instance of `ClusterServicesKubeProxyDeprecatedInput` via:
//
//          ClusterServicesKubeProxyDeprecatedArgs{...}
type ClusterServicesKubeProxyDeprecatedInput interface {
	pulumi.Input

	ToClusterServicesKubeProxyDeprecatedOutput() ClusterServicesKubeProxyDeprecatedOutput
	ToClusterServicesKubeProxyDeprecatedOutputWithContext(context.Context) ClusterServicesKubeProxyDeprecatedOutput
}

type ClusterServicesKubeProxyDeprecatedArgs struct {
	// Extra arguments for scheduler service (map)
	ExtraArgs pulumi.MapInput `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds pulumi.StringArrayInput `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs pulumi.StringArrayInput `pulumi:"extraEnvs"`
	// Docker image for scheduler service (string)
	Image pulumi.StringPtrInput `pulumi:"image"`
}

func (ClusterServicesKubeProxyDeprecatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeProxyDeprecated)(nil)).Elem()
}

func (i ClusterServicesKubeProxyDeprecatedArgs) ToClusterServicesKubeProxyDeprecatedOutput() ClusterServicesKubeProxyDeprecatedOutput {
	return i.ToClusterServicesKubeProxyDeprecatedOutputWithContext(context.Background())
}

func (i ClusterServicesKubeProxyDeprecatedArgs) ToClusterServicesKubeProxyDeprecatedOutputWithContext(ctx context.Context) ClusterServicesKubeProxyDeprecatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeProxyDeprecatedOutput)
}

func (i ClusterServicesKubeProxyDeprecatedArgs) ToClusterServicesKubeProxyDeprecatedPtrOutput() ClusterServicesKubeProxyDeprecatedPtrOutput {
	return i.ToClusterServicesKubeProxyDeprecatedPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeProxyDeprecatedArgs) ToClusterServicesKubeProxyDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeProxyDeprecatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeProxyDeprecatedOutput).ToClusterServicesKubeProxyDeprecatedPtrOutputWithContext(ctx)
}

// ClusterServicesKubeProxyDeprecatedPtrInput is an input type that accepts ClusterServicesKubeProxyDeprecatedArgs, ClusterServicesKubeProxyDeprecatedPtr and ClusterServicesKubeProxyDeprecatedPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeProxyDeprecatedPtrInput` via:
//
//          ClusterServicesKubeProxyDeprecatedArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeProxyDeprecatedPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeProxyDeprecatedPtrOutput() ClusterServicesKubeProxyDeprecatedPtrOutput
	ToClusterServicesKubeProxyDeprecatedPtrOutputWithContext(context.Context) ClusterServicesKubeProxyDeprecatedPtrOutput
}

type clusterServicesKubeProxyDeprecatedPtrType ClusterServicesKubeProxyDeprecatedArgs

func ClusterServicesKubeProxyDeprecatedPtr(v *ClusterServicesKubeProxyDeprecatedArgs) ClusterServicesKubeProxyDeprecatedPtrInput {
	return (*clusterServicesKubeProxyDeprecatedPtrType)(v)
}

func (*clusterServicesKubeProxyDeprecatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeProxyDeprecated)(nil)).Elem()
}

func (i *clusterServicesKubeProxyDeprecatedPtrType) ToClusterServicesKubeProxyDeprecatedPtrOutput() ClusterServicesKubeProxyDeprecatedPtrOutput {
	return i.ToClusterServicesKubeProxyDeprecatedPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeProxyDeprecatedPtrType) ToClusterServicesKubeProxyDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeProxyDeprecatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeProxyDeprecatedPtrOutput)
}

type ClusterServicesKubeProxyDeprecatedOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeProxyDeprecatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeProxyDeprecated)(nil)).Elem()
}

func (o ClusterServicesKubeProxyDeprecatedOutput) ToClusterServicesKubeProxyDeprecatedOutput() ClusterServicesKubeProxyDeprecatedOutput {
	return o
}

func (o ClusterServicesKubeProxyDeprecatedOutput) ToClusterServicesKubeProxyDeprecatedOutputWithContext(ctx context.Context) ClusterServicesKubeProxyDeprecatedOutput {
	return o
}

func (o ClusterServicesKubeProxyDeprecatedOutput) ToClusterServicesKubeProxyDeprecatedPtrOutput() ClusterServicesKubeProxyDeprecatedPtrOutput {
	return o.ToClusterServicesKubeProxyDeprecatedPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeProxyDeprecatedOutput) ToClusterServicesKubeProxyDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeProxyDeprecatedPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeProxyDeprecated) *ClusterServicesKubeProxyDeprecated {
		return &v
	}).(ClusterServicesKubeProxyDeprecatedPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeProxyDeprecatedOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterServicesKubeProxyDeprecated) map[string]interface{} { return v.ExtraArgs }).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeProxyDeprecatedOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubeProxyDeprecated) []string { return v.ExtraBinds }).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeProxyDeprecatedOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubeProxyDeprecated) []string { return v.ExtraEnvs }).(pulumi.StringArrayOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeProxyDeprecatedOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeProxyDeprecated) *string { return v.Image }).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeProxyDeprecatedPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeProxyDeprecatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeProxyDeprecated)(nil)).Elem()
}

func (o ClusterServicesKubeProxyDeprecatedPtrOutput) ToClusterServicesKubeProxyDeprecatedPtrOutput() ClusterServicesKubeProxyDeprecatedPtrOutput {
	return o
}

func (o ClusterServicesKubeProxyDeprecatedPtrOutput) ToClusterServicesKubeProxyDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeProxyDeprecatedPtrOutput {
	return o
}

func (o ClusterServicesKubeProxyDeprecatedPtrOutput) Elem() ClusterServicesKubeProxyDeprecatedOutput {
	return o.ApplyT(func(v *ClusterServicesKubeProxyDeprecated) ClusterServicesKubeProxyDeprecated { return *v }).(ClusterServicesKubeProxyDeprecatedOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeProxyDeprecatedPtrOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterServicesKubeProxyDeprecated) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeProxyDeprecatedPtrOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubeProxyDeprecated) []string {
		if v == nil {
			return nil
		}
		return v.ExtraBinds
	}).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeProxyDeprecatedPtrOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubeProxyDeprecated) []string {
		if v == nil {
			return nil
		}
		return v.ExtraEnvs
	}).(pulumi.StringArrayOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeProxyDeprecatedPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeProxyDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeSchedulerDeprecated struct {
	// Extra arguments for scheduler service (map)
	ExtraArgs map[string]interface{} `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds []string `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs []string `pulumi:"extraEnvs"`
	// Docker image for scheduler service (string)
	Image *string `pulumi:"image"`
}

// ClusterServicesKubeSchedulerDeprecatedInput is an input type that accepts ClusterServicesKubeSchedulerDeprecatedArgs and ClusterServicesKubeSchedulerDeprecatedOutput values.
// You can construct a concrete instance of `ClusterServicesKubeSchedulerDeprecatedInput` via:
//
//          ClusterServicesKubeSchedulerDeprecatedArgs{...}
type ClusterServicesKubeSchedulerDeprecatedInput interface {
	pulumi.Input

	ToClusterServicesKubeSchedulerDeprecatedOutput() ClusterServicesKubeSchedulerDeprecatedOutput
	ToClusterServicesKubeSchedulerDeprecatedOutputWithContext(context.Context) ClusterServicesKubeSchedulerDeprecatedOutput
}

type ClusterServicesKubeSchedulerDeprecatedArgs struct {
	// Extra arguments for scheduler service (map)
	ExtraArgs pulumi.MapInput `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds pulumi.StringArrayInput `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs pulumi.StringArrayInput `pulumi:"extraEnvs"`
	// Docker image for scheduler service (string)
	Image pulumi.StringPtrInput `pulumi:"image"`
}

func (ClusterServicesKubeSchedulerDeprecatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeSchedulerDeprecated)(nil)).Elem()
}

func (i ClusterServicesKubeSchedulerDeprecatedArgs) ToClusterServicesKubeSchedulerDeprecatedOutput() ClusterServicesKubeSchedulerDeprecatedOutput {
	return i.ToClusterServicesKubeSchedulerDeprecatedOutputWithContext(context.Background())
}

func (i ClusterServicesKubeSchedulerDeprecatedArgs) ToClusterServicesKubeSchedulerDeprecatedOutputWithContext(ctx context.Context) ClusterServicesKubeSchedulerDeprecatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeSchedulerDeprecatedOutput)
}

func (i ClusterServicesKubeSchedulerDeprecatedArgs) ToClusterServicesKubeSchedulerDeprecatedPtrOutput() ClusterServicesKubeSchedulerDeprecatedPtrOutput {
	return i.ToClusterServicesKubeSchedulerDeprecatedPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeSchedulerDeprecatedArgs) ToClusterServicesKubeSchedulerDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeSchedulerDeprecatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeSchedulerDeprecatedOutput).ToClusterServicesKubeSchedulerDeprecatedPtrOutputWithContext(ctx)
}

// ClusterServicesKubeSchedulerDeprecatedPtrInput is an input type that accepts ClusterServicesKubeSchedulerDeprecatedArgs, ClusterServicesKubeSchedulerDeprecatedPtr and ClusterServicesKubeSchedulerDeprecatedPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeSchedulerDeprecatedPtrInput` via:
//
//          ClusterServicesKubeSchedulerDeprecatedArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeSchedulerDeprecatedPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeSchedulerDeprecatedPtrOutput() ClusterServicesKubeSchedulerDeprecatedPtrOutput
	ToClusterServicesKubeSchedulerDeprecatedPtrOutputWithContext(context.Context) ClusterServicesKubeSchedulerDeprecatedPtrOutput
}

type clusterServicesKubeSchedulerDeprecatedPtrType ClusterServicesKubeSchedulerDeprecatedArgs

func ClusterServicesKubeSchedulerDeprecatedPtr(v *ClusterServicesKubeSchedulerDeprecatedArgs) ClusterServicesKubeSchedulerDeprecatedPtrInput {
	return (*clusterServicesKubeSchedulerDeprecatedPtrType)(v)
}

func (*clusterServicesKubeSchedulerDeprecatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeSchedulerDeprecated)(nil)).Elem()
}

func (i *clusterServicesKubeSchedulerDeprecatedPtrType) ToClusterServicesKubeSchedulerDeprecatedPtrOutput() ClusterServicesKubeSchedulerDeprecatedPtrOutput {
	return i.ToClusterServicesKubeSchedulerDeprecatedPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeSchedulerDeprecatedPtrType) ToClusterServicesKubeSchedulerDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeSchedulerDeprecatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeSchedulerDeprecatedPtrOutput)
}

type ClusterServicesKubeSchedulerDeprecatedOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeSchedulerDeprecatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeSchedulerDeprecated)(nil)).Elem()
}

func (o ClusterServicesKubeSchedulerDeprecatedOutput) ToClusterServicesKubeSchedulerDeprecatedOutput() ClusterServicesKubeSchedulerDeprecatedOutput {
	return o
}

func (o ClusterServicesKubeSchedulerDeprecatedOutput) ToClusterServicesKubeSchedulerDeprecatedOutputWithContext(ctx context.Context) ClusterServicesKubeSchedulerDeprecatedOutput {
	return o
}

func (o ClusterServicesKubeSchedulerDeprecatedOutput) ToClusterServicesKubeSchedulerDeprecatedPtrOutput() ClusterServicesKubeSchedulerDeprecatedPtrOutput {
	return o.ToClusterServicesKubeSchedulerDeprecatedPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeSchedulerDeprecatedOutput) ToClusterServicesKubeSchedulerDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeSchedulerDeprecatedPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeSchedulerDeprecated) *ClusterServicesKubeSchedulerDeprecated {
		return &v
	}).(ClusterServicesKubeSchedulerDeprecatedPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeSchedulerDeprecatedOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterServicesKubeSchedulerDeprecated) map[string]interface{} { return v.ExtraArgs }).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeSchedulerDeprecatedOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubeSchedulerDeprecated) []string { return v.ExtraBinds }).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeSchedulerDeprecatedOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubeSchedulerDeprecated) []string { return v.ExtraEnvs }).(pulumi.StringArrayOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeSchedulerDeprecatedOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeSchedulerDeprecated) *string { return v.Image }).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeSchedulerDeprecatedPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeSchedulerDeprecatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeSchedulerDeprecated)(nil)).Elem()
}

func (o ClusterServicesKubeSchedulerDeprecatedPtrOutput) ToClusterServicesKubeSchedulerDeprecatedPtrOutput() ClusterServicesKubeSchedulerDeprecatedPtrOutput {
	return o
}

func (o ClusterServicesKubeSchedulerDeprecatedPtrOutput) ToClusterServicesKubeSchedulerDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeSchedulerDeprecatedPtrOutput {
	return o
}

func (o ClusterServicesKubeSchedulerDeprecatedPtrOutput) Elem() ClusterServicesKubeSchedulerDeprecatedOutput {
	return o.ApplyT(func(v *ClusterServicesKubeSchedulerDeprecated) ClusterServicesKubeSchedulerDeprecated { return *v }).(ClusterServicesKubeSchedulerDeprecatedOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeSchedulerDeprecatedPtrOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterServicesKubeSchedulerDeprecated) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeSchedulerDeprecatedPtrOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubeSchedulerDeprecated) []string {
		if v == nil {
			return nil
		}
		return v.ExtraBinds
	}).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeSchedulerDeprecatedPtrOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubeSchedulerDeprecated) []string {
		if v == nil {
			return nil
		}
		return v.ExtraEnvs
	}).(pulumi.StringArrayOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeSchedulerDeprecatedPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeSchedulerDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

type ClusterServicesKubelet struct {
	// Cluster DNS Server option for kubelet service (string)
	ClusterDnsServer *string `pulumi:"clusterDnsServer"`
	// Cluster Domain option for kubelet service. Default `cluster.local` (string)
	ClusterDomain *string `pulumi:"clusterDomain"`
	// Extra arguments for scheduler service (map)
	ExtraArgs map[string]interface{} `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds []string `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs []string `pulumi:"extraEnvs"`
	// Enable or disable failing when swap on is not supported (bool)
	FailSwapOn *bool `pulumi:"failSwapOn"`
	// [Generate a certificate signed by the kube-ca](https://rancher.com/docs/rke/latest/en/config-options/services/#kubelet-serving-certificate-requirements). Default `false` (bool)
	GenerateServingCertificate *bool `pulumi:"generateServingCertificate"`
	// Docker image for scheduler service (string)
	Image *string `pulumi:"image"`
	// Infra container image for kubelet service (string)
	InfraContainerImage *string `pulumi:"infraContainerImage"`
}

// ClusterServicesKubeletInput is an input type that accepts ClusterServicesKubeletArgs and ClusterServicesKubeletOutput values.
// You can construct a concrete instance of `ClusterServicesKubeletInput` via:
//
//          ClusterServicesKubeletArgs{...}
type ClusterServicesKubeletInput interface {
	pulumi.Input

	ToClusterServicesKubeletOutput() ClusterServicesKubeletOutput
	ToClusterServicesKubeletOutputWithContext(context.Context) ClusterServicesKubeletOutput
}

type ClusterServicesKubeletArgs struct {
	// Cluster DNS Server option for kubelet service (string)
	ClusterDnsServer pulumi.StringPtrInput `pulumi:"clusterDnsServer"`
	// Cluster Domain option for kubelet service. Default `cluster.local` (string)
	ClusterDomain pulumi.StringPtrInput `pulumi:"clusterDomain"`
	// Extra arguments for scheduler service (map)
	ExtraArgs pulumi.MapInput `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds pulumi.StringArrayInput `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs pulumi.StringArrayInput `pulumi:"extraEnvs"`
	// Enable or disable failing when swap on is not supported (bool)
	FailSwapOn pulumi.BoolPtrInput `pulumi:"failSwapOn"`
	// [Generate a certificate signed by the kube-ca](https://rancher.com/docs/rke/latest/en/config-options/services/#kubelet-serving-certificate-requirements). Default `false` (bool)
	GenerateServingCertificate pulumi.BoolPtrInput `pulumi:"generateServingCertificate"`
	// Docker image for scheduler service (string)
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Infra container image for kubelet service (string)
	InfraContainerImage pulumi.StringPtrInput `pulumi:"infraContainerImage"`
}

func (ClusterServicesKubeletArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubelet)(nil)).Elem()
}

func (i ClusterServicesKubeletArgs) ToClusterServicesKubeletOutput() ClusterServicesKubeletOutput {
	return i.ToClusterServicesKubeletOutputWithContext(context.Background())
}

func (i ClusterServicesKubeletArgs) ToClusterServicesKubeletOutputWithContext(ctx context.Context) ClusterServicesKubeletOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeletOutput)
}

func (i ClusterServicesKubeletArgs) ToClusterServicesKubeletPtrOutput() ClusterServicesKubeletPtrOutput {
	return i.ToClusterServicesKubeletPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeletArgs) ToClusterServicesKubeletPtrOutputWithContext(ctx context.Context) ClusterServicesKubeletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeletOutput).ToClusterServicesKubeletPtrOutputWithContext(ctx)
}

// ClusterServicesKubeletPtrInput is an input type that accepts ClusterServicesKubeletArgs, ClusterServicesKubeletPtr and ClusterServicesKubeletPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeletPtrInput` via:
//
//          ClusterServicesKubeletArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeletPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeletPtrOutput() ClusterServicesKubeletPtrOutput
	ToClusterServicesKubeletPtrOutputWithContext(context.Context) ClusterServicesKubeletPtrOutput
}

type clusterServicesKubeletPtrType ClusterServicesKubeletArgs

func ClusterServicesKubeletPtr(v *ClusterServicesKubeletArgs) ClusterServicesKubeletPtrInput {
	return (*clusterServicesKubeletPtrType)(v)
}

func (*clusterServicesKubeletPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubelet)(nil)).Elem()
}

func (i *clusterServicesKubeletPtrType) ToClusterServicesKubeletPtrOutput() ClusterServicesKubeletPtrOutput {
	return i.ToClusterServicesKubeletPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeletPtrType) ToClusterServicesKubeletPtrOutputWithContext(ctx context.Context) ClusterServicesKubeletPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeletPtrOutput)
}

type ClusterServicesKubeletOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeletOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubelet)(nil)).Elem()
}

func (o ClusterServicesKubeletOutput) ToClusterServicesKubeletOutput() ClusterServicesKubeletOutput {
	return o
}

func (o ClusterServicesKubeletOutput) ToClusterServicesKubeletOutputWithContext(ctx context.Context) ClusterServicesKubeletOutput {
	return o
}

func (o ClusterServicesKubeletOutput) ToClusterServicesKubeletPtrOutput() ClusterServicesKubeletPtrOutput {
	return o.ToClusterServicesKubeletPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeletOutput) ToClusterServicesKubeletPtrOutputWithContext(ctx context.Context) ClusterServicesKubeletPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubelet) *ClusterServicesKubelet {
		return &v
	}).(ClusterServicesKubeletPtrOutput)
}

// Cluster DNS Server option for kubelet service (string)
func (o ClusterServicesKubeletOutput) ClusterDnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubelet) *string { return v.ClusterDnsServer }).(pulumi.StringPtrOutput)
}

// Cluster Domain option for kubelet service. Default `cluster.local` (string)
func (o ClusterServicesKubeletOutput) ClusterDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubelet) *string { return v.ClusterDomain }).(pulumi.StringPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeletOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterServicesKubelet) map[string]interface{} { return v.ExtraArgs }).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeletOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubelet) []string { return v.ExtraBinds }).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeletOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubelet) []string { return v.ExtraEnvs }).(pulumi.StringArrayOutput)
}

// Enable or disable failing when swap on is not supported (bool)
func (o ClusterServicesKubeletOutput) FailSwapOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubelet) *bool { return v.FailSwapOn }).(pulumi.BoolPtrOutput)
}

// [Generate a certificate signed by the kube-ca](https://rancher.com/docs/rke/latest/en/config-options/services/#kubelet-serving-certificate-requirements). Default `false` (bool)
func (o ClusterServicesKubeletOutput) GenerateServingCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubelet) *bool { return v.GenerateServingCertificate }).(pulumi.BoolPtrOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeletOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubelet) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Infra container image for kubelet service (string)
func (o ClusterServicesKubeletOutput) InfraContainerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubelet) *string { return v.InfraContainerImage }).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeletPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeletPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubelet)(nil)).Elem()
}

func (o ClusterServicesKubeletPtrOutput) ToClusterServicesKubeletPtrOutput() ClusterServicesKubeletPtrOutput {
	return o
}

func (o ClusterServicesKubeletPtrOutput) ToClusterServicesKubeletPtrOutputWithContext(ctx context.Context) ClusterServicesKubeletPtrOutput {
	return o
}

func (o ClusterServicesKubeletPtrOutput) Elem() ClusterServicesKubeletOutput {
	return o.ApplyT(func(v *ClusterServicesKubelet) ClusterServicesKubelet { return *v }).(ClusterServicesKubeletOutput)
}

// Cluster DNS Server option for kubelet service (string)
func (o ClusterServicesKubeletPtrOutput) ClusterDnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubelet) *string {
		if v == nil {
			return nil
		}
		return v.ClusterDnsServer
	}).(pulumi.StringPtrOutput)
}

// Cluster Domain option for kubelet service. Default `cluster.local` (string)
func (o ClusterServicesKubeletPtrOutput) ClusterDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubelet) *string {
		if v == nil {
			return nil
		}
		return v.ClusterDomain
	}).(pulumi.StringPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeletPtrOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterServicesKubelet) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeletPtrOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubelet) []string {
		if v == nil {
			return nil
		}
		return v.ExtraBinds
	}).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeletPtrOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubelet) []string {
		if v == nil {
			return nil
		}
		return v.ExtraEnvs
	}).(pulumi.StringArrayOutput)
}

// Enable or disable failing when swap on is not supported (bool)
func (o ClusterServicesKubeletPtrOutput) FailSwapOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubelet) *bool {
		if v == nil {
			return nil
		}
		return v.FailSwapOn
	}).(pulumi.BoolPtrOutput)
}

// [Generate a certificate signed by the kube-ca](https://rancher.com/docs/rke/latest/en/config-options/services/#kubelet-serving-certificate-requirements). Default `false` (bool)
func (o ClusterServicesKubeletPtrOutput) GenerateServingCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubelet) *bool {
		if v == nil {
			return nil
		}
		return v.GenerateServingCertificate
	}).(pulumi.BoolPtrOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeletPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubelet) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// Infra container image for kubelet service (string)
func (o ClusterServicesKubeletPtrOutput) InfraContainerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubelet) *string {
		if v == nil {
			return nil
		}
		return v.InfraContainerImage
	}).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeletDeprecated struct {
	// Cluster DNS Server option for kubelet service (string)
	ClusterDnsServer *string `pulumi:"clusterDnsServer"`
	// Cluster Domain option for kubelet service. Default `cluster.local` (string)
	ClusterDomain *string `pulumi:"clusterDomain"`
	// Extra arguments for scheduler service (map)
	ExtraArgs map[string]interface{} `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds []string `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs []string `pulumi:"extraEnvs"`
	// Enable or disable failing when swap on is not supported (bool)
	FailSwapOn *bool `pulumi:"failSwapOn"`
	// [Generate a certificate signed by the kube-ca](https://rancher.com/docs/rke/latest/en/config-options/services/#kubelet-serving-certificate-requirements). Default `false` (bool)
	GenerateServingCertificate *bool `pulumi:"generateServingCertificate"`
	// Docker image for scheduler service (string)
	Image *string `pulumi:"image"`
	// Infra container image for kubelet service (string)
	InfraContainerImage *string `pulumi:"infraContainerImage"`
}

// ClusterServicesKubeletDeprecatedInput is an input type that accepts ClusterServicesKubeletDeprecatedArgs and ClusterServicesKubeletDeprecatedOutput values.
// You can construct a concrete instance of `ClusterServicesKubeletDeprecatedInput` via:
//
//          ClusterServicesKubeletDeprecatedArgs{...}
type ClusterServicesKubeletDeprecatedInput interface {
	pulumi.Input

	ToClusterServicesKubeletDeprecatedOutput() ClusterServicesKubeletDeprecatedOutput
	ToClusterServicesKubeletDeprecatedOutputWithContext(context.Context) ClusterServicesKubeletDeprecatedOutput
}

type ClusterServicesKubeletDeprecatedArgs struct {
	// Cluster DNS Server option for kubelet service (string)
	ClusterDnsServer pulumi.StringPtrInput `pulumi:"clusterDnsServer"`
	// Cluster Domain option for kubelet service. Default `cluster.local` (string)
	ClusterDomain pulumi.StringPtrInput `pulumi:"clusterDomain"`
	// Extra arguments for scheduler service (map)
	ExtraArgs pulumi.MapInput `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds pulumi.StringArrayInput `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs pulumi.StringArrayInput `pulumi:"extraEnvs"`
	// Enable or disable failing when swap on is not supported (bool)
	FailSwapOn pulumi.BoolPtrInput `pulumi:"failSwapOn"`
	// [Generate a certificate signed by the kube-ca](https://rancher.com/docs/rke/latest/en/config-options/services/#kubelet-serving-certificate-requirements). Default `false` (bool)
	GenerateServingCertificate pulumi.BoolPtrInput `pulumi:"generateServingCertificate"`
	// Docker image for scheduler service (string)
	Image pulumi.StringPtrInput `pulumi:"image"`
	// Infra container image for kubelet service (string)
	InfraContainerImage pulumi.StringPtrInput `pulumi:"infraContainerImage"`
}

func (ClusterServicesKubeletDeprecatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeletDeprecated)(nil)).Elem()
}

func (i ClusterServicesKubeletDeprecatedArgs) ToClusterServicesKubeletDeprecatedOutput() ClusterServicesKubeletDeprecatedOutput {
	return i.ToClusterServicesKubeletDeprecatedOutputWithContext(context.Background())
}

func (i ClusterServicesKubeletDeprecatedArgs) ToClusterServicesKubeletDeprecatedOutputWithContext(ctx context.Context) ClusterServicesKubeletDeprecatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeletDeprecatedOutput)
}

func (i ClusterServicesKubeletDeprecatedArgs) ToClusterServicesKubeletDeprecatedPtrOutput() ClusterServicesKubeletDeprecatedPtrOutput {
	return i.ToClusterServicesKubeletDeprecatedPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeletDeprecatedArgs) ToClusterServicesKubeletDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeletDeprecatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeletDeprecatedOutput).ToClusterServicesKubeletDeprecatedPtrOutputWithContext(ctx)
}

// ClusterServicesKubeletDeprecatedPtrInput is an input type that accepts ClusterServicesKubeletDeprecatedArgs, ClusterServicesKubeletDeprecatedPtr and ClusterServicesKubeletDeprecatedPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeletDeprecatedPtrInput` via:
//
//          ClusterServicesKubeletDeprecatedArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeletDeprecatedPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeletDeprecatedPtrOutput() ClusterServicesKubeletDeprecatedPtrOutput
	ToClusterServicesKubeletDeprecatedPtrOutputWithContext(context.Context) ClusterServicesKubeletDeprecatedPtrOutput
}

type clusterServicesKubeletDeprecatedPtrType ClusterServicesKubeletDeprecatedArgs

func ClusterServicesKubeletDeprecatedPtr(v *ClusterServicesKubeletDeprecatedArgs) ClusterServicesKubeletDeprecatedPtrInput {
	return (*clusterServicesKubeletDeprecatedPtrType)(v)
}

func (*clusterServicesKubeletDeprecatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeletDeprecated)(nil)).Elem()
}

func (i *clusterServicesKubeletDeprecatedPtrType) ToClusterServicesKubeletDeprecatedPtrOutput() ClusterServicesKubeletDeprecatedPtrOutput {
	return i.ToClusterServicesKubeletDeprecatedPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeletDeprecatedPtrType) ToClusterServicesKubeletDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeletDeprecatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeletDeprecatedPtrOutput)
}

type ClusterServicesKubeletDeprecatedOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeletDeprecatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeletDeprecated)(nil)).Elem()
}

func (o ClusterServicesKubeletDeprecatedOutput) ToClusterServicesKubeletDeprecatedOutput() ClusterServicesKubeletDeprecatedOutput {
	return o
}

func (o ClusterServicesKubeletDeprecatedOutput) ToClusterServicesKubeletDeprecatedOutputWithContext(ctx context.Context) ClusterServicesKubeletDeprecatedOutput {
	return o
}

func (o ClusterServicesKubeletDeprecatedOutput) ToClusterServicesKubeletDeprecatedPtrOutput() ClusterServicesKubeletDeprecatedPtrOutput {
	return o.ToClusterServicesKubeletDeprecatedPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeletDeprecatedOutput) ToClusterServicesKubeletDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeletDeprecatedPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeletDeprecated) *ClusterServicesKubeletDeprecated {
		return &v
	}).(ClusterServicesKubeletDeprecatedPtrOutput)
}

// Cluster DNS Server option for kubelet service (string)
func (o ClusterServicesKubeletDeprecatedOutput) ClusterDnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeletDeprecated) *string { return v.ClusterDnsServer }).(pulumi.StringPtrOutput)
}

// Cluster Domain option for kubelet service. Default `cluster.local` (string)
func (o ClusterServicesKubeletDeprecatedOutput) ClusterDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeletDeprecated) *string { return v.ClusterDomain }).(pulumi.StringPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeletDeprecatedOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterServicesKubeletDeprecated) map[string]interface{} { return v.ExtraArgs }).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeletDeprecatedOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubeletDeprecated) []string { return v.ExtraBinds }).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeletDeprecatedOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubeletDeprecated) []string { return v.ExtraEnvs }).(pulumi.StringArrayOutput)
}

// Enable or disable failing when swap on is not supported (bool)
func (o ClusterServicesKubeletDeprecatedOutput) FailSwapOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeletDeprecated) *bool { return v.FailSwapOn }).(pulumi.BoolPtrOutput)
}

// [Generate a certificate signed by the kube-ca](https://rancher.com/docs/rke/latest/en/config-options/services/#kubelet-serving-certificate-requirements). Default `false` (bool)
func (o ClusterServicesKubeletDeprecatedOutput) GenerateServingCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeletDeprecated) *bool { return v.GenerateServingCertificate }).(pulumi.BoolPtrOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeletDeprecatedOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeletDeprecated) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// Infra container image for kubelet service (string)
func (o ClusterServicesKubeletDeprecatedOutput) InfraContainerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeletDeprecated) *string { return v.InfraContainerImage }).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeletDeprecatedPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeletDeprecatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeletDeprecated)(nil)).Elem()
}

func (o ClusterServicesKubeletDeprecatedPtrOutput) ToClusterServicesKubeletDeprecatedPtrOutput() ClusterServicesKubeletDeprecatedPtrOutput {
	return o
}

func (o ClusterServicesKubeletDeprecatedPtrOutput) ToClusterServicesKubeletDeprecatedPtrOutputWithContext(ctx context.Context) ClusterServicesKubeletDeprecatedPtrOutput {
	return o
}

func (o ClusterServicesKubeletDeprecatedPtrOutput) Elem() ClusterServicesKubeletDeprecatedOutput {
	return o.ApplyT(func(v *ClusterServicesKubeletDeprecated) ClusterServicesKubeletDeprecated { return *v }).(ClusterServicesKubeletDeprecatedOutput)
}

// Cluster DNS Server option for kubelet service (string)
func (o ClusterServicesKubeletDeprecatedPtrOutput) ClusterDnsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeletDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.ClusterDnsServer
	}).(pulumi.StringPtrOutput)
}

// Cluster Domain option for kubelet service. Default `cluster.local` (string)
func (o ClusterServicesKubeletDeprecatedPtrOutput) ClusterDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeletDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.ClusterDomain
	}).(pulumi.StringPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeletDeprecatedPtrOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterServicesKubeletDeprecated) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeletDeprecatedPtrOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubeletDeprecated) []string {
		if v == nil {
			return nil
		}
		return v.ExtraBinds
	}).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeletDeprecatedPtrOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubeletDeprecated) []string {
		if v == nil {
			return nil
		}
		return v.ExtraEnvs
	}).(pulumi.StringArrayOutput)
}

// Enable or disable failing when swap on is not supported (bool)
func (o ClusterServicesKubeletDeprecatedPtrOutput) FailSwapOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeletDeprecated) *bool {
		if v == nil {
			return nil
		}
		return v.FailSwapOn
	}).(pulumi.BoolPtrOutput)
}

// [Generate a certificate signed by the kube-ca](https://rancher.com/docs/rke/latest/en/config-options/services/#kubelet-serving-certificate-requirements). Default `false` (bool)
func (o ClusterServicesKubeletDeprecatedPtrOutput) GenerateServingCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeletDeprecated) *bool {
		if v == nil {
			return nil
		}
		return v.GenerateServingCertificate
	}).(pulumi.BoolPtrOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeletDeprecatedPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeletDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

// Infra container image for kubelet service (string)
func (o ClusterServicesKubeletDeprecatedPtrOutput) InfraContainerImage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeletDeprecated) *string {
		if v == nil {
			return nil
		}
		return v.InfraContainerImage
	}).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeproxy struct {
	// Extra arguments for scheduler service (map)
	ExtraArgs map[string]interface{} `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds []string `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs []string `pulumi:"extraEnvs"`
	// Docker image for scheduler service (string)
	Image *string `pulumi:"image"`
}

// ClusterServicesKubeproxyInput is an input type that accepts ClusterServicesKubeproxyArgs and ClusterServicesKubeproxyOutput values.
// You can construct a concrete instance of `ClusterServicesKubeproxyInput` via:
//
//          ClusterServicesKubeproxyArgs{...}
type ClusterServicesKubeproxyInput interface {
	pulumi.Input

	ToClusterServicesKubeproxyOutput() ClusterServicesKubeproxyOutput
	ToClusterServicesKubeproxyOutputWithContext(context.Context) ClusterServicesKubeproxyOutput
}

type ClusterServicesKubeproxyArgs struct {
	// Extra arguments for scheduler service (map)
	ExtraArgs pulumi.MapInput `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds pulumi.StringArrayInput `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs pulumi.StringArrayInput `pulumi:"extraEnvs"`
	// Docker image for scheduler service (string)
	Image pulumi.StringPtrInput `pulumi:"image"`
}

func (ClusterServicesKubeproxyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeproxy)(nil)).Elem()
}

func (i ClusterServicesKubeproxyArgs) ToClusterServicesKubeproxyOutput() ClusterServicesKubeproxyOutput {
	return i.ToClusterServicesKubeproxyOutputWithContext(context.Background())
}

func (i ClusterServicesKubeproxyArgs) ToClusterServicesKubeproxyOutputWithContext(ctx context.Context) ClusterServicesKubeproxyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeproxyOutput)
}

func (i ClusterServicesKubeproxyArgs) ToClusterServicesKubeproxyPtrOutput() ClusterServicesKubeproxyPtrOutput {
	return i.ToClusterServicesKubeproxyPtrOutputWithContext(context.Background())
}

func (i ClusterServicesKubeproxyArgs) ToClusterServicesKubeproxyPtrOutputWithContext(ctx context.Context) ClusterServicesKubeproxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeproxyOutput).ToClusterServicesKubeproxyPtrOutputWithContext(ctx)
}

// ClusterServicesKubeproxyPtrInput is an input type that accepts ClusterServicesKubeproxyArgs, ClusterServicesKubeproxyPtr and ClusterServicesKubeproxyPtrOutput values.
// You can construct a concrete instance of `ClusterServicesKubeproxyPtrInput` via:
//
//          ClusterServicesKubeproxyArgs{...}
//
//  or:
//
//          nil
type ClusterServicesKubeproxyPtrInput interface {
	pulumi.Input

	ToClusterServicesKubeproxyPtrOutput() ClusterServicesKubeproxyPtrOutput
	ToClusterServicesKubeproxyPtrOutputWithContext(context.Context) ClusterServicesKubeproxyPtrOutput
}

type clusterServicesKubeproxyPtrType ClusterServicesKubeproxyArgs

func ClusterServicesKubeproxyPtr(v *ClusterServicesKubeproxyArgs) ClusterServicesKubeproxyPtrInput {
	return (*clusterServicesKubeproxyPtrType)(v)
}

func (*clusterServicesKubeproxyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeproxy)(nil)).Elem()
}

func (i *clusterServicesKubeproxyPtrType) ToClusterServicesKubeproxyPtrOutput() ClusterServicesKubeproxyPtrOutput {
	return i.ToClusterServicesKubeproxyPtrOutputWithContext(context.Background())
}

func (i *clusterServicesKubeproxyPtrType) ToClusterServicesKubeproxyPtrOutputWithContext(ctx context.Context) ClusterServicesKubeproxyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesKubeproxyPtrOutput)
}

type ClusterServicesKubeproxyOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeproxyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesKubeproxy)(nil)).Elem()
}

func (o ClusterServicesKubeproxyOutput) ToClusterServicesKubeproxyOutput() ClusterServicesKubeproxyOutput {
	return o
}

func (o ClusterServicesKubeproxyOutput) ToClusterServicesKubeproxyOutputWithContext(ctx context.Context) ClusterServicesKubeproxyOutput {
	return o
}

func (o ClusterServicesKubeproxyOutput) ToClusterServicesKubeproxyPtrOutput() ClusterServicesKubeproxyPtrOutput {
	return o.ToClusterServicesKubeproxyPtrOutputWithContext(context.Background())
}

func (o ClusterServicesKubeproxyOutput) ToClusterServicesKubeproxyPtrOutputWithContext(ctx context.Context) ClusterServicesKubeproxyPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeproxy) *ClusterServicesKubeproxy {
		return &v
	}).(ClusterServicesKubeproxyPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeproxyOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterServicesKubeproxy) map[string]interface{} { return v.ExtraArgs }).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeproxyOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubeproxy) []string { return v.ExtraBinds }).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeproxyOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesKubeproxy) []string { return v.ExtraEnvs }).(pulumi.StringArrayOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeproxyOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesKubeproxy) *string { return v.Image }).(pulumi.StringPtrOutput)
}

type ClusterServicesKubeproxyPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesKubeproxyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesKubeproxy)(nil)).Elem()
}

func (o ClusterServicesKubeproxyPtrOutput) ToClusterServicesKubeproxyPtrOutput() ClusterServicesKubeproxyPtrOutput {
	return o
}

func (o ClusterServicesKubeproxyPtrOutput) ToClusterServicesKubeproxyPtrOutputWithContext(ctx context.Context) ClusterServicesKubeproxyPtrOutput {
	return o
}

func (o ClusterServicesKubeproxyPtrOutput) Elem() ClusterServicesKubeproxyOutput {
	return o.ApplyT(func(v *ClusterServicesKubeproxy) ClusterServicesKubeproxy { return *v }).(ClusterServicesKubeproxyOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesKubeproxyPtrOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterServicesKubeproxy) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesKubeproxyPtrOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubeproxy) []string {
		if v == nil {
			return nil
		}
		return v.ExtraBinds
	}).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesKubeproxyPtrOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesKubeproxy) []string {
		if v == nil {
			return nil
		}
		return v.ExtraEnvs
	}).(pulumi.StringArrayOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesKubeproxyPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesKubeproxy) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

type ClusterServicesScheduler struct {
	// Extra arguments for scheduler service (map)
	ExtraArgs map[string]interface{} `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds []string `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs []string `pulumi:"extraEnvs"`
	// Docker image for scheduler service (string)
	Image *string `pulumi:"image"`
}

// ClusterServicesSchedulerInput is an input type that accepts ClusterServicesSchedulerArgs and ClusterServicesSchedulerOutput values.
// You can construct a concrete instance of `ClusterServicesSchedulerInput` via:
//
//          ClusterServicesSchedulerArgs{...}
type ClusterServicesSchedulerInput interface {
	pulumi.Input

	ToClusterServicesSchedulerOutput() ClusterServicesSchedulerOutput
	ToClusterServicesSchedulerOutputWithContext(context.Context) ClusterServicesSchedulerOutput
}

type ClusterServicesSchedulerArgs struct {
	// Extra arguments for scheduler service (map)
	ExtraArgs pulumi.MapInput `pulumi:"extraArgs"`
	// Extra binds for scheduler service (list)
	ExtraBinds pulumi.StringArrayInput `pulumi:"extraBinds"`
	// Extra environment for scheduler service (list)
	ExtraEnvs pulumi.StringArrayInput `pulumi:"extraEnvs"`
	// Docker image for scheduler service (string)
	Image pulumi.StringPtrInput `pulumi:"image"`
}

func (ClusterServicesSchedulerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesScheduler)(nil)).Elem()
}

func (i ClusterServicesSchedulerArgs) ToClusterServicesSchedulerOutput() ClusterServicesSchedulerOutput {
	return i.ToClusterServicesSchedulerOutputWithContext(context.Background())
}

func (i ClusterServicesSchedulerArgs) ToClusterServicesSchedulerOutputWithContext(ctx context.Context) ClusterServicesSchedulerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesSchedulerOutput)
}

func (i ClusterServicesSchedulerArgs) ToClusterServicesSchedulerPtrOutput() ClusterServicesSchedulerPtrOutput {
	return i.ToClusterServicesSchedulerPtrOutputWithContext(context.Background())
}

func (i ClusterServicesSchedulerArgs) ToClusterServicesSchedulerPtrOutputWithContext(ctx context.Context) ClusterServicesSchedulerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesSchedulerOutput).ToClusterServicesSchedulerPtrOutputWithContext(ctx)
}

// ClusterServicesSchedulerPtrInput is an input type that accepts ClusterServicesSchedulerArgs, ClusterServicesSchedulerPtr and ClusterServicesSchedulerPtrOutput values.
// You can construct a concrete instance of `ClusterServicesSchedulerPtrInput` via:
//
//          ClusterServicesSchedulerArgs{...}
//
//  or:
//
//          nil
type ClusterServicesSchedulerPtrInput interface {
	pulumi.Input

	ToClusterServicesSchedulerPtrOutput() ClusterServicesSchedulerPtrOutput
	ToClusterServicesSchedulerPtrOutputWithContext(context.Context) ClusterServicesSchedulerPtrOutput
}

type clusterServicesSchedulerPtrType ClusterServicesSchedulerArgs

func ClusterServicesSchedulerPtr(v *ClusterServicesSchedulerArgs) ClusterServicesSchedulerPtrInput {
	return (*clusterServicesSchedulerPtrType)(v)
}

func (*clusterServicesSchedulerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesScheduler)(nil)).Elem()
}

func (i *clusterServicesSchedulerPtrType) ToClusterServicesSchedulerPtrOutput() ClusterServicesSchedulerPtrOutput {
	return i.ToClusterServicesSchedulerPtrOutputWithContext(context.Background())
}

func (i *clusterServicesSchedulerPtrType) ToClusterServicesSchedulerPtrOutputWithContext(ctx context.Context) ClusterServicesSchedulerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServicesSchedulerPtrOutput)
}

type ClusterServicesSchedulerOutput struct{ *pulumi.OutputState }

func (ClusterServicesSchedulerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServicesScheduler)(nil)).Elem()
}

func (o ClusterServicesSchedulerOutput) ToClusterServicesSchedulerOutput() ClusterServicesSchedulerOutput {
	return o
}

func (o ClusterServicesSchedulerOutput) ToClusterServicesSchedulerOutputWithContext(ctx context.Context) ClusterServicesSchedulerOutput {
	return o
}

func (o ClusterServicesSchedulerOutput) ToClusterServicesSchedulerPtrOutput() ClusterServicesSchedulerPtrOutput {
	return o.ToClusterServicesSchedulerPtrOutputWithContext(context.Background())
}

func (o ClusterServicesSchedulerOutput) ToClusterServicesSchedulerPtrOutputWithContext(ctx context.Context) ClusterServicesSchedulerPtrOutput {
	return o.ApplyT(func(v ClusterServicesScheduler) *ClusterServicesScheduler {
		return &v
	}).(ClusterServicesSchedulerPtrOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesSchedulerOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v ClusterServicesScheduler) map[string]interface{} { return v.ExtraArgs }).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesSchedulerOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesScheduler) []string { return v.ExtraBinds }).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesSchedulerOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterServicesScheduler) []string { return v.ExtraEnvs }).(pulumi.StringArrayOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesSchedulerOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterServicesScheduler) *string { return v.Image }).(pulumi.StringPtrOutput)
}

type ClusterServicesSchedulerPtrOutput struct{ *pulumi.OutputState }

func (ClusterServicesSchedulerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServicesScheduler)(nil)).Elem()
}

func (o ClusterServicesSchedulerPtrOutput) ToClusterServicesSchedulerPtrOutput() ClusterServicesSchedulerPtrOutput {
	return o
}

func (o ClusterServicesSchedulerPtrOutput) ToClusterServicesSchedulerPtrOutputWithContext(ctx context.Context) ClusterServicesSchedulerPtrOutput {
	return o
}

func (o ClusterServicesSchedulerPtrOutput) Elem() ClusterServicesSchedulerOutput {
	return o.ApplyT(func(v *ClusterServicesScheduler) ClusterServicesScheduler { return *v }).(ClusterServicesSchedulerOutput)
}

// Extra arguments for scheduler service (map)
func (o ClusterServicesSchedulerPtrOutput) ExtraArgs() pulumi.MapOutput {
	return o.ApplyT(func(v *ClusterServicesScheduler) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.ExtraArgs
	}).(pulumi.MapOutput)
}

// Extra binds for scheduler service (list)
func (o ClusterServicesSchedulerPtrOutput) ExtraBinds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesScheduler) []string {
		if v == nil {
			return nil
		}
		return v.ExtraBinds
	}).(pulumi.StringArrayOutput)
}

// Extra environment for scheduler service (list)
func (o ClusterServicesSchedulerPtrOutput) ExtraEnvs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterServicesScheduler) []string {
		if v == nil {
			return nil
		}
		return v.ExtraEnvs
	}).(pulumi.StringArrayOutput)
}

// Docker image for scheduler service (string)
func (o ClusterServicesSchedulerPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterServicesScheduler) *string {
		if v == nil {
			return nil
		}
		return v.Image
	}).(pulumi.StringPtrOutput)
}

type ClusterSystemImages struct {
	// Docker image for aciCniDeployContainer (string)
	AciCniDeployContainer *string `pulumi:"aciCniDeployContainer"`
	// Docker image for aciControllerContainer (string)
	AciControllerContainer *string `pulumi:"aciControllerContainer"`
	// Docker image for aciHostContainer (string)
	AciHostContainer *string `pulumi:"aciHostContainer"`
	// Docker image for aciMcastContainer (string)
	AciMcastContainer *string `pulumi:"aciMcastContainer"`
	// Docker image for aciOpflexContainer (string)
	AciOpflexContainer *string `pulumi:"aciOpflexContainer"`
	// Docker image for aciOvsContainer (string)
	AciOvsContainer *string `pulumi:"aciOvsContainer"`
	// Docker image for alpine (string)
	Alpine *string `pulumi:"alpine"`
	// Docker image for calicoCni (string)
	CalicoCni *string `pulumi:"calicoCni"`
	// Docker image for calicoControllers (string)
	CalicoControllers *string `pulumi:"calicoControllers"`
	// Docker image for calicoCtl (string)
	CalicoCtl *string `pulumi:"calicoCtl"`
	// Docker image for calicoFlexVol (string)
	CalicoFlexVol *string `pulumi:"calicoFlexVol"`
	// Docker image for calicoNode (string)
	CalicoNode *string `pulumi:"calicoNode"`
	// Docker image for canalCni (string)
	CanalCni *string `pulumi:"canalCni"`
	// Docker image for canalFlannel (string)
	CanalFlannel *string `pulumi:"canalFlannel"`
	// Docker image for canalFlexVol (string)
	CanalFlexVol *string `pulumi:"canalFlexVol"`
	// Docker image for canalNode (string)
	CanalNode *string `pulumi:"canalNode"`
	// Docker image for certDownloader (string)
	CertDownloader *string `pulumi:"certDownloader"`
	// Docker image for coredns (string)
	Coredns *string `pulumi:"coredns"`
	// Docker image for corednsAutoscaler (string)
	CorednsAutoscaler *string `pulumi:"corednsAutoscaler"`
	// Docker image for dnsmasq (string)
	Dnsmasq *string `pulumi:"dnsmasq"`
	// Docker image for etcd (string)
	Etcd *string `pulumi:"etcd"`
	// Docker image for flannel (string)
	Flannel *string `pulumi:"flannel"`
	// Docker image for flannelCni (string)
	FlannelCni *string `pulumi:"flannelCni"`
	// Docker image for ingress (string)
	Ingress *string `pulumi:"ingress"`
	// Docker image for ingressBackend (string)
	IngressBackend *string `pulumi:"ingressBackend"`
	// Docker image for kubeDns (string)
	KubeDns *string `pulumi:"kubeDns"`
	// Docker image for kubeDnsAutoscaler (string)
	KubeDnsAutoscaler *string `pulumi:"kubeDnsAutoscaler"`
	// Docker image for kubeDnsSidecar (string)
	KubeDnsSidecar *string `pulumi:"kubeDnsSidecar"`
	// Docker image for kubernetes (string)
	Kubernetes *string `pulumi:"kubernetes"`
	// Docker image for kubernetesServicesSidecar (string)
	KubernetesServicesSidecar *string `pulumi:"kubernetesServicesSidecar"`
	// Docker image for metricsServer (string)
	MetricsServer *string `pulumi:"metricsServer"`
	// Docker image for nginxProxy (string)
	NginxProxy *string `pulumi:"nginxProxy"`
	// Docker image for nodelocal (string)
	Nodelocal *string `pulumi:"nodelocal"`
	// Docker image for podInfraContainer (string)
	PodInfraContainer *string `pulumi:"podInfraContainer"`
	// Docker image for weaveCni (string)
	WeaveCni *string `pulumi:"weaveCni"`
	// Docker image for weaveNode (string)
	WeaveNode *string `pulumi:"weaveNode"`
	// Docker image for windowsPodInfraContainer (string)
	WindowsPodInfraContainer *string `pulumi:"windowsPodInfraContainer"`
}

// ClusterSystemImagesInput is an input type that accepts ClusterSystemImagesArgs and ClusterSystemImagesOutput values.
// You can construct a concrete instance of `ClusterSystemImagesInput` via:
//
//          ClusterSystemImagesArgs{...}
type ClusterSystemImagesInput interface {
	pulumi.Input

	ToClusterSystemImagesOutput() ClusterSystemImagesOutput
	ToClusterSystemImagesOutputWithContext(context.Context) ClusterSystemImagesOutput
}

type ClusterSystemImagesArgs struct {
	// Docker image for aciCniDeployContainer (string)
	AciCniDeployContainer pulumi.StringPtrInput `pulumi:"aciCniDeployContainer"`
	// Docker image for aciControllerContainer (string)
	AciControllerContainer pulumi.StringPtrInput `pulumi:"aciControllerContainer"`
	// Docker image for aciHostContainer (string)
	AciHostContainer pulumi.StringPtrInput `pulumi:"aciHostContainer"`
	// Docker image for aciMcastContainer (string)
	AciMcastContainer pulumi.StringPtrInput `pulumi:"aciMcastContainer"`
	// Docker image for aciOpflexContainer (string)
	AciOpflexContainer pulumi.StringPtrInput `pulumi:"aciOpflexContainer"`
	// Docker image for aciOvsContainer (string)
	AciOvsContainer pulumi.StringPtrInput `pulumi:"aciOvsContainer"`
	// Docker image for alpine (string)
	Alpine pulumi.StringPtrInput `pulumi:"alpine"`
	// Docker image for calicoCni (string)
	CalicoCni pulumi.StringPtrInput `pulumi:"calicoCni"`
	// Docker image for calicoControllers (string)
	CalicoControllers pulumi.StringPtrInput `pulumi:"calicoControllers"`
	// Docker image for calicoCtl (string)
	CalicoCtl pulumi.StringPtrInput `pulumi:"calicoCtl"`
	// Docker image for calicoFlexVol (string)
	CalicoFlexVol pulumi.StringPtrInput `pulumi:"calicoFlexVol"`
	// Docker image for calicoNode (string)
	CalicoNode pulumi.StringPtrInput `pulumi:"calicoNode"`
	// Docker image for canalCni (string)
	CanalCni pulumi.StringPtrInput `pulumi:"canalCni"`
	// Docker image for canalFlannel (string)
	CanalFlannel pulumi.StringPtrInput `pulumi:"canalFlannel"`
	// Docker image for canalFlexVol (string)
	CanalFlexVol pulumi.StringPtrInput `pulumi:"canalFlexVol"`
	// Docker image for canalNode (string)
	CanalNode pulumi.StringPtrInput `pulumi:"canalNode"`
	// Docker image for certDownloader (string)
	CertDownloader pulumi.StringPtrInput `pulumi:"certDownloader"`
	// Docker image for coredns (string)
	Coredns pulumi.StringPtrInput `pulumi:"coredns"`
	// Docker image for corednsAutoscaler (string)
	CorednsAutoscaler pulumi.StringPtrInput `pulumi:"corednsAutoscaler"`
	// Docker image for dnsmasq (string)
	Dnsmasq pulumi.StringPtrInput `pulumi:"dnsmasq"`
	// Docker image for etcd (string)
	Etcd pulumi.StringPtrInput `pulumi:"etcd"`
	// Docker image for flannel (string)
	Flannel pulumi.StringPtrInput `pulumi:"flannel"`
	// Docker image for flannelCni (string)
	FlannelCni pulumi.StringPtrInput `pulumi:"flannelCni"`
	// Docker image for ingress (string)
	Ingress pulumi.StringPtrInput `pulumi:"ingress"`
	// Docker image for ingressBackend (string)
	IngressBackend pulumi.StringPtrInput `pulumi:"ingressBackend"`
	// Docker image for kubeDns (string)
	KubeDns pulumi.StringPtrInput `pulumi:"kubeDns"`
	// Docker image for kubeDnsAutoscaler (string)
	KubeDnsAutoscaler pulumi.StringPtrInput `pulumi:"kubeDnsAutoscaler"`
	// Docker image for kubeDnsSidecar (string)
	KubeDnsSidecar pulumi.StringPtrInput `pulumi:"kubeDnsSidecar"`
	// Docker image for kubernetes (string)
	Kubernetes pulumi.StringPtrInput `pulumi:"kubernetes"`
	// Docker image for kubernetesServicesSidecar (string)
	KubernetesServicesSidecar pulumi.StringPtrInput `pulumi:"kubernetesServicesSidecar"`
	// Docker image for metricsServer (string)
	MetricsServer pulumi.StringPtrInput `pulumi:"metricsServer"`
	// Docker image for nginxProxy (string)
	NginxProxy pulumi.StringPtrInput `pulumi:"nginxProxy"`
	// Docker image for nodelocal (string)
	Nodelocal pulumi.StringPtrInput `pulumi:"nodelocal"`
	// Docker image for podInfraContainer (string)
	PodInfraContainer pulumi.StringPtrInput `pulumi:"podInfraContainer"`
	// Docker image for weaveCni (string)
	WeaveCni pulumi.StringPtrInput `pulumi:"weaveCni"`
	// Docker image for weaveNode (string)
	WeaveNode pulumi.StringPtrInput `pulumi:"weaveNode"`
	// Docker image for windowsPodInfraContainer (string)
	WindowsPodInfraContainer pulumi.StringPtrInput `pulumi:"windowsPodInfraContainer"`
}

func (ClusterSystemImagesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSystemImages)(nil)).Elem()
}

func (i ClusterSystemImagesArgs) ToClusterSystemImagesOutput() ClusterSystemImagesOutput {
	return i.ToClusterSystemImagesOutputWithContext(context.Background())
}

func (i ClusterSystemImagesArgs) ToClusterSystemImagesOutputWithContext(ctx context.Context) ClusterSystemImagesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSystemImagesOutput)
}

func (i ClusterSystemImagesArgs) ToClusterSystemImagesPtrOutput() ClusterSystemImagesPtrOutput {
	return i.ToClusterSystemImagesPtrOutputWithContext(context.Background())
}

func (i ClusterSystemImagesArgs) ToClusterSystemImagesPtrOutputWithContext(ctx context.Context) ClusterSystemImagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSystemImagesOutput).ToClusterSystemImagesPtrOutputWithContext(ctx)
}

// ClusterSystemImagesPtrInput is an input type that accepts ClusterSystemImagesArgs, ClusterSystemImagesPtr and ClusterSystemImagesPtrOutput values.
// You can construct a concrete instance of `ClusterSystemImagesPtrInput` via:
//
//          ClusterSystemImagesArgs{...}
//
//  or:
//
//          nil
type ClusterSystemImagesPtrInput interface {
	pulumi.Input

	ToClusterSystemImagesPtrOutput() ClusterSystemImagesPtrOutput
	ToClusterSystemImagesPtrOutputWithContext(context.Context) ClusterSystemImagesPtrOutput
}

type clusterSystemImagesPtrType ClusterSystemImagesArgs

func ClusterSystemImagesPtr(v *ClusterSystemImagesArgs) ClusterSystemImagesPtrInput {
	return (*clusterSystemImagesPtrType)(v)
}

func (*clusterSystemImagesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSystemImages)(nil)).Elem()
}

func (i *clusterSystemImagesPtrType) ToClusterSystemImagesPtrOutput() ClusterSystemImagesPtrOutput {
	return i.ToClusterSystemImagesPtrOutputWithContext(context.Background())
}

func (i *clusterSystemImagesPtrType) ToClusterSystemImagesPtrOutputWithContext(ctx context.Context) ClusterSystemImagesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSystemImagesPtrOutput)
}

type ClusterSystemImagesOutput struct{ *pulumi.OutputState }

func (ClusterSystemImagesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSystemImages)(nil)).Elem()
}

func (o ClusterSystemImagesOutput) ToClusterSystemImagesOutput() ClusterSystemImagesOutput {
	return o
}

func (o ClusterSystemImagesOutput) ToClusterSystemImagesOutputWithContext(ctx context.Context) ClusterSystemImagesOutput {
	return o
}

func (o ClusterSystemImagesOutput) ToClusterSystemImagesPtrOutput() ClusterSystemImagesPtrOutput {
	return o.ToClusterSystemImagesPtrOutputWithContext(context.Background())
}

func (o ClusterSystemImagesOutput) ToClusterSystemImagesPtrOutputWithContext(ctx context.Context) ClusterSystemImagesPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *ClusterSystemImages {
		return &v
	}).(ClusterSystemImagesPtrOutput)
}

// Docker image for aciCniDeployContainer (string)
func (o ClusterSystemImagesOutput) AciCniDeployContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.AciCniDeployContainer }).(pulumi.StringPtrOutput)
}

// Docker image for aciControllerContainer (string)
func (o ClusterSystemImagesOutput) AciControllerContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.AciControllerContainer }).(pulumi.StringPtrOutput)
}

// Docker image for aciHostContainer (string)
func (o ClusterSystemImagesOutput) AciHostContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.AciHostContainer }).(pulumi.StringPtrOutput)
}

// Docker image for aciMcastContainer (string)
func (o ClusterSystemImagesOutput) AciMcastContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.AciMcastContainer }).(pulumi.StringPtrOutput)
}

// Docker image for aciOpflexContainer (string)
func (o ClusterSystemImagesOutput) AciOpflexContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.AciOpflexContainer }).(pulumi.StringPtrOutput)
}

// Docker image for aciOvsContainer (string)
func (o ClusterSystemImagesOutput) AciOvsContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.AciOvsContainer }).(pulumi.StringPtrOutput)
}

// Docker image for alpine (string)
func (o ClusterSystemImagesOutput) Alpine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.Alpine }).(pulumi.StringPtrOutput)
}

// Docker image for calicoCni (string)
func (o ClusterSystemImagesOutput) CalicoCni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.CalicoCni }).(pulumi.StringPtrOutput)
}

// Docker image for calicoControllers (string)
func (o ClusterSystemImagesOutput) CalicoControllers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.CalicoControllers }).(pulumi.StringPtrOutput)
}

// Docker image for calicoCtl (string)
func (o ClusterSystemImagesOutput) CalicoCtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.CalicoCtl }).(pulumi.StringPtrOutput)
}

// Docker image for calicoFlexVol (string)
func (o ClusterSystemImagesOutput) CalicoFlexVol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.CalicoFlexVol }).(pulumi.StringPtrOutput)
}

// Docker image for calicoNode (string)
func (o ClusterSystemImagesOutput) CalicoNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.CalicoNode }).(pulumi.StringPtrOutput)
}

// Docker image for canalCni (string)
func (o ClusterSystemImagesOutput) CanalCni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.CanalCni }).(pulumi.StringPtrOutput)
}

// Docker image for canalFlannel (string)
func (o ClusterSystemImagesOutput) CanalFlannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.CanalFlannel }).(pulumi.StringPtrOutput)
}

// Docker image for canalFlexVol (string)
func (o ClusterSystemImagesOutput) CanalFlexVol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.CanalFlexVol }).(pulumi.StringPtrOutput)
}

// Docker image for canalNode (string)
func (o ClusterSystemImagesOutput) CanalNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.CanalNode }).(pulumi.StringPtrOutput)
}

// Docker image for certDownloader (string)
func (o ClusterSystemImagesOutput) CertDownloader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.CertDownloader }).(pulumi.StringPtrOutput)
}

// Docker image for coredns (string)
func (o ClusterSystemImagesOutput) Coredns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.Coredns }).(pulumi.StringPtrOutput)
}

// Docker image for corednsAutoscaler (string)
func (o ClusterSystemImagesOutput) CorednsAutoscaler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.CorednsAutoscaler }).(pulumi.StringPtrOutput)
}

// Docker image for dnsmasq (string)
func (o ClusterSystemImagesOutput) Dnsmasq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.Dnsmasq }).(pulumi.StringPtrOutput)
}

// Docker image for etcd (string)
func (o ClusterSystemImagesOutput) Etcd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.Etcd }).(pulumi.StringPtrOutput)
}

// Docker image for flannel (string)
func (o ClusterSystemImagesOutput) Flannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.Flannel }).(pulumi.StringPtrOutput)
}

// Docker image for flannelCni (string)
func (o ClusterSystemImagesOutput) FlannelCni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.FlannelCni }).(pulumi.StringPtrOutput)
}

// Docker image for ingress (string)
func (o ClusterSystemImagesOutput) Ingress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.Ingress }).(pulumi.StringPtrOutput)
}

// Docker image for ingressBackend (string)
func (o ClusterSystemImagesOutput) IngressBackend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.IngressBackend }).(pulumi.StringPtrOutput)
}

// Docker image for kubeDns (string)
func (o ClusterSystemImagesOutput) KubeDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.KubeDns }).(pulumi.StringPtrOutput)
}

// Docker image for kubeDnsAutoscaler (string)
func (o ClusterSystemImagesOutput) KubeDnsAutoscaler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.KubeDnsAutoscaler }).(pulumi.StringPtrOutput)
}

// Docker image for kubeDnsSidecar (string)
func (o ClusterSystemImagesOutput) KubeDnsSidecar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.KubeDnsSidecar }).(pulumi.StringPtrOutput)
}

// Docker image for kubernetes (string)
func (o ClusterSystemImagesOutput) Kubernetes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.Kubernetes }).(pulumi.StringPtrOutput)
}

// Docker image for kubernetesServicesSidecar (string)
func (o ClusterSystemImagesOutput) KubernetesServicesSidecar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.KubernetesServicesSidecar }).(pulumi.StringPtrOutput)
}

// Docker image for metricsServer (string)
func (o ClusterSystemImagesOutput) MetricsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.MetricsServer }).(pulumi.StringPtrOutput)
}

// Docker image for nginxProxy (string)
func (o ClusterSystemImagesOutput) NginxProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.NginxProxy }).(pulumi.StringPtrOutput)
}

// Docker image for nodelocal (string)
func (o ClusterSystemImagesOutput) Nodelocal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.Nodelocal }).(pulumi.StringPtrOutput)
}

// Docker image for podInfraContainer (string)
func (o ClusterSystemImagesOutput) PodInfraContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.PodInfraContainer }).(pulumi.StringPtrOutput)
}

// Docker image for weaveCni (string)
func (o ClusterSystemImagesOutput) WeaveCni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.WeaveCni }).(pulumi.StringPtrOutput)
}

// Docker image for weaveNode (string)
func (o ClusterSystemImagesOutput) WeaveNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.WeaveNode }).(pulumi.StringPtrOutput)
}

// Docker image for windowsPodInfraContainer (string)
func (o ClusterSystemImagesOutput) WindowsPodInfraContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterSystemImages) *string { return v.WindowsPodInfraContainer }).(pulumi.StringPtrOutput)
}

type ClusterSystemImagesPtrOutput struct{ *pulumi.OutputState }

func (ClusterSystemImagesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSystemImages)(nil)).Elem()
}

func (o ClusterSystemImagesPtrOutput) ToClusterSystemImagesPtrOutput() ClusterSystemImagesPtrOutput {
	return o
}

func (o ClusterSystemImagesPtrOutput) ToClusterSystemImagesPtrOutputWithContext(ctx context.Context) ClusterSystemImagesPtrOutput {
	return o
}

func (o ClusterSystemImagesPtrOutput) Elem() ClusterSystemImagesOutput {
	return o.ApplyT(func(v *ClusterSystemImages) ClusterSystemImages { return *v }).(ClusterSystemImagesOutput)
}

// Docker image for aciCniDeployContainer (string)
func (o ClusterSystemImagesPtrOutput) AciCniDeployContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.AciCniDeployContainer
	}).(pulumi.StringPtrOutput)
}

// Docker image for aciControllerContainer (string)
func (o ClusterSystemImagesPtrOutput) AciControllerContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.AciControllerContainer
	}).(pulumi.StringPtrOutput)
}

// Docker image for aciHostContainer (string)
func (o ClusterSystemImagesPtrOutput) AciHostContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.AciHostContainer
	}).(pulumi.StringPtrOutput)
}

// Docker image for aciMcastContainer (string)
func (o ClusterSystemImagesPtrOutput) AciMcastContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.AciMcastContainer
	}).(pulumi.StringPtrOutput)
}

// Docker image for aciOpflexContainer (string)
func (o ClusterSystemImagesPtrOutput) AciOpflexContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.AciOpflexContainer
	}).(pulumi.StringPtrOutput)
}

// Docker image for aciOvsContainer (string)
func (o ClusterSystemImagesPtrOutput) AciOvsContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.AciOvsContainer
	}).(pulumi.StringPtrOutput)
}

// Docker image for alpine (string)
func (o ClusterSystemImagesPtrOutput) Alpine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.Alpine
	}).(pulumi.StringPtrOutput)
}

// Docker image for calicoCni (string)
func (o ClusterSystemImagesPtrOutput) CalicoCni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CalicoCni
	}).(pulumi.StringPtrOutput)
}

// Docker image for calicoControllers (string)
func (o ClusterSystemImagesPtrOutput) CalicoControllers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CalicoControllers
	}).(pulumi.StringPtrOutput)
}

// Docker image for calicoCtl (string)
func (o ClusterSystemImagesPtrOutput) CalicoCtl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CalicoCtl
	}).(pulumi.StringPtrOutput)
}

// Docker image for calicoFlexVol (string)
func (o ClusterSystemImagesPtrOutput) CalicoFlexVol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CalicoFlexVol
	}).(pulumi.StringPtrOutput)
}

// Docker image for calicoNode (string)
func (o ClusterSystemImagesPtrOutput) CalicoNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CalicoNode
	}).(pulumi.StringPtrOutput)
}

// Docker image for canalCni (string)
func (o ClusterSystemImagesPtrOutput) CanalCni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CanalCni
	}).(pulumi.StringPtrOutput)
}

// Docker image for canalFlannel (string)
func (o ClusterSystemImagesPtrOutput) CanalFlannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CanalFlannel
	}).(pulumi.StringPtrOutput)
}

// Docker image for canalFlexVol (string)
func (o ClusterSystemImagesPtrOutput) CanalFlexVol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CanalFlexVol
	}).(pulumi.StringPtrOutput)
}

// Docker image for canalNode (string)
func (o ClusterSystemImagesPtrOutput) CanalNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CanalNode
	}).(pulumi.StringPtrOutput)
}

// Docker image for certDownloader (string)
func (o ClusterSystemImagesPtrOutput) CertDownloader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CertDownloader
	}).(pulumi.StringPtrOutput)
}

// Docker image for coredns (string)
func (o ClusterSystemImagesPtrOutput) Coredns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.Coredns
	}).(pulumi.StringPtrOutput)
}

// Docker image for corednsAutoscaler (string)
func (o ClusterSystemImagesPtrOutput) CorednsAutoscaler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.CorednsAutoscaler
	}).(pulumi.StringPtrOutput)
}

// Docker image for dnsmasq (string)
func (o ClusterSystemImagesPtrOutput) Dnsmasq() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.Dnsmasq
	}).(pulumi.StringPtrOutput)
}

// Docker image for etcd (string)
func (o ClusterSystemImagesPtrOutput) Etcd() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.Etcd
	}).(pulumi.StringPtrOutput)
}

// Docker image for flannel (string)
func (o ClusterSystemImagesPtrOutput) Flannel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.Flannel
	}).(pulumi.StringPtrOutput)
}

// Docker image for flannelCni (string)
func (o ClusterSystemImagesPtrOutput) FlannelCni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.FlannelCni
	}).(pulumi.StringPtrOutput)
}

// Docker image for ingress (string)
func (o ClusterSystemImagesPtrOutput) Ingress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.Ingress
	}).(pulumi.StringPtrOutput)
}

// Docker image for ingressBackend (string)
func (o ClusterSystemImagesPtrOutput) IngressBackend() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.IngressBackend
	}).(pulumi.StringPtrOutput)
}

// Docker image for kubeDns (string)
func (o ClusterSystemImagesPtrOutput) KubeDns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.KubeDns
	}).(pulumi.StringPtrOutput)
}

// Docker image for kubeDnsAutoscaler (string)
func (o ClusterSystemImagesPtrOutput) KubeDnsAutoscaler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.KubeDnsAutoscaler
	}).(pulumi.StringPtrOutput)
}

// Docker image for kubeDnsSidecar (string)
func (o ClusterSystemImagesPtrOutput) KubeDnsSidecar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.KubeDnsSidecar
	}).(pulumi.StringPtrOutput)
}

// Docker image for kubernetes (string)
func (o ClusterSystemImagesPtrOutput) Kubernetes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.Kubernetes
	}).(pulumi.StringPtrOutput)
}

// Docker image for kubernetesServicesSidecar (string)
func (o ClusterSystemImagesPtrOutput) KubernetesServicesSidecar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.KubernetesServicesSidecar
	}).(pulumi.StringPtrOutput)
}

// Docker image for metricsServer (string)
func (o ClusterSystemImagesPtrOutput) MetricsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.MetricsServer
	}).(pulumi.StringPtrOutput)
}

// Docker image for nginxProxy (string)
func (o ClusterSystemImagesPtrOutput) NginxProxy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.NginxProxy
	}).(pulumi.StringPtrOutput)
}

// Docker image for nodelocal (string)
func (o ClusterSystemImagesPtrOutput) Nodelocal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.Nodelocal
	}).(pulumi.StringPtrOutput)
}

// Docker image for podInfraContainer (string)
func (o ClusterSystemImagesPtrOutput) PodInfraContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.PodInfraContainer
	}).(pulumi.StringPtrOutput)
}

// Docker image for weaveCni (string)
func (o ClusterSystemImagesPtrOutput) WeaveCni() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.WeaveCni
	}).(pulumi.StringPtrOutput)
}

// Docker image for weaveNode (string)
func (o ClusterSystemImagesPtrOutput) WeaveNode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.WeaveNode
	}).(pulumi.StringPtrOutput)
}

// Docker image for windowsPodInfraContainer (string)
func (o ClusterSystemImagesPtrOutput) WindowsPodInfraContainer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterSystemImages) *string {
		if v == nil {
			return nil
		}
		return v.WindowsPodInfraContainer
	}).(pulumi.StringPtrOutput)
}

type ClusterUpgradeStrategy struct {
	// RKE drain nodes (bool)
	Drain *bool `pulumi:"drain"`
	// RKE drain node input (list Maxitems: 1)
	DrainInput *ClusterUpgradeStrategyDrainInput `pulumi:"drainInput"`
	// RKE max unavailable controlplane nodes (string)
	MaxUnavailableControlplane *string `pulumi:"maxUnavailableControlplane"`
	// RKE max unavailable worker nodes (string)
	MaxUnavailableWorker *string `pulumi:"maxUnavailableWorker"`
}

// ClusterUpgradeStrategyInput is an input type that accepts ClusterUpgradeStrategyArgs and ClusterUpgradeStrategyOutput values.
// You can construct a concrete instance of `ClusterUpgradeStrategyInput` via:
//
//          ClusterUpgradeStrategyArgs{...}
type ClusterUpgradeStrategyInput interface {
	pulumi.Input

	ToClusterUpgradeStrategyOutput() ClusterUpgradeStrategyOutput
	ToClusterUpgradeStrategyOutputWithContext(context.Context) ClusterUpgradeStrategyOutput
}

type ClusterUpgradeStrategyArgs struct {
	// RKE drain nodes (bool)
	Drain pulumi.BoolPtrInput `pulumi:"drain"`
	// RKE drain node input (list Maxitems: 1)
	DrainInput ClusterUpgradeStrategyDrainInputPtrInput `pulumi:"drainInput"`
	// RKE max unavailable controlplane nodes (string)
	MaxUnavailableControlplane pulumi.StringPtrInput `pulumi:"maxUnavailableControlplane"`
	// RKE max unavailable worker nodes (string)
	MaxUnavailableWorker pulumi.StringPtrInput `pulumi:"maxUnavailableWorker"`
}

func (ClusterUpgradeStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUpgradeStrategy)(nil)).Elem()
}

func (i ClusterUpgradeStrategyArgs) ToClusterUpgradeStrategyOutput() ClusterUpgradeStrategyOutput {
	return i.ToClusterUpgradeStrategyOutputWithContext(context.Background())
}

func (i ClusterUpgradeStrategyArgs) ToClusterUpgradeStrategyOutputWithContext(ctx context.Context) ClusterUpgradeStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUpgradeStrategyOutput)
}

func (i ClusterUpgradeStrategyArgs) ToClusterUpgradeStrategyPtrOutput() ClusterUpgradeStrategyPtrOutput {
	return i.ToClusterUpgradeStrategyPtrOutputWithContext(context.Background())
}

func (i ClusterUpgradeStrategyArgs) ToClusterUpgradeStrategyPtrOutputWithContext(ctx context.Context) ClusterUpgradeStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUpgradeStrategyOutput).ToClusterUpgradeStrategyPtrOutputWithContext(ctx)
}

// ClusterUpgradeStrategyPtrInput is an input type that accepts ClusterUpgradeStrategyArgs, ClusterUpgradeStrategyPtr and ClusterUpgradeStrategyPtrOutput values.
// You can construct a concrete instance of `ClusterUpgradeStrategyPtrInput` via:
//
//          ClusterUpgradeStrategyArgs{...}
//
//  or:
//
//          nil
type ClusterUpgradeStrategyPtrInput interface {
	pulumi.Input

	ToClusterUpgradeStrategyPtrOutput() ClusterUpgradeStrategyPtrOutput
	ToClusterUpgradeStrategyPtrOutputWithContext(context.Context) ClusterUpgradeStrategyPtrOutput
}

type clusterUpgradeStrategyPtrType ClusterUpgradeStrategyArgs

func ClusterUpgradeStrategyPtr(v *ClusterUpgradeStrategyArgs) ClusterUpgradeStrategyPtrInput {
	return (*clusterUpgradeStrategyPtrType)(v)
}

func (*clusterUpgradeStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterUpgradeStrategy)(nil)).Elem()
}

func (i *clusterUpgradeStrategyPtrType) ToClusterUpgradeStrategyPtrOutput() ClusterUpgradeStrategyPtrOutput {
	return i.ToClusterUpgradeStrategyPtrOutputWithContext(context.Background())
}

func (i *clusterUpgradeStrategyPtrType) ToClusterUpgradeStrategyPtrOutputWithContext(ctx context.Context) ClusterUpgradeStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUpgradeStrategyPtrOutput)
}

type ClusterUpgradeStrategyOutput struct{ *pulumi.OutputState }

func (ClusterUpgradeStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUpgradeStrategy)(nil)).Elem()
}

func (o ClusterUpgradeStrategyOutput) ToClusterUpgradeStrategyOutput() ClusterUpgradeStrategyOutput {
	return o
}

func (o ClusterUpgradeStrategyOutput) ToClusterUpgradeStrategyOutputWithContext(ctx context.Context) ClusterUpgradeStrategyOutput {
	return o
}

func (o ClusterUpgradeStrategyOutput) ToClusterUpgradeStrategyPtrOutput() ClusterUpgradeStrategyPtrOutput {
	return o.ToClusterUpgradeStrategyPtrOutputWithContext(context.Background())
}

func (o ClusterUpgradeStrategyOutput) ToClusterUpgradeStrategyPtrOutputWithContext(ctx context.Context) ClusterUpgradeStrategyPtrOutput {
	return o.ApplyT(func(v ClusterUpgradeStrategy) *ClusterUpgradeStrategy {
		return &v
	}).(ClusterUpgradeStrategyPtrOutput)
}

// RKE drain nodes (bool)
func (o ClusterUpgradeStrategyOutput) Drain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterUpgradeStrategy) *bool { return v.Drain }).(pulumi.BoolPtrOutput)
}

// RKE drain node input (list Maxitems: 1)
func (o ClusterUpgradeStrategyOutput) DrainInput() ClusterUpgradeStrategyDrainInputPtrOutput {
	return o.ApplyT(func(v ClusterUpgradeStrategy) *ClusterUpgradeStrategyDrainInput { return v.DrainInput }).(ClusterUpgradeStrategyDrainInputPtrOutput)
}

// RKE max unavailable controlplane nodes (string)
func (o ClusterUpgradeStrategyOutput) MaxUnavailableControlplane() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterUpgradeStrategy) *string { return v.MaxUnavailableControlplane }).(pulumi.StringPtrOutput)
}

// RKE max unavailable worker nodes (string)
func (o ClusterUpgradeStrategyOutput) MaxUnavailableWorker() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterUpgradeStrategy) *string { return v.MaxUnavailableWorker }).(pulumi.StringPtrOutput)
}

type ClusterUpgradeStrategyPtrOutput struct{ *pulumi.OutputState }

func (ClusterUpgradeStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterUpgradeStrategy)(nil)).Elem()
}

func (o ClusterUpgradeStrategyPtrOutput) ToClusterUpgradeStrategyPtrOutput() ClusterUpgradeStrategyPtrOutput {
	return o
}

func (o ClusterUpgradeStrategyPtrOutput) ToClusterUpgradeStrategyPtrOutputWithContext(ctx context.Context) ClusterUpgradeStrategyPtrOutput {
	return o
}

func (o ClusterUpgradeStrategyPtrOutput) Elem() ClusterUpgradeStrategyOutput {
	return o.ApplyT(func(v *ClusterUpgradeStrategy) ClusterUpgradeStrategy { return *v }).(ClusterUpgradeStrategyOutput)
}

// RKE drain nodes (bool)
func (o ClusterUpgradeStrategyPtrOutput) Drain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterUpgradeStrategy) *bool {
		if v == nil {
			return nil
		}
		return v.Drain
	}).(pulumi.BoolPtrOutput)
}

// RKE drain node input (list Maxitems: 1)
func (o ClusterUpgradeStrategyPtrOutput) DrainInput() ClusterUpgradeStrategyDrainInputPtrOutput {
	return o.ApplyT(func(v *ClusterUpgradeStrategy) *ClusterUpgradeStrategyDrainInput {
		if v == nil {
			return nil
		}
		return v.DrainInput
	}).(ClusterUpgradeStrategyDrainInputPtrOutput)
}

// RKE max unavailable controlplane nodes (string)
func (o ClusterUpgradeStrategyPtrOutput) MaxUnavailableControlplane() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUpgradeStrategy) *string {
		if v == nil {
			return nil
		}
		return v.MaxUnavailableControlplane
	}).(pulumi.StringPtrOutput)
}

// RKE max unavailable worker nodes (string)
func (o ClusterUpgradeStrategyPtrOutput) MaxUnavailableWorker() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterUpgradeStrategy) *string {
		if v == nil {
			return nil
		}
		return v.MaxUnavailableWorker
	}).(pulumi.StringPtrOutput)
}

type ClusterUpgradeStrategyDrainInput struct {
	// Delete RKE node local data (bool)
	DeleteLocalData *bool `pulumi:"deleteLocalData"`
	// Force RKE node drain (bool)
	Force *bool `pulumi:"force"`
	// RKE node drain grace period (int)
	GracePeriod *int `pulumi:"gracePeriod"`
	// Ignore RKE daemon sets (bool)
	IgnoreDaemonSets *bool `pulumi:"ignoreDaemonSets"`
	// RKE node drain timeout (int)
	Timeout *int `pulumi:"timeout"`
}

// ClusterUpgradeStrategyDrainInputInput is an input type that accepts ClusterUpgradeStrategyDrainInputArgs and ClusterUpgradeStrategyDrainInputOutput values.
// You can construct a concrete instance of `ClusterUpgradeStrategyDrainInputInput` via:
//
//          ClusterUpgradeStrategyDrainInputArgs{...}
type ClusterUpgradeStrategyDrainInputInput interface {
	pulumi.Input

	ToClusterUpgradeStrategyDrainInputOutput() ClusterUpgradeStrategyDrainInputOutput
	ToClusterUpgradeStrategyDrainInputOutputWithContext(context.Context) ClusterUpgradeStrategyDrainInputOutput
}

type ClusterUpgradeStrategyDrainInputArgs struct {
	// Delete RKE node local data (bool)
	DeleteLocalData pulumi.BoolPtrInput `pulumi:"deleteLocalData"`
	// Force RKE node drain (bool)
	Force pulumi.BoolPtrInput `pulumi:"force"`
	// RKE node drain grace period (int)
	GracePeriod pulumi.IntPtrInput `pulumi:"gracePeriod"`
	// Ignore RKE daemon sets (bool)
	IgnoreDaemonSets pulumi.BoolPtrInput `pulumi:"ignoreDaemonSets"`
	// RKE node drain timeout (int)
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (ClusterUpgradeStrategyDrainInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUpgradeStrategyDrainInput)(nil)).Elem()
}

func (i ClusterUpgradeStrategyDrainInputArgs) ToClusterUpgradeStrategyDrainInputOutput() ClusterUpgradeStrategyDrainInputOutput {
	return i.ToClusterUpgradeStrategyDrainInputOutputWithContext(context.Background())
}

func (i ClusterUpgradeStrategyDrainInputArgs) ToClusterUpgradeStrategyDrainInputOutputWithContext(ctx context.Context) ClusterUpgradeStrategyDrainInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUpgradeStrategyDrainInputOutput)
}

func (i ClusterUpgradeStrategyDrainInputArgs) ToClusterUpgradeStrategyDrainInputPtrOutput() ClusterUpgradeStrategyDrainInputPtrOutput {
	return i.ToClusterUpgradeStrategyDrainInputPtrOutputWithContext(context.Background())
}

func (i ClusterUpgradeStrategyDrainInputArgs) ToClusterUpgradeStrategyDrainInputPtrOutputWithContext(ctx context.Context) ClusterUpgradeStrategyDrainInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUpgradeStrategyDrainInputOutput).ToClusterUpgradeStrategyDrainInputPtrOutputWithContext(ctx)
}

// ClusterUpgradeStrategyDrainInputPtrInput is an input type that accepts ClusterUpgradeStrategyDrainInputArgs, ClusterUpgradeStrategyDrainInputPtr and ClusterUpgradeStrategyDrainInputPtrOutput values.
// You can construct a concrete instance of `ClusterUpgradeStrategyDrainInputPtrInput` via:
//
//          ClusterUpgradeStrategyDrainInputArgs{...}
//
//  or:
//
//          nil
type ClusterUpgradeStrategyDrainInputPtrInput interface {
	pulumi.Input

	ToClusterUpgradeStrategyDrainInputPtrOutput() ClusterUpgradeStrategyDrainInputPtrOutput
	ToClusterUpgradeStrategyDrainInputPtrOutputWithContext(context.Context) ClusterUpgradeStrategyDrainInputPtrOutput
}

type clusterUpgradeStrategyDrainInputPtrType ClusterUpgradeStrategyDrainInputArgs

func ClusterUpgradeStrategyDrainInputPtr(v *ClusterUpgradeStrategyDrainInputArgs) ClusterUpgradeStrategyDrainInputPtrInput {
	return (*clusterUpgradeStrategyDrainInputPtrType)(v)
}

func (*clusterUpgradeStrategyDrainInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterUpgradeStrategyDrainInput)(nil)).Elem()
}

func (i *clusterUpgradeStrategyDrainInputPtrType) ToClusterUpgradeStrategyDrainInputPtrOutput() ClusterUpgradeStrategyDrainInputPtrOutput {
	return i.ToClusterUpgradeStrategyDrainInputPtrOutputWithContext(context.Background())
}

func (i *clusterUpgradeStrategyDrainInputPtrType) ToClusterUpgradeStrategyDrainInputPtrOutputWithContext(ctx context.Context) ClusterUpgradeStrategyDrainInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUpgradeStrategyDrainInputPtrOutput)
}

type ClusterUpgradeStrategyDrainInputOutput struct{ *pulumi.OutputState }

func (ClusterUpgradeStrategyDrainInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUpgradeStrategyDrainInput)(nil)).Elem()
}

func (o ClusterUpgradeStrategyDrainInputOutput) ToClusterUpgradeStrategyDrainInputOutput() ClusterUpgradeStrategyDrainInputOutput {
	return o
}

func (o ClusterUpgradeStrategyDrainInputOutput) ToClusterUpgradeStrategyDrainInputOutputWithContext(ctx context.Context) ClusterUpgradeStrategyDrainInputOutput {
	return o
}

func (o ClusterUpgradeStrategyDrainInputOutput) ToClusterUpgradeStrategyDrainInputPtrOutput() ClusterUpgradeStrategyDrainInputPtrOutput {
	return o.ToClusterUpgradeStrategyDrainInputPtrOutputWithContext(context.Background())
}

func (o ClusterUpgradeStrategyDrainInputOutput) ToClusterUpgradeStrategyDrainInputPtrOutputWithContext(ctx context.Context) ClusterUpgradeStrategyDrainInputPtrOutput {
	return o.ApplyT(func(v ClusterUpgradeStrategyDrainInput) *ClusterUpgradeStrategyDrainInput {
		return &v
	}).(ClusterUpgradeStrategyDrainInputPtrOutput)
}

// Delete RKE node local data (bool)
func (o ClusterUpgradeStrategyDrainInputOutput) DeleteLocalData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterUpgradeStrategyDrainInput) *bool { return v.DeleteLocalData }).(pulumi.BoolPtrOutput)
}

// Force RKE node drain (bool)
func (o ClusterUpgradeStrategyDrainInputOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterUpgradeStrategyDrainInput) *bool { return v.Force }).(pulumi.BoolPtrOutput)
}

// RKE node drain grace period (int)
func (o ClusterUpgradeStrategyDrainInputOutput) GracePeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterUpgradeStrategyDrainInput) *int { return v.GracePeriod }).(pulumi.IntPtrOutput)
}

// Ignore RKE daemon sets (bool)
func (o ClusterUpgradeStrategyDrainInputOutput) IgnoreDaemonSets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterUpgradeStrategyDrainInput) *bool { return v.IgnoreDaemonSets }).(pulumi.BoolPtrOutput)
}

// RKE node drain timeout (int)
func (o ClusterUpgradeStrategyDrainInputOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterUpgradeStrategyDrainInput) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type ClusterUpgradeStrategyDrainInputPtrOutput struct{ *pulumi.OutputState }

func (ClusterUpgradeStrategyDrainInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterUpgradeStrategyDrainInput)(nil)).Elem()
}

func (o ClusterUpgradeStrategyDrainInputPtrOutput) ToClusterUpgradeStrategyDrainInputPtrOutput() ClusterUpgradeStrategyDrainInputPtrOutput {
	return o
}

func (o ClusterUpgradeStrategyDrainInputPtrOutput) ToClusterUpgradeStrategyDrainInputPtrOutputWithContext(ctx context.Context) ClusterUpgradeStrategyDrainInputPtrOutput {
	return o
}

func (o ClusterUpgradeStrategyDrainInputPtrOutput) Elem() ClusterUpgradeStrategyDrainInputOutput {
	return o.ApplyT(func(v *ClusterUpgradeStrategyDrainInput) ClusterUpgradeStrategyDrainInput { return *v }).(ClusterUpgradeStrategyDrainInputOutput)
}

// Delete RKE node local data (bool)
func (o ClusterUpgradeStrategyDrainInputPtrOutput) DeleteLocalData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterUpgradeStrategyDrainInput) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteLocalData
	}).(pulumi.BoolPtrOutput)
}

// Force RKE node drain (bool)
func (o ClusterUpgradeStrategyDrainInputPtrOutput) Force() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterUpgradeStrategyDrainInput) *bool {
		if v == nil {
			return nil
		}
		return v.Force
	}).(pulumi.BoolPtrOutput)
}

// RKE node drain grace period (int)
func (o ClusterUpgradeStrategyDrainInputPtrOutput) GracePeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterUpgradeStrategyDrainInput) *int {
		if v == nil {
			return nil
		}
		return v.GracePeriod
	}).(pulumi.IntPtrOutput)
}

// Ignore RKE daemon sets (bool)
func (o ClusterUpgradeStrategyDrainInputPtrOutput) IgnoreDaemonSets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterUpgradeStrategyDrainInput) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreDaemonSets
	}).(pulumi.BoolPtrOutput)
}

// RKE node drain timeout (int)
func (o ClusterUpgradeStrategyDrainInputPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterUpgradeStrategyDrainInput) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

type ClusterWorkerHost struct {
	// Address ip for node (string)
	Address *string `pulumi:"address"`
	// Name of the host provisioned via docker machine (string)
	NodeName *string `pulumi:"nodeName"`
}

// ClusterWorkerHostInput is an input type that accepts ClusterWorkerHostArgs and ClusterWorkerHostOutput values.
// You can construct a concrete instance of `ClusterWorkerHostInput` via:
//
//          ClusterWorkerHostArgs{...}
type ClusterWorkerHostInput interface {
	pulumi.Input

	ToClusterWorkerHostOutput() ClusterWorkerHostOutput
	ToClusterWorkerHostOutputWithContext(context.Context) ClusterWorkerHostOutput
}

type ClusterWorkerHostArgs struct {
	// Address ip for node (string)
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Name of the host provisioned via docker machine (string)
	NodeName pulumi.StringPtrInput `pulumi:"nodeName"`
}

func (ClusterWorkerHostArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkerHost)(nil)).Elem()
}

func (i ClusterWorkerHostArgs) ToClusterWorkerHostOutput() ClusterWorkerHostOutput {
	return i.ToClusterWorkerHostOutputWithContext(context.Background())
}

func (i ClusterWorkerHostArgs) ToClusterWorkerHostOutputWithContext(ctx context.Context) ClusterWorkerHostOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkerHostOutput)
}

// ClusterWorkerHostArrayInput is an input type that accepts ClusterWorkerHostArray and ClusterWorkerHostArrayOutput values.
// You can construct a concrete instance of `ClusterWorkerHostArrayInput` via:
//
//          ClusterWorkerHostArray{ ClusterWorkerHostArgs{...} }
type ClusterWorkerHostArrayInput interface {
	pulumi.Input

	ToClusterWorkerHostArrayOutput() ClusterWorkerHostArrayOutput
	ToClusterWorkerHostArrayOutputWithContext(context.Context) ClusterWorkerHostArrayOutput
}

type ClusterWorkerHostArray []ClusterWorkerHostInput

func (ClusterWorkerHostArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterWorkerHost)(nil)).Elem()
}

func (i ClusterWorkerHostArray) ToClusterWorkerHostArrayOutput() ClusterWorkerHostArrayOutput {
	return i.ToClusterWorkerHostArrayOutputWithContext(context.Background())
}

func (i ClusterWorkerHostArray) ToClusterWorkerHostArrayOutputWithContext(ctx context.Context) ClusterWorkerHostArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterWorkerHostArrayOutput)
}

type ClusterWorkerHostOutput struct{ *pulumi.OutputState }

func (ClusterWorkerHostOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterWorkerHost)(nil)).Elem()
}

func (o ClusterWorkerHostOutput) ToClusterWorkerHostOutput() ClusterWorkerHostOutput {
	return o
}

func (o ClusterWorkerHostOutput) ToClusterWorkerHostOutputWithContext(ctx context.Context) ClusterWorkerHostOutput {
	return o
}

// Address ip for node (string)
func (o ClusterWorkerHostOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerHost) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Name of the host provisioned via docker machine (string)
func (o ClusterWorkerHostOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterWorkerHost) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

type ClusterWorkerHostArrayOutput struct{ *pulumi.OutputState }

func (ClusterWorkerHostArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterWorkerHost)(nil)).Elem()
}

func (o ClusterWorkerHostArrayOutput) ToClusterWorkerHostArrayOutput() ClusterWorkerHostArrayOutput {
	return o
}

func (o ClusterWorkerHostArrayOutput) ToClusterWorkerHostArrayOutputWithContext(ctx context.Context) ClusterWorkerHostArrayOutput {
	return o
}

func (o ClusterWorkerHostArrayOutput) Index(i pulumi.IntInput) ClusterWorkerHostOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterWorkerHost {
		return vs[0].([]ClusterWorkerHost)[vs[1].(int)]
	}).(ClusterWorkerHostOutput)
}

func init() {
	pulumi.RegisterOutputType(ClusterAuthenticationOutput{})
	pulumi.RegisterOutputType(ClusterAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ClusterAuthenticationWebhookOutput{})
	pulumi.RegisterOutputType(ClusterAuthenticationWebhookPtrOutput{})
	pulumi.RegisterOutputType(ClusterAuthorizationOutput{})
	pulumi.RegisterOutputType(ClusterAuthorizationPtrOutput{})
	pulumi.RegisterOutputType(ClusterBastionHostOutput{})
	pulumi.RegisterOutputType(ClusterBastionHostPtrOutput{})
	pulumi.RegisterOutputType(ClusterCertificateOutput{})
	pulumi.RegisterOutputType(ClusterCertificateArrayOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderAwsCloudConfigOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderAwsCloudConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderAwsCloudConfigGlobalOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderAwsCloudConfigGlobalPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderAwsCloudConfigServiceOverrideOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderAwsCloudConfigServiceOverrideArrayOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderAwsCloudProviderOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderAwsCloudProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderAwsCloudProviderGlobalOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderAwsCloudProviderGlobalPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderAwsCloudProviderServiceOverrideOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderAwsCloudProviderServiceOverrideArrayOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderAzureCloudConfigOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderAzureCloudConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderAzureCloudProviderOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderAzureCloudProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudConfigOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudConfigBlockStorageOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudConfigBlockStoragePtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudConfigGlobalOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudConfigGlobalPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudConfigLoadBalancerOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudConfigLoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudConfigMetadataOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudConfigMetadataPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudConfigRouteOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudConfigRoutePtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudProviderOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudProviderBlockStorageOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudProviderBlockStoragePtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudProviderGlobalOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudProviderGlobalPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudProviderLoadBalancerOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudProviderLoadBalancerPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudProviderMetadataOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudProviderMetadataPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudProviderRouteOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderOpenstackCloudProviderRoutePtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudConfigOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudConfigDiskOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudConfigDiskPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudConfigGlobalOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudConfigGlobalPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudConfigNetworkOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudConfigNetworkPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudConfigVirtualCenterOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudConfigVirtualCenterArrayOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudConfigWorkspaceOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudConfigWorkspacePtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudProviderOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudProviderDiskOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudProviderDiskPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudProviderGlobalOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudProviderGlobalPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudProviderNetworkOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudProviderNetworkPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudProviderVirtualCenterOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudProviderVirtualCenterArrayOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudProviderWorkspaceOutput{})
	pulumi.RegisterOutputType(ClusterCloudProviderVsphereCloudProviderWorkspacePtrOutput{})
	pulumi.RegisterOutputType(ClusterControlPlaneHostOutput{})
	pulumi.RegisterOutputType(ClusterControlPlaneHostArrayOutput{})
	pulumi.RegisterOutputType(ClusterDnsOutput{})
	pulumi.RegisterOutputType(ClusterDnsPtrOutput{})
	pulumi.RegisterOutputType(ClusterDnsNodelocalOutput{})
	pulumi.RegisterOutputType(ClusterDnsNodelocalPtrOutput{})
	pulumi.RegisterOutputType(ClusterEtcdHostOutput{})
	pulumi.RegisterOutputType(ClusterEtcdHostArrayOutput{})
	pulumi.RegisterOutputType(ClusterInactiveHostOutput{})
	pulumi.RegisterOutputType(ClusterInactiveHostArrayOutput{})
	pulumi.RegisterOutputType(ClusterIngressOutput{})
	pulumi.RegisterOutputType(ClusterIngressPtrOutput{})
	pulumi.RegisterOutputType(ClusterMonitoringOutput{})
	pulumi.RegisterOutputType(ClusterMonitoringPtrOutput{})
	pulumi.RegisterOutputType(ClusterNetworkOutput{})
	pulumi.RegisterOutputType(ClusterNetworkPtrOutput{})
	pulumi.RegisterOutputType(ClusterNetworkAciNetworkProviderOutput{})
	pulumi.RegisterOutputType(ClusterNetworkAciNetworkProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterNetworkCalicoNetworkProviderOutput{})
	pulumi.RegisterOutputType(ClusterNetworkCalicoNetworkProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterNetworkCanalNetworkProviderOutput{})
	pulumi.RegisterOutputType(ClusterNetworkCanalNetworkProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterNetworkFlannelNetworkProviderOutput{})
	pulumi.RegisterOutputType(ClusterNetworkFlannelNetworkProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterNetworkWeaveNetworkProviderOutput{})
	pulumi.RegisterOutputType(ClusterNetworkWeaveNetworkProviderPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeOutput{})
	pulumi.RegisterOutputType(ClusterNodeArrayOutput{})
	pulumi.RegisterOutputType(ClusterNodeTaintOutput{})
	pulumi.RegisterOutputType(ClusterNodeTaintArrayOutput{})
	pulumi.RegisterOutputType(ClusterPrivateRegistryOutput{})
	pulumi.RegisterOutputType(ClusterPrivateRegistryArrayOutput{})
	pulumi.RegisterOutputType(ClusterRestoreOutput{})
	pulumi.RegisterOutputType(ClusterRestorePtrOutput{})
	pulumi.RegisterOutputType(ClusterRotateCertificatesOutput{})
	pulumi.RegisterOutputType(ClusterRotateCertificatesPtrOutput{})
	pulumi.RegisterOutputType(ClusterRunningSystemImagesOutput{})
	pulumi.RegisterOutputType(ClusterRunningSystemImagesPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesOutput{})
	pulumi.RegisterOutputType(ClusterServicesPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesEtcdOutput{})
	pulumi.RegisterOutputType(ClusterServicesEtcdPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesEtcdBackupConfigOutput{})
	pulumi.RegisterOutputType(ClusterServicesEtcdBackupConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesEtcdBackupConfigS3BackupConfigOutput{})
	pulumi.RegisterOutputType(ClusterServicesEtcdBackupConfigS3BackupConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesEtcdDeprecatedOutput{})
	pulumi.RegisterOutputType(ClusterServicesEtcdDeprecatedPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesEtcdDeprecatedBackupConfigOutput{})
	pulumi.RegisterOutputType(ClusterServicesEtcdDeprecatedBackupConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigOutput{})
	pulumi.RegisterOutputType(ClusterServicesEtcdDeprecatedBackupConfigS3BackupConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiAuditLogOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiAuditLogPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiAuditLogConfigurationOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiAuditLogConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiDeprecatedOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiDeprecatedPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiDeprecatedAuditLogOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiDeprecatedAuditLogPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiDeprecatedAuditLogConfigurationOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiDeprecatedAuditLogConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiDeprecatedEventRateLimitOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiDeprecatedEventRateLimitPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiDeprecatedSecretsEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiEventRateLimitOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiEventRateLimitPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiSecretsEncryptionConfigOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeApiSecretsEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeControllerOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeControllerPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeControllerDeprecatedOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeControllerDeprecatedPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeProxyDeprecatedOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeProxyDeprecatedPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeSchedulerDeprecatedOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeSchedulerDeprecatedPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeletOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeletPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeletDeprecatedOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeletDeprecatedPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeproxyOutput{})
	pulumi.RegisterOutputType(ClusterServicesKubeproxyPtrOutput{})
	pulumi.RegisterOutputType(ClusterServicesSchedulerOutput{})
	pulumi.RegisterOutputType(ClusterServicesSchedulerPtrOutput{})
	pulumi.RegisterOutputType(ClusterSystemImagesOutput{})
	pulumi.RegisterOutputType(ClusterSystemImagesPtrOutput{})
	pulumi.RegisterOutputType(ClusterUpgradeStrategyOutput{})
	pulumi.RegisterOutputType(ClusterUpgradeStrategyPtrOutput{})
	pulumi.RegisterOutputType(ClusterUpgradeStrategyDrainInputOutput{})
	pulumi.RegisterOutputType(ClusterUpgradeStrategyDrainInputPtrOutput{})
	pulumi.RegisterOutputType(ClusterWorkerHostOutput{})
	pulumi.RegisterOutputType(ClusterWorkerHostArrayOutput{})
}
