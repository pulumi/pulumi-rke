// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rke;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderArgs Empty = new ProviderArgs();

    @Import(name="debug", json=true)
    private @Nullable Output<Boolean> debug;

    public Optional<Output<Boolean>> debug() {
        return Optional.ofNullable(this.debug);
    }

    @Import(name="logFile")
    private @Nullable Output<String> logFile;

    public Optional<Output<String>> logFile() {
        return Optional.ofNullable(this.logFile);
    }

    private ProviderArgs() {}

    private ProviderArgs(ProviderArgs $) {
        this.debug = $.debug;
        this.logFile = $.logFile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderArgs $;

        public Builder() {
            $ = new ProviderArgs();
        }

        public Builder(ProviderArgs defaults) {
            $ = new ProviderArgs(Objects.requireNonNull(defaults));
        }

        public Builder debug(@Nullable Output<Boolean> debug) {
            $.debug = debug;
            return this;
        }

        public Builder debug(Boolean debug) {
            return debug(Output.of(debug));
        }

        public Builder logFile(@Nullable Output<String> logFile) {
            $.logFile = logFile;
            return this;
        }

        public Builder logFile(String logFile) {
            return logFile(Output.of(logFile));
        }

        public ProviderArgs build() {
            $.debug = Codegen.booleanProp("debug").output().arg($.debug).env("RKE_DEBUG").def(false).getNullable();
            $.logFile = Codegen.stringProp("logFile").output().arg($.logFile).env("RKE_LOG_FILE").getNullable();
            return $;
        }
    }

}
