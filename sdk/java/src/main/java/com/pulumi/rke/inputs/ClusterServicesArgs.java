// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rke.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.rke.inputs.ClusterServicesEtcdArgs;
import com.pulumi.rke.inputs.ClusterServicesKubeApiArgs;
import com.pulumi.rke.inputs.ClusterServicesKubeControllerArgs;
import com.pulumi.rke.inputs.ClusterServicesKubeletArgs;
import com.pulumi.rke.inputs.ClusterServicesKubeproxyArgs;
import com.pulumi.rke.inputs.ClusterServicesSchedulerArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterServicesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterServicesArgs Empty = new ClusterServicesArgs();

    @Import(name="etcd")
    private @Nullable Output<ClusterServicesEtcdArgs> etcd;

    public Optional<Output<ClusterServicesEtcdArgs>> etcd() {
        return Optional.ofNullable(this.etcd);
    }

    @Import(name="kubeApi")
    private @Nullable Output<ClusterServicesKubeApiArgs> kubeApi;

    public Optional<Output<ClusterServicesKubeApiArgs>> kubeApi() {
        return Optional.ofNullable(this.kubeApi);
    }

    @Import(name="kubeController")
    private @Nullable Output<ClusterServicesKubeControllerArgs> kubeController;

    public Optional<Output<ClusterServicesKubeControllerArgs>> kubeController() {
        return Optional.ofNullable(this.kubeController);
    }

    @Import(name="kubelet")
    private @Nullable Output<ClusterServicesKubeletArgs> kubelet;

    public Optional<Output<ClusterServicesKubeletArgs>> kubelet() {
        return Optional.ofNullable(this.kubelet);
    }

    @Import(name="kubeproxy")
    private @Nullable Output<ClusterServicesKubeproxyArgs> kubeproxy;

    public Optional<Output<ClusterServicesKubeproxyArgs>> kubeproxy() {
        return Optional.ofNullable(this.kubeproxy);
    }

    @Import(name="scheduler")
    private @Nullable Output<ClusterServicesSchedulerArgs> scheduler;

    public Optional<Output<ClusterServicesSchedulerArgs>> scheduler() {
        return Optional.ofNullable(this.scheduler);
    }

    private ClusterServicesArgs() {}

    private ClusterServicesArgs(ClusterServicesArgs $) {
        this.etcd = $.etcd;
        this.kubeApi = $.kubeApi;
        this.kubeController = $.kubeController;
        this.kubelet = $.kubelet;
        this.kubeproxy = $.kubeproxy;
        this.scheduler = $.scheduler;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterServicesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterServicesArgs $;

        public Builder() {
            $ = new ClusterServicesArgs();
        }

        public Builder(ClusterServicesArgs defaults) {
            $ = new ClusterServicesArgs(Objects.requireNonNull(defaults));
        }

        public Builder etcd(@Nullable Output<ClusterServicesEtcdArgs> etcd) {
            $.etcd = etcd;
            return this;
        }

        public Builder etcd(ClusterServicesEtcdArgs etcd) {
            return etcd(Output.of(etcd));
        }

        public Builder kubeApi(@Nullable Output<ClusterServicesKubeApiArgs> kubeApi) {
            $.kubeApi = kubeApi;
            return this;
        }

        public Builder kubeApi(ClusterServicesKubeApiArgs kubeApi) {
            return kubeApi(Output.of(kubeApi));
        }

        public Builder kubeController(@Nullable Output<ClusterServicesKubeControllerArgs> kubeController) {
            $.kubeController = kubeController;
            return this;
        }

        public Builder kubeController(ClusterServicesKubeControllerArgs kubeController) {
            return kubeController(Output.of(kubeController));
        }

        public Builder kubelet(@Nullable Output<ClusterServicesKubeletArgs> kubelet) {
            $.kubelet = kubelet;
            return this;
        }

        public Builder kubelet(ClusterServicesKubeletArgs kubelet) {
            return kubelet(Output.of(kubelet));
        }

        public Builder kubeproxy(@Nullable Output<ClusterServicesKubeproxyArgs> kubeproxy) {
            $.kubeproxy = kubeproxy;
            return this;
        }

        public Builder kubeproxy(ClusterServicesKubeproxyArgs kubeproxy) {
            return kubeproxy(Output.of(kubeproxy));
        }

        public Builder scheduler(@Nullable Output<ClusterServicesSchedulerArgs> scheduler) {
            $.scheduler = scheduler;
            return this;
        }

        public Builder scheduler(ClusterServicesSchedulerArgs scheduler) {
            return scheduler(Output.of(scheduler));
        }

        public ClusterServicesArgs build() {
            return $;
        }
    }

}
