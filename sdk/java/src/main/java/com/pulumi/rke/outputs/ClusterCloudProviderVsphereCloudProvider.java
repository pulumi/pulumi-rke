// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rke.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.rke.outputs.ClusterCloudProviderVsphereCloudProviderDisk;
import com.pulumi.rke.outputs.ClusterCloudProviderVsphereCloudProviderGlobal;
import com.pulumi.rke.outputs.ClusterCloudProviderVsphereCloudProviderNetwork;
import com.pulumi.rke.outputs.ClusterCloudProviderVsphereCloudProviderVirtualCenter;
import com.pulumi.rke.outputs.ClusterCloudProviderVsphereCloudProviderWorkspace;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterCloudProviderVsphereCloudProvider {
    /**
     * @return (list maxitems:1)
     * 
     */
    private @Nullable ClusterCloudProviderVsphereCloudProviderDisk disk;
    /**
     * @return (list maxitems:1)
     * 
     */
    private @Nullable ClusterCloudProviderVsphereCloudProviderGlobal global;
    /**
     * @return RKE k8s cluster network configuration (list maxitems:1)
     * 
     */
    private @Nullable ClusterCloudProviderVsphereCloudProviderNetwork network;
    /**
     * @return (List)
     * 
     */
    private List<ClusterCloudProviderVsphereCloudProviderVirtualCenter> virtualCenters;
    /**
     * @return (list maxitems:1)
     * 
     */
    private ClusterCloudProviderVsphereCloudProviderWorkspace workspace;

    private ClusterCloudProviderVsphereCloudProvider() {}
    /**
     * @return (list maxitems:1)
     * 
     */
    public Optional<ClusterCloudProviderVsphereCloudProviderDisk> disk() {
        return Optional.ofNullable(this.disk);
    }
    /**
     * @return (list maxitems:1)
     * 
     */
    public Optional<ClusterCloudProviderVsphereCloudProviderGlobal> global() {
        return Optional.ofNullable(this.global);
    }
    /**
     * @return RKE k8s cluster network configuration (list maxitems:1)
     * 
     */
    public Optional<ClusterCloudProviderVsphereCloudProviderNetwork> network() {
        return Optional.ofNullable(this.network);
    }
    /**
     * @return (List)
     * 
     */
    public List<ClusterCloudProviderVsphereCloudProviderVirtualCenter> virtualCenters() {
        return this.virtualCenters;
    }
    /**
     * @return (list maxitems:1)
     * 
     */
    public ClusterCloudProviderVsphereCloudProviderWorkspace workspace() {
        return this.workspace;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterCloudProviderVsphereCloudProvider defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ClusterCloudProviderVsphereCloudProviderDisk disk;
        private @Nullable ClusterCloudProviderVsphereCloudProviderGlobal global;
        private @Nullable ClusterCloudProviderVsphereCloudProviderNetwork network;
        private List<ClusterCloudProviderVsphereCloudProviderVirtualCenter> virtualCenters;
        private ClusterCloudProviderVsphereCloudProviderWorkspace workspace;
        public Builder() {}
        public Builder(ClusterCloudProviderVsphereCloudProvider defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disk = defaults.disk;
    	      this.global = defaults.global;
    	      this.network = defaults.network;
    	      this.virtualCenters = defaults.virtualCenters;
    	      this.workspace = defaults.workspace;
        }

        @CustomType.Setter
        public Builder disk(@Nullable ClusterCloudProviderVsphereCloudProviderDisk disk) {

            this.disk = disk;
            return this;
        }
        @CustomType.Setter
        public Builder global(@Nullable ClusterCloudProviderVsphereCloudProviderGlobal global) {

            this.global = global;
            return this;
        }
        @CustomType.Setter
        public Builder network(@Nullable ClusterCloudProviderVsphereCloudProviderNetwork network) {

            this.network = network;
            return this;
        }
        @CustomType.Setter
        public Builder virtualCenters(List<ClusterCloudProviderVsphereCloudProviderVirtualCenter> virtualCenters) {
            if (virtualCenters == null) {
              throw new MissingRequiredPropertyException("ClusterCloudProviderVsphereCloudProvider", "virtualCenters");
            }
            this.virtualCenters = virtualCenters;
            return this;
        }
        public Builder virtualCenters(ClusterCloudProviderVsphereCloudProviderVirtualCenter... virtualCenters) {
            return virtualCenters(List.of(virtualCenters));
        }
        @CustomType.Setter
        public Builder workspace(ClusterCloudProviderVsphereCloudProviderWorkspace workspace) {
            if (workspace == null) {
              throw new MissingRequiredPropertyException("ClusterCloudProviderVsphereCloudProvider", "workspace");
            }
            this.workspace = workspace;
            return this;
        }
        public ClusterCloudProviderVsphereCloudProvider build() {
            final var _resultValue = new ClusterCloudProviderVsphereCloudProvider();
            _resultValue.disk = disk;
            _resultValue.global = global;
            _resultValue.network = network;
            _resultValue.virtualCenters = virtualCenters;
            _resultValue.workspace = workspace;
            return _resultValue;
        }
    }
}
