// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rke.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterNetworkAciNetworkProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterNetworkAciNetworkProviderArgs Empty = new ClusterNetworkAciNetworkProviderArgs();

    @Import(name="aep", required=true)
    private Output<String> aep;

    public Output<String> aep() {
        return this.aep;
    }

    @Import(name="apicHosts", required=true)
    private Output<List<String>> apicHosts;

    public Output<List<String>> apicHosts() {
        return this.apicHosts;
    }

    @Import(name="apicUserCrt", required=true)
    private Output<String> apicUserCrt;

    public Output<String> apicUserCrt() {
        return this.apicUserCrt;
    }

    @Import(name="apicUserKey", required=true)
    private Output<String> apicUserKey;

    public Output<String> apicUserKey() {
        return this.apicUserKey;
    }

    @Import(name="apicUserName", required=true)
    private Output<String> apicUserName;

    public Output<String> apicUserName() {
        return this.apicUserName;
    }

    @Import(name="encapType", required=true)
    private Output<String> encapType;

    public Output<String> encapType() {
        return this.encapType;
    }

    @Import(name="externDynamic", required=true)
    private Output<String> externDynamic;

    public Output<String> externDynamic() {
        return this.externDynamic;
    }

    @Import(name="externStatic", required=true)
    private Output<String> externStatic;

    public Output<String> externStatic() {
        return this.externStatic;
    }

    @Import(name="infraVlan", required=true)
    private Output<String> infraVlan;

    public Output<String> infraVlan() {
        return this.infraVlan;
    }

    @Import(name="kubeApiVlan", required=true)
    private Output<String> kubeApiVlan;

    public Output<String> kubeApiVlan() {
        return this.kubeApiVlan;
    }

    @Import(name="l3out", required=true)
    private Output<String> l3out;

    public Output<String> l3out() {
        return this.l3out;
    }

    @Import(name="l3outExternalNetworks", required=true)
    private Output<List<String>> l3outExternalNetworks;

    public Output<List<String>> l3outExternalNetworks() {
        return this.l3outExternalNetworks;
    }

    @Import(name="mcastRangeEnd", required=true)
    private Output<String> mcastRangeEnd;

    public Output<String> mcastRangeEnd() {
        return this.mcastRangeEnd;
    }

    @Import(name="mcastRangeStart", required=true)
    private Output<String> mcastRangeStart;

    public Output<String> mcastRangeStart() {
        return this.mcastRangeStart;
    }

    @Import(name="nodeSubnet", required=true)
    private Output<String> nodeSubnet;

    public Output<String> nodeSubnet() {
        return this.nodeSubnet;
    }

    @Import(name="nodeSvcSubnet", required=true)
    private Output<String> nodeSvcSubnet;

    public Output<String> nodeSvcSubnet() {
        return this.nodeSvcSubnet;
    }

    @Import(name="serviceVlan", required=true)
    private Output<String> serviceVlan;

    public Output<String> serviceVlan() {
        return this.serviceVlan;
    }

    @Import(name="snatPortRangeEnd")
    private @Nullable Output<String> snatPortRangeEnd;

    public Optional<Output<String>> snatPortRangeEnd() {
        return Optional.ofNullable(this.snatPortRangeEnd);
    }

    @Import(name="snatPortRangeStart")
    private @Nullable Output<String> snatPortRangeStart;

    public Optional<Output<String>> snatPortRangeStart() {
        return Optional.ofNullable(this.snatPortRangeStart);
    }

    @Import(name="snatPortsPerNode")
    private @Nullable Output<String> snatPortsPerNode;

    public Optional<Output<String>> snatPortsPerNode() {
        return Optional.ofNullable(this.snatPortsPerNode);
    }

    @Import(name="systemId", required=true)
    private Output<String> systemId;

    public Output<String> systemId() {
        return this.systemId;
    }

    @Import(name="token", required=true)
    private Output<String> token;

    public Output<String> token() {
        return this.token;
    }

    @Import(name="vrfName", required=true)
    private Output<String> vrfName;

    public Output<String> vrfName() {
        return this.vrfName;
    }

    @Import(name="vrfTenant", required=true)
    private Output<String> vrfTenant;

    public Output<String> vrfTenant() {
        return this.vrfTenant;
    }

    private ClusterNetworkAciNetworkProviderArgs() {}

    private ClusterNetworkAciNetworkProviderArgs(ClusterNetworkAciNetworkProviderArgs $) {
        this.aep = $.aep;
        this.apicHosts = $.apicHosts;
        this.apicUserCrt = $.apicUserCrt;
        this.apicUserKey = $.apicUserKey;
        this.apicUserName = $.apicUserName;
        this.encapType = $.encapType;
        this.externDynamic = $.externDynamic;
        this.externStatic = $.externStatic;
        this.infraVlan = $.infraVlan;
        this.kubeApiVlan = $.kubeApiVlan;
        this.l3out = $.l3out;
        this.l3outExternalNetworks = $.l3outExternalNetworks;
        this.mcastRangeEnd = $.mcastRangeEnd;
        this.mcastRangeStart = $.mcastRangeStart;
        this.nodeSubnet = $.nodeSubnet;
        this.nodeSvcSubnet = $.nodeSvcSubnet;
        this.serviceVlan = $.serviceVlan;
        this.snatPortRangeEnd = $.snatPortRangeEnd;
        this.snatPortRangeStart = $.snatPortRangeStart;
        this.snatPortsPerNode = $.snatPortsPerNode;
        this.systemId = $.systemId;
        this.token = $.token;
        this.vrfName = $.vrfName;
        this.vrfTenant = $.vrfTenant;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterNetworkAciNetworkProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterNetworkAciNetworkProviderArgs $;

        public Builder() {
            $ = new ClusterNetworkAciNetworkProviderArgs();
        }

        public Builder(ClusterNetworkAciNetworkProviderArgs defaults) {
            $ = new ClusterNetworkAciNetworkProviderArgs(Objects.requireNonNull(defaults));
        }

        public Builder aep(Output<String> aep) {
            $.aep = aep;
            return this;
        }

        public Builder aep(String aep) {
            return aep(Output.of(aep));
        }

        public Builder apicHosts(Output<List<String>> apicHosts) {
            $.apicHosts = apicHosts;
            return this;
        }

        public Builder apicHosts(List<String> apicHosts) {
            return apicHosts(Output.of(apicHosts));
        }

        public Builder apicHosts(String... apicHosts) {
            return apicHosts(List.of(apicHosts));
        }

        public Builder apicUserCrt(Output<String> apicUserCrt) {
            $.apicUserCrt = apicUserCrt;
            return this;
        }

        public Builder apicUserCrt(String apicUserCrt) {
            return apicUserCrt(Output.of(apicUserCrt));
        }

        public Builder apicUserKey(Output<String> apicUserKey) {
            $.apicUserKey = apicUserKey;
            return this;
        }

        public Builder apicUserKey(String apicUserKey) {
            return apicUserKey(Output.of(apicUserKey));
        }

        public Builder apicUserName(Output<String> apicUserName) {
            $.apicUserName = apicUserName;
            return this;
        }

        public Builder apicUserName(String apicUserName) {
            return apicUserName(Output.of(apicUserName));
        }

        public Builder encapType(Output<String> encapType) {
            $.encapType = encapType;
            return this;
        }

        public Builder encapType(String encapType) {
            return encapType(Output.of(encapType));
        }

        public Builder externDynamic(Output<String> externDynamic) {
            $.externDynamic = externDynamic;
            return this;
        }

        public Builder externDynamic(String externDynamic) {
            return externDynamic(Output.of(externDynamic));
        }

        public Builder externStatic(Output<String> externStatic) {
            $.externStatic = externStatic;
            return this;
        }

        public Builder externStatic(String externStatic) {
            return externStatic(Output.of(externStatic));
        }

        public Builder infraVlan(Output<String> infraVlan) {
            $.infraVlan = infraVlan;
            return this;
        }

        public Builder infraVlan(String infraVlan) {
            return infraVlan(Output.of(infraVlan));
        }

        public Builder kubeApiVlan(Output<String> kubeApiVlan) {
            $.kubeApiVlan = kubeApiVlan;
            return this;
        }

        public Builder kubeApiVlan(String kubeApiVlan) {
            return kubeApiVlan(Output.of(kubeApiVlan));
        }

        public Builder l3out(Output<String> l3out) {
            $.l3out = l3out;
            return this;
        }

        public Builder l3out(String l3out) {
            return l3out(Output.of(l3out));
        }

        public Builder l3outExternalNetworks(Output<List<String>> l3outExternalNetworks) {
            $.l3outExternalNetworks = l3outExternalNetworks;
            return this;
        }

        public Builder l3outExternalNetworks(List<String> l3outExternalNetworks) {
            return l3outExternalNetworks(Output.of(l3outExternalNetworks));
        }

        public Builder l3outExternalNetworks(String... l3outExternalNetworks) {
            return l3outExternalNetworks(List.of(l3outExternalNetworks));
        }

        public Builder mcastRangeEnd(Output<String> mcastRangeEnd) {
            $.mcastRangeEnd = mcastRangeEnd;
            return this;
        }

        public Builder mcastRangeEnd(String mcastRangeEnd) {
            return mcastRangeEnd(Output.of(mcastRangeEnd));
        }

        public Builder mcastRangeStart(Output<String> mcastRangeStart) {
            $.mcastRangeStart = mcastRangeStart;
            return this;
        }

        public Builder mcastRangeStart(String mcastRangeStart) {
            return mcastRangeStart(Output.of(mcastRangeStart));
        }

        public Builder nodeSubnet(Output<String> nodeSubnet) {
            $.nodeSubnet = nodeSubnet;
            return this;
        }

        public Builder nodeSubnet(String nodeSubnet) {
            return nodeSubnet(Output.of(nodeSubnet));
        }

        public Builder nodeSvcSubnet(Output<String> nodeSvcSubnet) {
            $.nodeSvcSubnet = nodeSvcSubnet;
            return this;
        }

        public Builder nodeSvcSubnet(String nodeSvcSubnet) {
            return nodeSvcSubnet(Output.of(nodeSvcSubnet));
        }

        public Builder serviceVlan(Output<String> serviceVlan) {
            $.serviceVlan = serviceVlan;
            return this;
        }

        public Builder serviceVlan(String serviceVlan) {
            return serviceVlan(Output.of(serviceVlan));
        }

        public Builder snatPortRangeEnd(@Nullable Output<String> snatPortRangeEnd) {
            $.snatPortRangeEnd = snatPortRangeEnd;
            return this;
        }

        public Builder snatPortRangeEnd(String snatPortRangeEnd) {
            return snatPortRangeEnd(Output.of(snatPortRangeEnd));
        }

        public Builder snatPortRangeStart(@Nullable Output<String> snatPortRangeStart) {
            $.snatPortRangeStart = snatPortRangeStart;
            return this;
        }

        public Builder snatPortRangeStart(String snatPortRangeStart) {
            return snatPortRangeStart(Output.of(snatPortRangeStart));
        }

        public Builder snatPortsPerNode(@Nullable Output<String> snatPortsPerNode) {
            $.snatPortsPerNode = snatPortsPerNode;
            return this;
        }

        public Builder snatPortsPerNode(String snatPortsPerNode) {
            return snatPortsPerNode(Output.of(snatPortsPerNode));
        }

        public Builder systemId(Output<String> systemId) {
            $.systemId = systemId;
            return this;
        }

        public Builder systemId(String systemId) {
            return systemId(Output.of(systemId));
        }

        public Builder token(Output<String> token) {
            $.token = token;
            return this;
        }

        public Builder token(String token) {
            return token(Output.of(token));
        }

        public Builder vrfName(Output<String> vrfName) {
            $.vrfName = vrfName;
            return this;
        }

        public Builder vrfName(String vrfName) {
            return vrfName(Output.of(vrfName));
        }

        public Builder vrfTenant(Output<String> vrfTenant) {
            $.vrfTenant = vrfTenant;
            return this;
        }

        public Builder vrfTenant(String vrfTenant) {
            return vrfTenant(Output.of(vrfTenant));
        }

        public ClusterNetworkAciNetworkProviderArgs build() {
            if ($.aep == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "aep");
            }
            if ($.apicHosts == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "apicHosts");
            }
            if ($.apicUserCrt == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "apicUserCrt");
            }
            if ($.apicUserKey == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "apicUserKey");
            }
            if ($.apicUserName == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "apicUserName");
            }
            if ($.encapType == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "encapType");
            }
            if ($.externDynamic == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "externDynamic");
            }
            if ($.externStatic == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "externStatic");
            }
            if ($.infraVlan == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "infraVlan");
            }
            if ($.kubeApiVlan == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "kubeApiVlan");
            }
            if ($.l3out == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "l3out");
            }
            if ($.l3outExternalNetworks == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "l3outExternalNetworks");
            }
            if ($.mcastRangeEnd == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "mcastRangeEnd");
            }
            if ($.mcastRangeStart == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "mcastRangeStart");
            }
            if ($.nodeSubnet == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "nodeSubnet");
            }
            if ($.nodeSvcSubnet == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "nodeSvcSubnet");
            }
            if ($.serviceVlan == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "serviceVlan");
            }
            if ($.systemId == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "systemId");
            }
            if ($.token == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "token");
            }
            if ($.vrfName == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "vrfName");
            }
            if ($.vrfTenant == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkAciNetworkProviderArgs", "vrfTenant");
            }
            return $;
        }
    }

}
