// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.rke.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterCloudProviderVsphereCloudProviderGlobalArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterCloudProviderVsphereCloudProviderGlobalArgs Empty = new ClusterCloudProviderVsphereCloudProviderGlobalArgs();

    @Import(name="datacenter")
    private @Nullable Output<String> datacenter;

    public Optional<Output<String>> datacenter() {
        return Optional.ofNullable(this.datacenter);
    }

    @Import(name="datacenters")
    private @Nullable Output<String> datacenters;

    public Optional<Output<String>> datacenters() {
        return Optional.ofNullable(this.datacenters);
    }

    @Import(name="datastore")
    private @Nullable Output<String> datastore;

    public Optional<Output<String>> datastore() {
        return Optional.ofNullable(this.datastore);
    }

    @Import(name="insecureFlag")
    private @Nullable Output<Boolean> insecureFlag;

    public Optional<Output<Boolean>> insecureFlag() {
        return Optional.ofNullable(this.insecureFlag);
    }

    @Import(name="password")
    private @Nullable Output<String> password;

    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    @Import(name="port")
    private @Nullable Output<String> port;

    public Optional<Output<String>> port() {
        return Optional.ofNullable(this.port);
    }

    @Import(name="soapRoundtripCount")
    private @Nullable Output<Integer> soapRoundtripCount;

    public Optional<Output<Integer>> soapRoundtripCount() {
        return Optional.ofNullable(this.soapRoundtripCount);
    }

    @Import(name="user")
    private @Nullable Output<String> user;

    public Optional<Output<String>> user() {
        return Optional.ofNullable(this.user);
    }

    @Import(name="vmName")
    private @Nullable Output<String> vmName;

    public Optional<Output<String>> vmName() {
        return Optional.ofNullable(this.vmName);
    }

    @Import(name="vmUuid")
    private @Nullable Output<String> vmUuid;

    public Optional<Output<String>> vmUuid() {
        return Optional.ofNullable(this.vmUuid);
    }

    @Import(name="workingDir")
    private @Nullable Output<String> workingDir;

    public Optional<Output<String>> workingDir() {
        return Optional.ofNullable(this.workingDir);
    }

    private ClusterCloudProviderVsphereCloudProviderGlobalArgs() {}

    private ClusterCloudProviderVsphereCloudProviderGlobalArgs(ClusterCloudProviderVsphereCloudProviderGlobalArgs $) {
        this.datacenter = $.datacenter;
        this.datacenters = $.datacenters;
        this.datastore = $.datastore;
        this.insecureFlag = $.insecureFlag;
        this.password = $.password;
        this.port = $.port;
        this.soapRoundtripCount = $.soapRoundtripCount;
        this.user = $.user;
        this.vmName = $.vmName;
        this.vmUuid = $.vmUuid;
        this.workingDir = $.workingDir;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterCloudProviderVsphereCloudProviderGlobalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterCloudProviderVsphereCloudProviderGlobalArgs $;

        public Builder() {
            $ = new ClusterCloudProviderVsphereCloudProviderGlobalArgs();
        }

        public Builder(ClusterCloudProviderVsphereCloudProviderGlobalArgs defaults) {
            $ = new ClusterCloudProviderVsphereCloudProviderGlobalArgs(Objects.requireNonNull(defaults));
        }

        public Builder datacenter(@Nullable Output<String> datacenter) {
            $.datacenter = datacenter;
            return this;
        }

        public Builder datacenter(String datacenter) {
            return datacenter(Output.of(datacenter));
        }

        public Builder datacenters(@Nullable Output<String> datacenters) {
            $.datacenters = datacenters;
            return this;
        }

        public Builder datacenters(String datacenters) {
            return datacenters(Output.of(datacenters));
        }

        public Builder datastore(@Nullable Output<String> datastore) {
            $.datastore = datastore;
            return this;
        }

        public Builder datastore(String datastore) {
            return datastore(Output.of(datastore));
        }

        public Builder insecureFlag(@Nullable Output<Boolean> insecureFlag) {
            $.insecureFlag = insecureFlag;
            return this;
        }

        public Builder insecureFlag(Boolean insecureFlag) {
            return insecureFlag(Output.of(insecureFlag));
        }

        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder port(@Nullable Output<String> port) {
            $.port = port;
            return this;
        }

        public Builder port(String port) {
            return port(Output.of(port));
        }

        public Builder soapRoundtripCount(@Nullable Output<Integer> soapRoundtripCount) {
            $.soapRoundtripCount = soapRoundtripCount;
            return this;
        }

        public Builder soapRoundtripCount(Integer soapRoundtripCount) {
            return soapRoundtripCount(Output.of(soapRoundtripCount));
        }

        public Builder user(@Nullable Output<String> user) {
            $.user = user;
            return this;
        }

        public Builder user(String user) {
            return user(Output.of(user));
        }

        public Builder vmName(@Nullable Output<String> vmName) {
            $.vmName = vmName;
            return this;
        }

        public Builder vmName(String vmName) {
            return vmName(Output.of(vmName));
        }

        public Builder vmUuid(@Nullable Output<String> vmUuid) {
            $.vmUuid = vmUuid;
            return this;
        }

        public Builder vmUuid(String vmUuid) {
            return vmUuid(Output.of(vmUuid));
        }

        public Builder workingDir(@Nullable Output<String> workingDir) {
            $.workingDir = workingDir;
            return this;
        }

        public Builder workingDir(String workingDir) {
            return workingDir(Output.of(workingDir));
        }

        public ClusterCloudProviderVsphereCloudProviderGlobalArgs build() {
            return $;
        }
    }

}
