// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rke.Inputs
{

    public sealed class ClusterCloudProviderAzureCloudConfigGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("aadClientCertPassword")]
        private Input<string>? _aadClientCertPassword;

        /// <summary>
        /// The password of the client certificate for an AAD application with RBAC access to talk to Azure RM APIs
        /// </summary>
        public Input<string>? AadClientCertPassword
        {
            get => _aadClientCertPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _aadClientCertPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The path of a client certificate for an AAD application with RBAC access to talk to Azure RM APIs
        /// </summary>
        [Input("aadClientCertPath")]
        public Input<string>? AadClientCertPath { get; set; }

        [Input("aadClientId", required: true)]
        private Input<string>? _aadClientId;

        /// <summary>
        /// The ClientID for an AAD application with RBAC access to talk to Azure RM APIs
        /// </summary>
        public Input<string>? AadClientId
        {
            get => _aadClientId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _aadClientId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("aadClientSecret", required: true)]
        private Input<string>? _aadClientSecret;

        /// <summary>
        /// The ClientSecret for an AAD application with RBAC access to talk to Azure RM APIs
        /// </summary>
        public Input<string>? AadClientSecret
        {
            get => _aadClientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _aadClientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The cloud environment identifier. Takes values from https://github.com/Azure/go-autorest/blob/ec5f4903f77ed9927ac95b19ab8e44ada64c1356/autorest/azure/environments.go#L13
        /// </summary>
        [Input("cloud")]
        public Input<string>? Cloud { get; set; }

        /// <summary>
        /// Enable exponential backoff to manage resource request retries
        /// </summary>
        [Input("cloudProviderBackoff")]
        public Input<bool>? CloudProviderBackoff { get; set; }

        /// <summary>
        /// Backoff duration
        /// </summary>
        [Input("cloudProviderBackoffDuration")]
        public Input<int>? CloudProviderBackoffDuration { get; set; }

        /// <summary>
        /// Backoff exponent
        /// </summary>
        [Input("cloudProviderBackoffExponent")]
        public Input<int>? CloudProviderBackoffExponent { get; set; }

        /// <summary>
        /// Backoff jitter
        /// </summary>
        [Input("cloudProviderBackoffJitter")]
        public Input<int>? CloudProviderBackoffJitter { get; set; }

        /// <summary>
        /// Backoff retry limit
        /// </summary>
        [Input("cloudProviderBackoffRetries")]
        public Input<int>? CloudProviderBackoffRetries { get; set; }

        /// <summary>
        /// Enable rate limiting
        /// </summary>
        [Input("cloudProviderRateLimit")]
        public Input<bool>? CloudProviderRateLimit { get; set; }

        [Input("cloudProviderRateLimitBucket")]
        public Input<int>? CloudProviderRateLimitBucket { get; set; }

        /// <summary>
        /// Rate limit QPS
        /// </summary>
        [Input("cloudProviderRateLimitQps")]
        public Input<int>? CloudProviderRateLimitQps { get; set; }

        /// <summary>
        /// Load balancer type (basic | standard). Must be standard for auto-scaling
        /// </summary>
        [Input("loadBalancerSku")]
        public Input<string>? LoadBalancerSku { get; set; }

        /// <summary>
        /// The location of the resource group that the cluster is deployed in
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Maximum allowed LoadBalancer Rule Count is the limit enforced by Azure Load balancer
        /// </summary>
        [Input("maximumLoadBalancerRuleCount")]
        public Input<int>? MaximumLoadBalancerRuleCount { get; set; }

        /// <summary>
        /// The name of the availability set that should be used as the load balancer backendIf this is set, the Azure cloudprovider will only add nodes from that availability set to the loadbalancer backend pool. If this is not set, and multiple agent pools (availability sets) are used, thenthe cloudprovider will try to add all nodes to a single backend pool which is forbidden.In other words, if you use multiple agent pools (availability sets), you MUST set this field.
        /// </summary>
        [Input("primaryAvailabilitySetName")]
        public Input<string>? PrimaryAvailabilitySetName { get; set; }

        /// <summary>
        /// The name of the scale set that should be used as the load balancer backend.If this is set, the Azure cloudprovider will only add nodes from that scale set to the loadbalancer backend pool. If this is not set, and multiple agent pools (scale sets) are used, thenthe cloudprovider will try to add all nodes to a single backend pool which is forbidden.In other words, if you use multiple agent pools (scale sets), you MUST set this field.
        /// </summary>
        [Input("primaryScaleSetName")]
        public Input<string>? PrimaryScaleSetName { get; set; }

        /// <summary>
        /// The name of the resource group that the cluster is deployed in
        /// </summary>
        [Input("resourceGroup")]
        public Input<string>? ResourceGroup { get; set; }

        /// <summary>
        /// (Optional in 1.6) The name of the route table attached to the subnet that the cluster is deployed in
        /// </summary>
        [Input("routeTableName")]
        public Input<string>? RouteTableName { get; set; }

        /// <summary>
        /// The name of the security group attached to the cluster's subnet
        /// </summary>
        [Input("securityGroupName")]
        public Input<string>? SecurityGroupName { get; set; }

        /// <summary>
        /// The name of the Subnet that the cluster is deployed in
        /// </summary>
        [Input("subnetName")]
        public Input<string>? SubnetName { get; set; }

        [Input("subscriptionId", required: true)]
        private Input<string>? _subscriptionId;

        /// <summary>
        /// The ID of the Azure Subscription that the cluster is deployed in
        /// </summary>
        public Input<string>? SubscriptionId
        {
            get => _subscriptionId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _subscriptionId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("tenantId", required: true)]
        private Input<string>? _tenantId;

        /// <summary>
        /// The AAD Tenant ID for the Subscription that the cluster is deployed in
        /// </summary>
        public Input<string>? TenantId
        {
            get => _tenantId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tenantId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Use instance metadata service where possible
        /// </summary>
        [Input("useInstanceMetadata")]
        public Input<bool>? UseInstanceMetadata { get; set; }

        /// <summary>
        /// Use managed service identity for the virtual machine to access Azure ARM APIs
        /// </summary>
        [Input("useManagedIdentityExtension")]
        public Input<bool>? UseManagedIdentityExtension { get; set; }

        /// <summary>
        /// The type of azure nodes. If not set, it will be default to standard.
        /// </summary>
        [Input("vmType")]
        public Input<string>? VmType { get; set; }

        /// <summary>
        /// The name of the VNet that the cluster is deployed in
        /// </summary>
        [Input("vnetName")]
        public Input<string>? VnetName { get; set; }

        /// <summary>
        /// The name of the resource group that the Vnet is deployed in
        /// </summary>
        [Input("vnetResourceGroup")]
        public Input<string>? VnetResourceGroup { get; set; }

        public ClusterCloudProviderAzureCloudConfigGetArgs()
        {
        }
        public static new ClusterCloudProviderAzureCloudConfigGetArgs Empty => new ClusterCloudProviderAzureCloudConfigGetArgs();
    }
}
