// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rke.Inputs
{

    public sealed class ClusterCloudProviderVsphereCloudConfigGlobalGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenter")]
        public Input<string>? Datacenter { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("datacenters")]
        public Input<string>? Datacenters { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("datastore")]
        public Input<string>? Datastore { get; set; }

        /// <summary>
        /// (bool)
        /// </summary>
        [Input("insecureFlag")]
        public Input<bool>? InsecureFlag { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// (string)
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// SSH Port of Bastion Host. Default `22` (string)
        /// </summary>
        [Input("port")]
        public Input<string>? Port { get; set; }

        /// <summary>
        /// (int)
        /// </summary>
        [Input("soapRoundtripCount")]
        public Input<int>? SoapRoundtripCount { get; set; }

        [Input("user")]
        private Input<string>? _user;

        /// <summary>
        /// SSH User to Bastion Host (string)
        /// </summary>
        public Input<string>? User
        {
            get => _user;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _user = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vmName")]
        public Input<string>? VmName { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("vmUuid")]
        public Input<string>? VmUuid { get; set; }

        /// <summary>
        /// (string)
        /// </summary>
        [Input("workingDir")]
        public Input<string>? WorkingDir { get; set; }

        public ClusterCloudProviderVsphereCloudConfigGlobalGetArgs()
        {
        }
        public static new ClusterCloudProviderVsphereCloudConfigGlobalGetArgs Empty => new ClusterCloudProviderVsphereCloudConfigGlobalGetArgs();
    }
}
