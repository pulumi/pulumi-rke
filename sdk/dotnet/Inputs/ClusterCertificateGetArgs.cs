// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rke.Inputs
{

    public sealed class ClusterCertificateGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("certificate")]
        private Input<string>? _certificate;
        public Input<string>? Certificate
        {
            get => _certificate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _certificate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("commonName")]
        public Input<string>? CommonName { get; set; }

        [Input("config")]
        private Input<string>? _config;
        public Input<string>? Config
        {
            get => _config;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _config = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("configEnvName")]
        public Input<string>? ConfigEnvName { get; set; }

        [Input("configPath")]
        public Input<string>? ConfigPath { get; set; }

        [Input("envName")]
        public Input<string>? EnvName { get; set; }

        /// <summary>
        /// (Computed) The ID of the resource (string)
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("key")]
        private Input<string>? _key;

        /// <summary>
        /// TLS key for etcd service (string)
        /// </summary>
        public Input<string>? Key
        {
            get => _key;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _key = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("keyEnvName")]
        public Input<string>? KeyEnvName { get; set; }

        [Input("keyPath")]
        public Input<string>? KeyPath { get; set; }

        /// <summary>
        /// Name of virtualcenter config for Vsphere Cloud Provider config (string)
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ouName")]
        public Input<string>? OuName { get; set; }

        /// <summary>
        /// Audit log path. Default: `/var/log/kube-audit/audit-log.json` (string)
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        public ClusterCertificateGetArgs()
        {
        }
        public static new ClusterCertificateGetArgs Empty => new ClusterCertificateGetArgs();
    }
}
