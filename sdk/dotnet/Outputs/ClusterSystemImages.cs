// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rke.Outputs
{

    [OutputType]
    public sealed class ClusterSystemImages
    {
        /// <summary>
        /// Docker image for aci_cni_deploy_container (string)
        /// </summary>
        public readonly string? AciCniDeployContainer;
        /// <summary>
        /// Docker image for aci_controller_container (string)
        /// </summary>
        public readonly string? AciControllerContainer;
        /// <summary>
        /// Docker image for aci_host_container (string)
        /// </summary>
        public readonly string? AciHostContainer;
        /// <summary>
        /// Docker image for aci_mcast_container (string)
        /// </summary>
        public readonly string? AciMcastContainer;
        /// <summary>
        /// Docker image for aci_opflex_container (string)
        /// </summary>
        public readonly string? AciOpflexContainer;
        /// <summary>
        /// Docker image for aci_ovs_container (string)
        /// </summary>
        public readonly string? AciOvsContainer;
        /// <summary>
        /// Docker image for alpine (string)
        /// </summary>
        public readonly string? Alpine;
        /// <summary>
        /// Docker image for calico_cni (string)
        /// </summary>
        public readonly string? CalicoCni;
        /// <summary>
        /// Docker image for calico_controllers (string)
        /// </summary>
        public readonly string? CalicoControllers;
        /// <summary>
        /// Docker image for calico_ctl (string)
        /// </summary>
        public readonly string? CalicoCtl;
        /// <summary>
        /// Docker image for calico_flex_vol (string)
        /// </summary>
        public readonly string? CalicoFlexVol;
        /// <summary>
        /// Docker image for calico_node (string)
        /// </summary>
        public readonly string? CalicoNode;
        /// <summary>
        /// Docker image for canal_cni (string)
        /// </summary>
        public readonly string? CanalCni;
        /// <summary>
        /// Docker image for canal_flannel (string)
        /// </summary>
        public readonly string? CanalFlannel;
        /// <summary>
        /// Docker image for canal_flex_vol (string)
        /// </summary>
        public readonly string? CanalFlexVol;
        /// <summary>
        /// Docker image for canal_node (string)
        /// </summary>
        public readonly string? CanalNode;
        /// <summary>
        /// Docker image for cert_downloader (string)
        /// </summary>
        public readonly string? CertDownloader;
        /// <summary>
        /// Docker image for coredns (string)
        /// </summary>
        public readonly string? Coredns;
        /// <summary>
        /// Docker image for coredns_autoscaler (string)
        /// </summary>
        public readonly string? CorednsAutoscaler;
        /// <summary>
        /// Docker image for dnsmasq (string)
        /// </summary>
        public readonly string? Dnsmasq;
        /// <summary>
        /// Docker image for etcd (string)
        /// </summary>
        public readonly string? Etcd;
        /// <summary>
        /// Docker image for flannel (string)
        /// </summary>
        public readonly string? Flannel;
        /// <summary>
        /// Docker image for flannel_cni (string)
        /// </summary>
        public readonly string? FlannelCni;
        /// <summary>
        /// Docker image for ingress (string)
        /// </summary>
        public readonly string? Ingress;
        /// <summary>
        /// Docker image for ingress_backend (string)
        /// </summary>
        public readonly string? IngressBackend;
        /// <summary>
        /// Docker image for kube_dns (string)
        /// </summary>
        public readonly string? KubeDns;
        /// <summary>
        /// Docker image for kube_dns_autoscaler (string)
        /// </summary>
        public readonly string? KubeDnsAutoscaler;
        /// <summary>
        /// Docker image for kube_dns_sidecar (string)
        /// </summary>
        public readonly string? KubeDnsSidecar;
        /// <summary>
        /// Docker image for kubernetes (string)
        /// </summary>
        public readonly string? Kubernetes;
        /// <summary>
        /// Docker image for kubernetes_services_sidecar (string)
        /// </summary>
        public readonly string? KubernetesServicesSidecar;
        /// <summary>
        /// Docker image for metrics_server (string)
        /// </summary>
        public readonly string? MetricsServer;
        /// <summary>
        /// Docker image for nginx_proxy (string)
        /// </summary>
        public readonly string? NginxProxy;
        /// <summary>
        /// Docker image for nodelocal (string)
        /// </summary>
        public readonly string? Nodelocal;
        /// <summary>
        /// Docker image for pod_infra_container (string)
        /// </summary>
        public readonly string? PodInfraContainer;
        /// <summary>
        /// Docker image for weave_cni (string)
        /// </summary>
        public readonly string? WeaveCni;
        /// <summary>
        /// Docker image for weave_node (string)
        /// </summary>
        public readonly string? WeaveNode;
        /// <summary>
        /// Docker image for windows_pod_infra_container (string)
        /// </summary>
        public readonly string? WindowsPodInfraContainer;

        [OutputConstructor]
        private ClusterSystemImages(
            string? aciCniDeployContainer,

            string? aciControllerContainer,

            string? aciHostContainer,

            string? aciMcastContainer,

            string? aciOpflexContainer,

            string? aciOvsContainer,

            string? alpine,

            string? calicoCni,

            string? calicoControllers,

            string? calicoCtl,

            string? calicoFlexVol,

            string? calicoNode,

            string? canalCni,

            string? canalFlannel,

            string? canalFlexVol,

            string? canalNode,

            string? certDownloader,

            string? coredns,

            string? corednsAutoscaler,

            string? dnsmasq,

            string? etcd,

            string? flannel,

            string? flannelCni,

            string? ingress,

            string? ingressBackend,

            string? kubeDns,

            string? kubeDnsAutoscaler,

            string? kubeDnsSidecar,

            string? kubernetes,

            string? kubernetesServicesSidecar,

            string? metricsServer,

            string? nginxProxy,

            string? nodelocal,

            string? podInfraContainer,

            string? weaveCni,

            string? weaveNode,

            string? windowsPodInfraContainer)
        {
            AciCniDeployContainer = aciCniDeployContainer;
            AciControllerContainer = aciControllerContainer;
            AciHostContainer = aciHostContainer;
            AciMcastContainer = aciMcastContainer;
            AciOpflexContainer = aciOpflexContainer;
            AciOvsContainer = aciOvsContainer;
            Alpine = alpine;
            CalicoCni = calicoCni;
            CalicoControllers = calicoControllers;
            CalicoCtl = calicoCtl;
            CalicoFlexVol = calicoFlexVol;
            CalicoNode = calicoNode;
            CanalCni = canalCni;
            CanalFlannel = canalFlannel;
            CanalFlexVol = canalFlexVol;
            CanalNode = canalNode;
            CertDownloader = certDownloader;
            Coredns = coredns;
            CorednsAutoscaler = corednsAutoscaler;
            Dnsmasq = dnsmasq;
            Etcd = etcd;
            Flannel = flannel;
            FlannelCni = flannelCni;
            Ingress = ingress;
            IngressBackend = ingressBackend;
            KubeDns = kubeDns;
            KubeDnsAutoscaler = kubeDnsAutoscaler;
            KubeDnsSidecar = kubeDnsSidecar;
            Kubernetes = kubernetes;
            KubernetesServicesSidecar = kubernetesServicesSidecar;
            MetricsServer = metricsServer;
            NginxProxy = nginxProxy;
            Nodelocal = nodelocal;
            PodInfraContainer = podInfraContainer;
            WeaveCni = weaveCni;
            WeaveNode = weaveNode;
            WindowsPodInfraContainer = windowsPodInfraContainer;
        }
    }
}
