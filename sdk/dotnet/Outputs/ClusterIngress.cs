// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Rke.Outputs
{

    [OutputType]
    public sealed class ClusterIngress
    {
        public readonly bool? DefaultBackend;
        /// <summary>
        /// Ingress controller DNS policy. `ClusterFirstWithHostNet`, `ClusterFirst`, `Default`, and `None` are supported. [K8S dns Policy](https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy) (string)
        /// </summary>
        public readonly string? DnsPolicy;
        /// <summary>
        /// Extra arguments for scheduler service (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object>? ExtraArgs;
        /// <summary>
        /// Node selector key pair (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object>? NodeSelector;
        /// <summary>
        /// Network provider options (map)
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Options;
        /// <summary>
        /// Monitoring provider (string)
        /// </summary>
        public readonly string? Provider;

        [OutputConstructor]
        private ClusterIngress(
            bool? defaultBackend,

            string? dnsPolicy,

            ImmutableDictionary<string, object>? extraArgs,

            ImmutableDictionary<string, object>? nodeSelector,

            ImmutableDictionary<string, object>? options,

            string? provider)
        {
            DefaultBackend = defaultBackend;
            DnsPolicy = dnsPolicy;
            ExtraArgs = extraArgs;
            NodeSelector = nodeSelector;
            Options = options;
            Provider = provider;
        }
    }
}
